window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"practicuscore": {"fullname": "practicuscore", "modulename": "practicuscore", "kind": "module", "doc": "<h1 id=\"practicus-ai-sdk-v2484\">Practicus AI SDK v24.8.4</h1>\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>Welcome to the Practicus AI SDK, a Python library that allows you to interact with Practicus AI Regions,\nmanage Workers, deploy and manage machine learning Models and Apps, and orchestrate distributed jobs.</p>\n\n<p>This SDK provides an intuitive Pythonic interface for common operations, such as:</p>\n\n<ul>\n<li>Connecting to Practicus AI Regions and managing their resources.</li>\n<li>Creating and working with Workers and Workspaces.</li>\n<li>Building and deploying ML models and GenAI apps, managing data connections</li>\n<li>Running distributed workloads (Spark, Dask, Torch) seamlessly.</li>\n<li>Accessing notebooks, experiments tracking, and more.</li>\n</ul>\n\n<h2 id=\"key-functionality\">Key Functionality</h2>\n\n<p>Below are some of the helper classes, interfaces and functions for interacting with Practicus AI platform.</p>\n\n<h3 id=\"helper-classes\">Helper Classes</h3>\n\n<p>These static wrapper classes provide convenient <code>entrypoints</code> and <code>abstractions</code> for common operations,\nallowing you to work with Practicus AI resources efficiently:</p>\n\n<ul>\n<li><code>regions</code>: Manage and interact with Practicus AI Regions, handle login, workers, etc.</li>\n<li><code>models</code>: Deploy and manage ML models, view model prefixes and versions.</li>\n<li><code>apps</code>: Deploy and manage GenAI focused apps and APIs and their versions.</li>\n<li><code>workflows</code>: Deploy and manage workflows (e.g., Airflow DAGs).</li>\n<li><code>connections</code>: Manage and create data source connections (e.g., S3, SQL).</li>\n<li><code>distributed</code>: Work with distributed job clusters and frameworks.</li>\n<li><code>containers</code>: Build and use custom container images.</li>\n<li><code>auth</code>: Authentication helpers for logging in and out of regions.</li>\n<li><code>vault</code>: Secret manager methods to save, retrieve and delete secrets in Practicus AI Vault.</li>\n<li><code>git</code>: Git helper methods to sync remote repositories.</li>\n<li><code>engines</code>: Interact with data processing engines like Spark.</li>\n<li><code>experiments</code>: Manage experiment tracking services, such as MLFlow.</li>\n<li><code>notebooks</code>: Access Jupyter notebooks running on workers.</li>\n<li><code>quality</code>: Code quality (linting, formatting) utilities.</li>\n</ul>\n\n<h3 id=\"core-classes\">Core Classes</h3>\n\n<p>These core classes represent the primary entities you'll interact with the most:</p>\n\n<ul>\n<li><code>Region</code>: Represents a Practicus AI Region (control plane) where you can manage workers, models, apps, and connections.</li>\n<li><code>Worker</code>: Represents a compute resource (pod) in the Region where you can run tasks, load data, open notebooks, and more.</li>\n<li><code>Process</code>: Represents an OS-level process running on a Worker that can load and manipulate data, run transformations,\nexecute code snippets, build models, and perform predictions\u2014all directly on the Worker.</li>\n</ul>\n\n<h3 id=\"sample-usage\">Sample Usage</h3>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Connect to the default region</span>\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">get_default_region</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Create a worker</span>\n<span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_worker</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Deploy a model</span>\n<span class=\"n\">dynamic_url</span><span class=\"p\">,</span> <span class=\"n\">version_url</span><span class=\"p\">,</span> <span class=\"n\">meta_url</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">deploy_model</span><span class=\"p\">(</span>\n    <span class=\"n\">deployment_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-model-service&quot;</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-prefix&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-model&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Run a task on a worker</span>\n<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">run_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;analysis.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">files_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;project_code/&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Task successful:&quot;</span><span class=\"p\">,</span> <span class=\"n\">success</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h3 id=\"alias-functions\">Alias Functions</h3>\n\n<p>In addition to using the <code>Region</code> or it's helper <code>regions</code> classes directly, the SDK provides some alias functions\nas shortcuts that directly map to commonly used methods in a selected (or default) region. This allows you to perform\nactions without explicitly fetching or referencing a <code>Region</code> object first:</p>\n\n<ul>\n<li><code>get_default_region()</code>: Retrieves the default Practicus AI region previously configured.</li>\n<li><code>create_worker()</code>: Creates a new worker (pod) in the default or current region.</li>\n<li><code>current_region()</code>: Returns the currently selected region, if any.</li>\n<li><code>get_local_worker()</code>: Returns the worker representing the current environment if the code is running inside one.</li>\n<li><code>get_or_create_worker()</code>: Retrieves an existing worker or creates a new one if none is suitable.</li>\n<li><code>running_on_a_worker()</code>: Checks if the current code is executing on a Practicus AI worker.</li>\n<li><code>get_region()</code>: Retrieves a specific region by key (username@host_dns).</li>\n<li><code>get_region_list()</code>: Returns a list of all configured and accessible regions.</li>\n<li><code>region_factory()</code>: Creates a <code>Region</code> instance from a given configuration.</li>\n<li><code>set_default_region()</code>: Changes which region is considered the default.</li>\n<li><code>create_workspace()</code>: Creates a new Practicus AI Workspace (an interactive development environment).</li>\n<li><code>run_task()</code>: Runs a given Python or shell script task on a worker in the default or specified region.</li>\n</ul>\n\n<p>These aliases simplify calls to region-dependent functions, making code more concise and direct.\nFor example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Instead of:</span>\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">get_default_region</span><span class=\"p\">()</span>\n<span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_worker</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># You can do:</span>\n<span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">create_worker</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"practicus-ai-documentation\">Practicus AI Documentation</h2>\n\n<p>For help on getting started with the Practicus AI platform and tutorials, please visit:\n<a href=\"https://docs.practicus.ai\">Practicus AI Documentation</a></p>\n"}, "practicuscore.regions": {"fullname": "practicuscore.regions", "modulename": "practicuscore", "qualname": "regions", "kind": "class", "doc": "<p>Provides a simplified, high-level interface for managing and interacting with Practicus AI Regions.</p>\n\n<p>A <code>Region</code> in Practicus AI represents a logical control plane environment\u2014typically isolated via\nKubernetes namespaces\u2014where resources such as workers, workspaces, model hosting, applications\nand tasks are managed. The <code>regions</code> class offers convenient static methods to authenticate, select,\nand operate on these remote execution environments without requiring direct instantiation of\n<code>Region</code> objects.</p>\n\n<p>By default, operations on regions occur against the currently active (default) region, but the <code>regions</code>\nclass allows selecting other regions, logging in or out of different regions, and performing tasks like\nlaunching workers or running remote scripts. It abstracts away the complexities of region-specific APIs\nand credentials.</p>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><code>Region</code>: A Practicus AI control plane endpoint. Multiple regions can be configured and managed.</li>\n<li><code>Worker</code>: A Kubernetes pod in a region that executes code, runs notebooks, tasks, distributed jobs, builds models, apps..</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Login to a specific region</span>\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://my-practicus-region.example.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">&quot;user@example.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">&quot;mypassword&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Set the default region (if multiple are configured)</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"o\">.</span><span class=\"n\">set_default_region</span><span class=\"p\">(</span><span class=\"s2\">&quot;user@my-practicus-region.example.com&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.regions.running_on_a_worker": {"fullname": "practicuscore.regions.running_on_a_worker", "modulename": "practicuscore", "qualname": "regions.running_on_a_worker", "kind": "function", "doc": "<p>Checks if the current code is executing inside a Practicus AI Worker.</p>\n\n<p>This is useful for conditional logic that depends on whether the code runs locally or on a remote\nPracticus AI-managed environment.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if this code is running inside a Practicus AI Worker pod; False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.login": {"fullname": "practicuscore.regions.login", "modulename": "practicuscore", "qualname": "regions.login", "kind": "function", "doc": "<p>Authenticates the user to a Practicus AI region and returns a <code>Region</code> instance.</p>\n\n<p>The login process uses the provided credentials (password or tokens) to obtain a refresh token and\naccess token. Once authenticated, the region and associated credentials are stored so they can be\nreused in subsequent sessions, unless <code>save_config</code> is set to False.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>url (str | None): The base URL of the Practicus AI region, e.g. \"https://my-region.example.com\"\nYou can also define <code>PRT_URL</code> OS Environment variable and skip providing url.</li>\n<li>email (str | None): The user's email associated with the Practicus AI account.\nIf a token is provided, the email inside the token has priority and the email you provide is ignored.</li>\n<li>password (str | None): The user's password. Optional if refresh_token or access_token are provided.</li>\n<li>one_time_password (str | None): If logging in with a password AND Multi-factor Authentication (MFA) is enabled,\nyou must also pass the one-time password from your authenticator app e.g. Google Authenticator.</li>\n<li>refresh_token (str | None): Existing refresh token; can be used instead of password-based login.</li>\n<li>access_token (str | None): An existing valid access token to bypass credential-based login.</li>\n<li>token (str | None): An existing valid refresh or access token. Token type is automatically detected.\nYou can also define <code>PRT_TOKEN</code> OS Environment variable and skip providing tokens.</li>\n<li>save_password (bool): If True, saves the entered password securely for future sessions.</li>\n<li>save_config (bool): If True, persists the configuration so that subsequent sessions do not require login.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Region</code> object representing the authenticated Practicus AI environment.</p>\n</blockquote>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://my-practicus-region.example.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">&quot;user@example.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">&quot;mypassword&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">save_password</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">one_time_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">access_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">save_password</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">save_config</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.logout": {"fullname": "practicuscore.regions.logout", "modulename": "practicuscore", "qualname": "regions.logout", "kind": "function", "doc": "<p>Logs out of one or all Practicus AI regions, removing stored credentials from local configuration.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>region_key (str | None): The key of the region to logout from. If None and <code>all_regions</code> is False,\nno action will be taken.</li>\n<li>all_regions (bool): If True (default), logs out from all known regions. If False, you must specify <code>region_key</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">region_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">all_regions</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.regions.get_region_list": {"fullname": "practicuscore.regions.get_region_list", "modulename": "practicuscore", "qualname": "regions.get_region_list", "kind": "function", "doc": "<p>Retrieves a list of all configured and logged-in Practicus AI regions.</p>\n\n<p>Each entry in the returned list is a <code>Region</code> instance containing connection and authentication info.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A read-only <code>PrtList</code> of <code>Region</code> objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.get_region": {"fullname": "practicuscore.regions.get_region", "modulename": "practicuscore", "qualname": "regions.get_region", "kind": "function", "doc": "<p>Retrieves a specific Practicus AI region based on the provided region key or returns the default region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>region_key (str | None): A region identifier in either <code>username@region_address</code> or <code>region_address</code> format.\nIf not provided, the default region is returned.</li>\n</ul>\n\n<p><strong>Returns:</strong>\nA <code>Region</code> object.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># If multiple regions are available:</span>\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"o\">.</span><span class=\"n\">get_region</span><span class=\"p\">(</span><span class=\"s2\">&quot;alice@my-practicus-region.example.com&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If none provided, defaults to last used or configured default:</span>\n<span class=\"n\">default_region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"o\">.</span><span class=\"n\">get_region</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">region_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.get_default_region": {"fullname": "practicuscore.regions.get_default_region", "modulename": "practicuscore", "qualname": "regions.get_default_region", "kind": "function", "doc": "<p>Retrieves the default Practicus AI region. The default region is typically the one last logged-in to\nor explicitly set using <code>set_default_region</code>.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The default <code>Region</code> instance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.current_region": {"fullname": "practicuscore.regions.current_region", "modulename": "practicuscore", "qualname": "regions.current_region", "kind": "function", "doc": "<p>Returns the currently active Practicus AI region. If the code is running inside a worker, this is\nthe region associated with that worker. Otherwise, this returns the default configured region.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Region</code> object for the current environment.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.region_factory": {"fullname": "practicuscore.regions.region_factory", "modulename": "practicuscore", "qualname": "regions.region_factory", "kind": "function", "doc": "<p>Creates or retrieves a <code>Region</code> instance based on a provided worker configuration or returns the\ncurrent/default region if none is provided.</p>\n\n<p>This is useful in contexts where you may have a serialized or external configuration that specifies a region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): A configuration object or JSON path/dict\nthat may contain region connection details. If None, returns the current region.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Region</code> instance determined by the provided configuration or the current region.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.set_default_region": {"fullname": "practicuscore.regions.set_default_region", "modulename": "practicuscore", "qualname": "regions.set_default_region", "kind": "function", "doc": "<p>Sets the default Practicus AI region. Subsequent operations that do not explicitly specify a region\nwill use this default.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>region_key (str): The region identifier, e.g. <code>username@my-region.example.com</code> or just <code>my-region.example.com</code>\nif only one user is associated with it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the region is successfully set as default; False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">region_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.get_local_worker": {"fullname": "practicuscore.regions.get_local_worker", "modulename": "practicuscore", "qualname": "regions.get_local_worker", "kind": "function", "doc": "<p>Retrieves the <code>Worker</code> instance representing the current environment if the code is running inside a worker pod.</p>\n\n<p><strong>Returns:</strong>\nA <code>Worker</code> instance associated with the local environment.</p>\n\n<p><strong>Note:</strong> If not running inside a worker, this will raise an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.create_worker": {"fullname": "practicuscore.regions.create_worker", "modulename": "practicuscore", "qualname": "regions.create_worker", "kind": "function", "doc": "<p>Creates a new remote Practicus AI Worker in the current or specified region.</p>\n\n<p>A worker is a computational pod that can run code, host Jupyter notebooks, build models etc.\nBy default, it uses the current region unless <code>worker_config</code> points to another region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): Optional configuration for the worker. Accepts\na JSON path, a dict, or a <code>WorkerConfig</code> object. If None, uses the default configuration.</li>\n<li>wait_until_ready (bool | None): If True, the method waits until the worker is fully provisioned and ready.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Worker</code> instance representing the newly created remote pod.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">wait_until_ready</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.create_workspace": {"fullname": "practicuscore.regions.create_workspace", "modulename": "practicuscore", "qualname": "regions.create_workspace", "kind": "function", "doc": "<p>Creates a new Practicus AI Workspace (a special type of Worker) in the selected region.</p>\n\n<p>A workspace is a worker configured for interactive development and includes Practicus AI Studio,\noffice tools and more.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): Configuration for the workspace. Accepts a JSON path,\na dict, or <code>WorkerConfig</code>. If None, uses the default configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Worker</code> instance configured as a workspace.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.get_or_create_worker": {"fullname": "practicuscore.regions.get_or_create_worker", "modulename": "practicuscore", "qualname": "regions.get_or_create_worker", "kind": "function", "doc": "<p>Attempts to retrieve an existing worker (if it matches the provided configuration) or creates one if not found.</p>\n\n<p>This is useful for idempotent deployments where you do not want to create duplicates if the worker\nalready exists.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): The configuration to check against existing workers.\nIf not provided, defaults are used.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Worker</code> instance, either existing or newly created.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.run_task": {"fullname": "practicuscore.regions.run_task", "modulename": "practicuscore", "qualname": "regions.run_task", "kind": "function", "doc": "<p>Runs a specified script (Python or shell) as a \"task\" on a newly created remote worker.</p>\n\n<p>Common uses include running batch jobs, scheduled tasks, or CI/CD pipeline steps in a controlled environment.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>file_name (str | None): The Python (.py) or shell (.sh) script to run after files are uploaded.</li>\n<li>files_path (str | None): Directory containing files to upload. Defaults to current directory.</li>\n<li>upload_files (bool): Default is True. Uploads files defined by files_path, or current dir if files_path is not defined.\nIf False, you must upload files separately e.g. using automated git sync,\nor run a file already in ~/my or ~/shared folder and set file_path_on_worker param.</li>\n<li>file_path_on_worker (str | None): If you are not uploading files, you must set file_path_on_worker param\nto the <em>full path</em> of the Python (.py) or shell (.sh) script to run. E.g. ~/my/projects/repo/task.py\nThis file must already be present on the Worker e.g. by using automated git sync, or a file already in ~/my or ~/shared folders.</li>\n<li>worker_config (WorkerConfig | str | dict | None): Configuration for the remote worker.</li>\n<li>terminate_on_completion (bool): If True, terminates the worker after completion.</li>\n<li>capture_task_output (bool): If True, captures and logs the script's stdout and stderr.</li>\n<li>python_venv_name (str | None): Name of a Python virtual environment to use on the worker.</li>\n<li>max_files_to_upload (int): Max number of files to upload.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple of <code>(Worker, bool)</code> where Worker is the worker used or created for this task,\n           and bool indicates if the task succeeded.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">files_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">upload_files</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">file_path_on_worker</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">terminate_on_completion</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">capture_task_output</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">python_venv_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_files_to_upload</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">250</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.auto_login": {"fullname": "practicuscore.regions.auto_login", "modulename": "practicuscore", "qualname": "regions.auto_login", "kind": "function", "doc": "<p>Automatically logs into the Practicus AI region when running within a known Practicus AI environment\n(e.g., a worker or workspace) that already has embedded credentials. Useful for automations and\ninternal scenarios where explicit login is not required.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The default <code>Region</code> instance after auto-login.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.change_password": {"fullname": "practicuscore.regions.change_password", "modulename": "practicuscore", "qualname": "regions.change_password", "kind": "function", "doc": "<p>Changes the current user's password in the default Practicus AI region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>old_password (str): The current password.</li>\n<li>new_password (str): The new desired password.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">old_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.regions.get_access_token": {"fullname": "practicuscore.regions.get_access_token", "modulename": "practicuscore", "qualname": "regions.get_access_token", "kind": "function", "doc": "<p>Retrieves a new access token for the currently active region using the stored refresh token.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The new access token as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.get_refresh_token": {"fullname": "practicuscore.regions.get_refresh_token", "modulename": "practicuscore", "qualname": "regions.get_refresh_token", "kind": "function", "doc": "<p>Retrieves a new refresh token for the currently active region using the stored refresh token.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The new refresh token as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.get_refresh_and_access_token": {"fullname": "practicuscore.regions.get_refresh_and_access_token", "modulename": "practicuscore", "qualname": "regions.get_refresh_and_access_token", "kind": "function", "doc": "<p>Retrieves both a refresh token and an updated access token for the current region session.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple <code>(refresh_token, access_token)</code>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.regions.get_workspace_credentials": {"fullname": "practicuscore.regions.get_workspace_credentials", "modulename": "practicuscore", "qualname": "regions.get_workspace_credentials", "kind": "function", "doc": "<p>Retrieves the username and password credentials for a specified workspace instance.</p>\n\n<p>The username is typically derived from the user's email address. The password is a managed credential\nprovided by the region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>instance_id (str): The identifier of the workspace. View available instances via <code>region.worker_list</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple <code>(username, password)</code> for the selected workspace.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.models": {"fullname": "practicuscore.models", "modulename": "practicuscore", "qualname": "models", "kind": "class", "doc": "<p>Provides a high-level interface for managing machine learning models within Practicus AI.</p>\n\n<p>The <code>models</code> class allows you to:</p>\n\n<ul>\n<li>Deploy models to a Practicus AI region for serving predictions and model metadata.</li>\n<li>Generate and manage model configurations, including model signatures and metadata.</li>\n<li>Acquire short-lived session tokens for model APIs (e.g., for prediction or uploading a new model version).</li>\n<li>Package and unpackage model artifacts using a standardized zip archive, simplifying model deployment flows.</li>\n</ul>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Model Deployment:</strong> Uploading a model and its associated files (artifacts, weights, metadata) to a server\naccessible via a stable API endpoint.</li>\n<li><strong>Model Config &amp; Signature:</strong> Capturing and storing metadata about the model\u2019s input schema, output schema,\nproblem type, and version information. This information is crucial for reproducibility, explainability, and\nconsistent model version management.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Deploy a model to the current region</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span>\n    <span class=\"n\">deployment_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_model_service&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;mymodel&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;model_v1&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.models.ModelConfig": {"fullname": "practicuscore.models.ModelConfig", "modulename": "practicuscore", "qualname": "models.ModelConfig", "kind": "class", "doc": "<p>Usage docs: <a href=\"https://docs.pydantic.dev/2.10/concepts/models/\">https://docs.pydantic.dev/2.10/concepts/models/</a></p>\n\n<p>A base class for creating Pydantic models.</p>\n\n<p>Attributes:\n    __class_vars__: The names of the class variables defined on the model.\n    __private_attributes__: Metadata about the private attributes of the model.\n    __signature__: The synthesized <code>__init__</code> [<code>Signature</code>][inspect.Signature] of the model.</p>\n\n<pre><code>__pydantic_complete__: Whether model building is completed, or if there are still undefined fields.\n__pydantic_core_schema__: The core schema of the model.\n__pydantic_custom_init__: Whether the model has a custom `__init__` function.\n__pydantic_decorators__: Metadata containing the decorators defined on the model.\n    This replaces `Model.__validators__` and `Model.__root_validators__` from Pydantic V1.\n__pydantic_generic_metadata__: Metadata for generic models; contains data used for a similar purpose to\n    __args__, __origin__, __parameters__ in typing-module generics. May eventually be replaced by these.\n__pydantic_parent_namespace__: Parent namespace of the model, used for automatic rebuilding of models.\n__pydantic_post_init__: The name of the post-init method for the model, if defined.\n__pydantic_root_model__: Whether the model is a [`RootModel`][pydantic.root_model.RootModel].\n__pydantic_serializer__: The `pydantic-core` `SchemaSerializer` used to dump instances of the model.\n__pydantic_validator__: The `pydantic-core` `SchemaValidator` used to validate instances of the model.\n\n__pydantic_fields__: A dictionary of field names and their corresponding [`FieldInfo`][pydantic.fields.FieldInfo] objects.\n__pydantic_computed_fields__: A dictionary of computed field names and their corresponding [`ComputedFieldInfo`][pydantic.fields.ComputedFieldInfo] objects.\n\n__pydantic_extra__: A dictionary containing extra values, if [`extra`][pydantic.config.ConfigDict.extra]\n    is set to `'allow'`.\n__pydantic_fields_set__: The names of fields explicitly set during instantiation.\n__pydantic_private__: Values of private attributes set on the model instance.\n</code></pre>\n", "bases": "practicuscore.api_base.PrtBaseModel"}, "practicuscore.models.deploy": {"fullname": "practicuscore.models.deploy", "modulename": "practicuscore", "qualname": "models.deploy", "kind": "function", "doc": "<p>Deploys a model to the currently selected Practicus AI region.</p>\n\n<p>This operation uploads model artifacts and registers them under the specified model name and prefix,\nmaking them accessible via stable API endpoints. If multiple versions of a model exist, the <code>prefix</code>\ncan be used to route requests to the latest version dynamically.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>deployment_key (str): The key identifying the model deployment service, provided by your Practicus AI admin.</li>\n<li>prefix (str): A prefix used to group and identify model versions under a common name.</li>\n<li>model_name (str): The name of this specific model version.</li>\n<li>model_dir (str | None): The directory containing model files. If None, uses the current working directory.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>tuple[str, str, str]: A tuple containing:\n<ol>\n<li>API URL for dynamic version routing.</li>\n<li>API URL for the uploaded version.</li>\n<li>API URL to read metadata of the model.</li>\n</ol></li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">api_url_dynamic</span><span class=\"p\">,</span> <span class=\"n\">api_url_version</span><span class=\"p\">,</span> <span class=\"n\">api_url_metadata</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span>\n    <span class=\"n\">deployment_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_model_service&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;mymodel&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;model_v1&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">deployment_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.get_session_token": {"fullname": "practicuscore.models.get_session_token", "modulename": "practicuscore", "qualname": "models.get_session_token", "kind": "function", "doc": "<p>Retrieves a short-lived session token to interact with a model's API\u2014either for making predictions\n(inference) or uploading a new model version.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>api_url (str): The base URL of the model API, e.g. \"https://practicus.company.com/models/my-model/\".</li>\n<li>for_upload (bool): If True, requests a token with permissions suitable for model uploads.</li>\n<li>retry (int): Number of retry attempts if the token request fails.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: A token string if successful, or None if unsuccessful.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">get_session_token</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://practicus.company.com/models/mymodel/&quot;</span><span class=\"p\">,</span> <span class=\"n\">for_upload</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">token</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Got a session token for model uploads!&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Failed to retrieve a session token.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">api_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">for_upload</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">retry</span><span class=\"o\">=</span><span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.load_config": {"fullname": "practicuscore.models.load_config", "modulename": "practicuscore", "qualname": "models.load_config", "kind": "function", "doc": "<p>Loads a <code>ModelConfig</code> object from a dictionary or a JSON string/file.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>model_config (dict | str):\n<ul>\n<li>If dict, directly interprets it as model configuration.</li>\n<li>If str, treats it as either a JSON string or a path to a JSON file, and parses it.</li>\n</ul></li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>ModelConfig | None: A <code>ModelConfig</code> instance if successful, or None if parsing fails.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">model_conf</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"s2\">&quot;model_config.json&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Loaded model config:&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_conf</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_def</span><span class=\"o\">.</span><span class=\"n\">ModelConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.get_mlflow_data_type": {"fullname": "practicuscore.models.get_mlflow_data_type", "modulename": "practicuscore", "qualname": "models.get_mlflow_data_type", "kind": "function", "doc": "<p>Infers the MLflow data type for a given DataFrame column. MLflow requires explicit schema types\nfor model signatures, and this method maps Pandas dtypes to MLflow data types.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>df (pd.DataFrame): The DataFrame containing the data.</li>\n<li>col_name (str): The column name to infer the type for.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>DataType: An MLflow DataType object (e.g., DataType.double, DataType.string).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">mlflow_dtype</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">get_mlflow_data_type</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"s2\">&quot;age&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Inferred MLflow data type:&quot;</span><span class=\"p\">,</span> <span class=\"n\">mlflow_dtype</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">df</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">col_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;DataType&#39;</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.get_model_signature": {"fullname": "practicuscore.models.get_model_signature", "modulename": "practicuscore", "qualname": "models.get_model_signature", "kind": "function", "doc": "<p>Generates a MLflow <code>ModelSignature</code> object from a given DataFrame and optional target column.</p>\n\n<p>A model signature captures input and output schema for a model. The <code>target</code> column (if provided)\nis treated as the output schema, and all other columns are treated as inputs.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>df (pd.DataFrame): The DataFrame representing the model\u2019s training or inference data.</li>\n<li>target (str | None): The column name representing the model's target variable, if any.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>ModelSignature: An MLflow ModelSignature object describing the model\u2019s input and output schema.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">signature</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">get_model_signature</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s2\">&quot;label&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Model signature:&quot;</span><span class=\"p\">,</span> <span class=\"n\">signature</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">df</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"s1\">&#39;ModelSignature&#39;</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.get_model_signature_json": {"fullname": "practicuscore.models.get_model_signature_json", "modulename": "practicuscore", "qualname": "models.get_model_signature_json", "kind": "function", "doc": "<p>Generates a JSON representation of the model signature from a DataFrame and optional target.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>df (pd.DataFrame): The data to infer schema from.</li>\n<li>target (str | None): The target column for output schema, if applicable.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: A JSON string representing the model signature.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">signature_json</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">get_model_signature_json</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s2\">&quot;label&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">signature_json</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">df</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.create_model_config": {"fullname": "practicuscore.models.create_model_config", "modulename": "practicuscore", "qualname": "models.create_model_config", "kind": "function", "doc": "<p>Creates a <code>ModelConfig</code> instance from a DataFrame and metadata about the model.</p>\n\n<p>This method generates a model signature and bundles it with additional information like\nmodel name, problem type, version, and performance score.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>df (pd.DataFrame): DataFrame from which to infer the model\u2019s input/output schema.</li>\n<li>target (str | None): The target column for output schema, if any.</li>\n<li>model_name (str | None): A name for the model.</li>\n<li>problem_type (str | None): The type of problem (e.g., \"classification\", \"regression\").</li>\n<li>version_name (str | None): A version identifier for the model.</li>\n<li>final_model (str | None): A reference or path to the final model artifact.</li>\n<li>score (float | None): A performance metric value (e.g., accuracy or RMSE).</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>ModelConfig: The created <code>ModelConfig</code> object.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">model_conf</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">create_model_config</span><span class=\"p\">(</span>\n    <span class=\"n\">df</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s2\">&quot;label&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_classifier&quot;</span><span class=\"p\">,</span> <span class=\"n\">problem_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;classification&quot;</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"o\">=</span><span class=\"mf\">0.95</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model_conf</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">df</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>,</span><span class=\"param\">\t<span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">problem_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">version_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">final_model</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">score</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_def</span><span class=\"o\">.</span><span class=\"n\">ModelConfig</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.zip": {"fullname": "practicuscore.models.zip", "modulename": "practicuscore", "qualname": "models.zip", "kind": "function", "doc": "<p>Packages selected files and folders into a <code>model.zip</code> archive for model deployment.</p>\n\n<p>By default, Practicus AI may automatically upload certain files (like environment configuration).\nIf you include these files in <code>model.zip</code>, it may cause ambiguity. Hence, certain known files are skipped.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>files_to_add (list[str]): A list of filenames or folder names (within <code>model_dir</code>) to include in the zip file.</li>\n<li>model_dir (str | None): The directory containing the files/folders. If None, defaults to the current directory.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">zip</span><span class=\"p\">([</span><span class=\"s2\">&quot;trained_model.pkl&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;requirements.txt&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;config_folder&quot;</span><span class=\"p\">],</span> <span class=\"n\">model_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;path/to/model/files&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">files_to_add</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">model_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.models.unzip": {"fullname": "practicuscore.models.unzip", "modulename": "practicuscore", "qualname": "models.unzip", "kind": "function", "doc": "<p>Extracts files from <code>model.zip</code> into the specified directory.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>model_dir (str | None): The directory where <code>model.zip</code> is located and where files will be extracted.\nIf None, defaults to the current directory.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">unzip</span><span class=\"p\">(</span><span class=\"n\">model_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;path/to/model/files&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># All files from model.zip are now extracted into model_dir.</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">model_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.models.get_list": {"fullname": "practicuscore.models.get_list", "modulename": "practicuscore", "qualname": "models.get_list", "kind": "function", "doc": "<p>Retrieves a list of all models known to this region.</p>\n\n<p>Each <code>ModelMeta</code> object contains metadata about a model, such as its name, versions, and associated prefix.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[ModelMeta]: A read-only list of models.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">model_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">latest_version</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">ModelMeta</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.get_deployment_list": {"fullname": "practicuscore.models.get_deployment_list", "modulename": "practicuscore", "qualname": "models.get_deployment_list", "kind": "function", "doc": "<p>Retrieves a list of all model deployments currently defined in this region.</p>\n\n<p>A <code>ModelDeployment</code> represents a deployed model service, including routing and scaling details.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[ModelDeployment]: A read-only list of model deployments.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">deployment</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">model_deployment_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">deployment</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">deployment</span><span class=\"o\">.</span><span class=\"n\">deployment_key</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">ModelDeployment</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.models.get_prefix_list": {"fullname": "practicuscore.models.get_prefix_list", "modulename": "practicuscore", "qualname": "models.get_prefix_list", "kind": "function", "doc": "<p>Retrieves a list of configured model prefixes available in this region.</p>\n\n<p>Model prefixes group related models, allowing you to organize and manage multiple versions and\ndeployments under a logical namespace.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[ModelPrefix]: A read-only list of model prefixes.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">prefix</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">model_prefix_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">.</span><span class=\"n\">prefix_name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">ModelPrefix</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps": {"fullname": "practicuscore.apps", "modulename": "practicuscore", "qualname": "apps", "kind": "class", "doc": "<p>Provides a high-level interface for managing the lifecycle of Streamlit-based apps within Practicus AI.</p>\n\n<p>The <code>apps</code> class allows you to:</p>\n\n<ul>\n<li>Deploy interactive applications (e.g., Streamlit apps) to a Practicus AI region.</li>\n<li>Obtain short-lived session tokens for interacting with the app\u2019s APIs.</li>\n<li>Test the application locally within a Practicus AI Worker environment.</li>\n<li>Integrate and call internal API functions directly for debugging or local execution.</li>\n<li>Manage multiple versions of an app (deploy new versions, delete old versions).</li>\n</ul>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>App Deployment:</strong> Uploading an app (including UI code, API code, and configuration files) to a Practicus AI region so it can be accessed via a stable URL.</li>\n<li><strong>App Prefix &amp; Name:</strong> Identifiers that allow you to maintain multiple versions of an application and route traffic appropriately.</li>\n<li><strong>Local Testing:</strong> Running the app locally on a Practicus AI Worker for development and debugging before final deployment.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Deploy an app to the current region</span>\n<span class=\"n\">ui_url</span><span class=\"p\">,</span> <span class=\"n\">api_url</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span>\n    <span class=\"n\">deployment_setting_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_app_service&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;myapp&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;app_v1&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">visible_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;My Application&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;A demo GenAI Visual App&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">icon</span><span class=\"o\">=</span><span class=\"s2\">&quot;fa:rocket&quot;</span>\n<span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;App deployed. UI:&quot;</span><span class=\"p\">,</span> <span class=\"n\">ui_url</span><span class=\"p\">,</span> <span class=\"s2\">&quot;API:&quot;</span><span class=\"p\">,</span> <span class=\"n\">api_url</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get a session token for interacting with the app\u2019s API</span>\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_session_token</span><span class=\"p\">(</span><span class=\"n\">api_url</span><span class=\"o\">=</span><span class=\"n\">api_url</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Session token:&quot;</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Test the app inside a Practicus AI Worker environment</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">test_app</span><span class=\"p\">(</span><span class=\"n\">app_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;path/to/app/files&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Delete an old version of the app</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">delete_version</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">&quot;app_v1&quot;</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;myapp&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.apps.api": {"fullname": "practicuscore.apps.api", "modulename": "practicuscore", "qualname": "apps.api", "kind": "function", "doc": "<p>Decorator for Practicus AI Application APIs.</p>\n\n<p>Args:\n    path (str): The API endpoint path.\n    spec (APISpec | None): Defines the characteristics and behavior of a Practicus AI App API endpoint,\n        focusing on its execution pattern, operational properties, and context.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">spec</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">APISpec</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.apps.deploy": {"fullname": "practicuscore.apps.deploy", "modulename": "practicuscore", "qualname": "apps.deploy", "kind": "function", "doc": "<p>Deploys an application to the currently selected Practicus AI region.</p>\n\n<p>This operation packages the app's UI code, configuration, and any supporting files, and uploads them\nto the Practicus AI environment. Once deployed, the app and its API are accessible through stable URLs.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>deployment_setting_key (str): The key identifying the application deployment service (set by your admin).</li>\n<li>prefix (str): A prefix used to group and identify the app and its versions.</li>\n<li>app_name (str): A unique name for this specific version of the app.</li>\n<li>app_dir (str | None): The directory containing the app files. If None, uses the current working directory.</li>\n<li>visible_name (str | None): The user-facing name displayed in the Practicus AI interface.</li>\n<li>description (str | None): A short description of the app\u2019s purpose or functionality.</li>\n<li>startup_script (str | None): Startup script to run each time the app kubernetes pod starts.\nNote: App deployment setting can also have a startup script defined, in which case that script would run first.</li>\n<li>env_variables (dict | None): OS environment variables to pass to the App. Shared for all app versions.</li>\n<li>personal_secrets (list[str] | None): List of personal secrets to pull from the vault.\nYou can use PERSONAL_SECRET_1:NEW_OS_ENV format to rename the OS environment variable.</li>\n<li>shared_secrets (list[str] | None): Shared secrets saved by the admin in the vault.\nYou can use SHARED_SECRET_1:NEW_OS_ENV format to rename the OS environment variable.</li>\n<li>icon (str | None): A Font Awesome icon name (e.g., \"fa:rocket\") to represent the app.\nOnly use Free and v5.x icons. To search, please visit <a href=\"https://fontawesome.com/v5/search?ic=free\">https://fontawesome.com/v5/search?ic=free</a></li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>tuple[str, str]: A tuple containing:\n<ol>\n<li>The UI URL of the deployed app.</li>\n<li>The API URL of the deployed app.</li>\n</ol></li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">ui_url</span><span class=\"p\">,</span> <span class=\"n\">api_url</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span>\n    <span class=\"n\">deployment_setting_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-deployment-setting&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;apps&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-app&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">visible_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;MyApp&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;A sample application&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">icon</span><span class=\"o\">=</span><span class=\"s2\">&quot;fa-rocket&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">deployment_setting_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">app_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visible_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">startup_script</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">env_variables</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">personal_secrets</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">shared_secrets</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_session_token": {"fullname": "practicuscore.apps.get_session_token", "modulename": "practicuscore", "qualname": "apps.get_session_token", "kind": "function", "doc": "<p>Obtains a short-lived session token for interacting with the application's API.</p>\n\n<p>Use this token to call the app\u2019s API endpoints, or to upload new versions of the app (if <code>for_upload</code> is True).</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>api_url (str | None): The app\u2019s API URL. E.g. \"https://practicus.company.com/apps/my-app/api/v5/\"</li>\n<li>app_id (int | None): The app\u2019s unique identifier. If provided, it can be used instead of <code>api_url</code>.</li>\n<li>for_upload (bool): If True, requests a token with permissions to upload new versions (admin privileges may be required).</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: A session token string.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_session_token</span><span class=\"p\">(</span><span class=\"n\">api_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://practicus.company.com/apps/my-app/api/v5/&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Session token:&quot;</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">api_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">app_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">for_upload</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.test_app": {"fullname": "practicuscore.apps.test_app", "modulename": "practicuscore", "qualname": "apps.test_app", "kind": "function", "doc": "<p>Tests the application by running it locally inside a Practicus AI Worker environment.</p>\n\n<p>This method launches the Streamlit app so you can interact with it through the Practicus AI Studio\nenvironment (e.g., via a port-forwarded URL). Useful for iterative development and debugging before\ndeploying to a production environment.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>app_dir (str | None): The directory containing the app files. If None, uses the current working directory.</li>\n<li>kill_existing_app (bool): If True, terminates any previously running test app instances on this worker\nbefore launching the new one.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">test_app</span><span class=\"p\">(</span><span class=\"n\">app_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_app_dir&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Open the provided URL in Practicus AI Studio to interact with the test app.</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">app_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">kill_existing_app</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.apps.delete": {"fullname": "practicuscore.apps.delete", "modulename": "practicuscore", "qualname": "apps.delete", "kind": "function", "doc": "<p>Deletes an application from the current region.</p>\n\n<p>Either <code>app_id</code> or both <code>prefix</code> and <code>app_name</code> should be provided to identify the app.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>app_id (int | None): The unique identifier of the app. If provided, overrides <code>prefix</code> and <code>app_name</code>.</li>\n<li>prefix (str | None): The app prefix to identify which group of apps it belongs to.</li>\n<li>app_name (str | None): The name of the app to delete.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Delete by app_id</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">app_id</span><span class=\"o\">=</span><span class=\"mi\">12345</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or delete by prefix and app name</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;myapp&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;app_v1&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">app_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.apps.delete_version": {"fullname": "practicuscore.apps.delete_version", "modulename": "practicuscore", "qualname": "apps.delete_version", "kind": "function", "doc": "<p>Deletes a specific version of an application from the current region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>version (int | str): The version identifier of the app to delete.</li>\n<li>app_id (int | None): The app\u2019s unique identifier. If provided, <code>prefix</code> and <code>app_name</code> are ignored.</li>\n<li>prefix (str | None): The prefix identifying the app group, if <code>app_id</code> is not provided.</li>\n<li>app_name (str | None): The specific app name, if <code>app_id</code> is not provided.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Delete version using app_id</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">delete_version</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">&quot;app_v1&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_id</span><span class=\"o\">=</span><span class=\"mi\">12345</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or delete version using prefix and app_name</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">delete_version</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s2\">&quot;app_v1&quot;</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;myapp&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_application&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">app_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.apps.get_list": {"fullname": "practicuscore.apps.get_list", "modulename": "practicuscore", "qualname": "apps.get_list", "kind": "function", "doc": "<p>Retrieves a list of all applications known to this region.</p>\n\n<p>Each <code>AppMeta</code> object contains metadata about the app, such as its prefix, name, versions, and deployment info.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[AppMeta]: A read-only list of apps.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">app</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">app_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">app_name</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">visible_name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">AppMeta</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_prefix_list": {"fullname": "practicuscore.apps.get_prefix_list", "modulename": "practicuscore", "qualname": "apps.get_prefix_list", "kind": "function", "doc": "<p>Retrieves a list of app prefixes available in this region.</p>\n\n<p>App prefixes group related applications, providing a logical namespace for organizing multiple apps.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[AppPrefix]: A read-only list of app prefixes.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">prefix</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">app_prefix_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">.</span><span class=\"n\">prefix</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">AppPrefix</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_deployment_setting_list": {"fullname": "practicuscore.apps.get_deployment_setting_list", "modulename": "practicuscore", "qualname": "apps.get_deployment_setting_list", "kind": "function", "doc": "<p>Retrieves a list of all application deployment settings defined in this region.</p>\n\n<p><code>AppDeploymentSetting</code> provides configurations that influence how apps are deployed\n(e.g., environment variables, scaling settings).</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[AppDeploymentSetting]: A read-only list of app deployment settings.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">setting</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">app_deployment_setting_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">setting</span><span class=\"o\">.</span><span class=\"n\">deployment_setting_key</span><span class=\"p\">,</span> <span class=\"n\">setting</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">AppDeploymentSetting</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.test_api": {"fullname": "practicuscore.apps.test_api", "modulename": "practicuscore", "qualname": "apps.test_api", "kind": "function", "doc": "<p>Loads dynamic API modules from the current folder and calls the async API handler\nassociated with the given path. Useful for design-time testing of APIs without deploying.</p>\n\n<p>Args:\n    path (str): The API endpoint path.\n    payload: The payload to pass to the API handler.\n    requestor (dict | None): Simulates calling the API as a particular requestor.\n        Expected keys: username (str), email (str), user_id (int), admin (bool).\n    api_folder (str | None): Where to find APIs. If empty, uses current working dir.</p>\n\n<p>Returns:\n    The result returned by the API handler.</p>\n\n<p>Raises:\n    ValueError: If no API handler is found for the given path.\n    TypeError: If the API handler is not an async function.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">payload</span>,</span><span class=\"param\">\t<span class=\"n\">requestor</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">api_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.prepare_db": {"fullname": "practicuscore.apps.prepare_db", "modulename": "practicuscore", "qualname": "apps.prepare_db", "kind": "function", "doc": "<p>Creates a database schema for the selected app_prefix and app_name, using database settings from deployment_setting_key.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>prefix (str): The app prefix.</li>\n<li>app_name (str): The app name.</li>\n<li>deployment_setting_key (str | None): App deployment setting key.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, str): A tuple of (connection string, database schema name).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_app_db_schema</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;apps&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-app&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">deployment_setting_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.remove_db": {"fullname": "practicuscore.apps.remove_db", "modulename": "practicuscore", "qualname": "apps.remove_db", "kind": "function", "doc": "<p><strong>DELETES DATA</strong> Removes the db dedicated to the app.\nRemoves database for the app by deleting the database schema dedicated for the selected app_prefix and app_name,\nusing the db configuration of deployment_setting_key.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>prefix (str): The app prefix.</li>\n<li>app_name (str): The app name.</li>\n<li>deployment_setting_key (str | None): App deployment setting key.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>None</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_app_db_schema</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;apps&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-app&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">deployment_setting_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.apps.secure_page": {"fullname": "practicuscore.apps.secure_page", "modulename": "practicuscore", "qualname": "apps.secure_page", "kind": "function", "doc": "<p>Secures the current Streamlit page by enforcing user authentication and permissions.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>page_title (str | None): The title to display on the browser tab. If None, uses default.</li>\n<li>layout ('Layout'): The page layout, e.g., \"centered\" or \"wide\".</li>\n<li>initial_sidebar_state ('InitialSideBarState'): The initial state of the sidebar, e.g., \"auto\", \"expanded\", \"collapsed\".</li>\n<li>menu_items (MenuItems | None): Optional custom menu items for the Streamlit menu.</li>\n<li>disable_authentication (bool): If True, disables authentication checks (useful in development mode).</li>\n<li>must_be_admin (bool): If True, requires the user to have admin privileges to access this page.</li>\n</ul>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>In production mode, checks the Practicus AI session to ensure the user is authenticated.</li>\n<li>If <code>must_be_admin</code> is True, verifies that the authenticated user is an admin.</li>\n<li>Optionally configures page layout and sidebar.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">secure_page</span><span class=\"p\">(</span><span class=\"n\">page_title</span><span class=\"o\">=</span><span class=\"s2\">&quot;Admin Dashboard&quot;</span><span class=\"p\">,</span> <span class=\"n\">must_be_admin</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">page_title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">layout</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;centered&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wide&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;centered&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">initial_sidebar_state</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;auto&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;expanded&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;collapsed&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;auto&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">menu_items</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Mapping</span><span class=\"p\">[</span><span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;Get help&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Get Help&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;get help&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Report a bug&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;report a bug&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;About&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;about&#39;</span><span class=\"p\">],</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">disable_authentication</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">must_be_admin</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.apps.get_user_id": {"fullname": "practicuscore.apps.get_user_id", "modulename": "practicuscore", "qualname": "apps.get_user_id", "kind": "function", "doc": "<p>Retrieves the current user's unique identifier.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>int | None: The user\u2019s ID if available, None otherwise.</li>\n</ul>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>In development mode, returns the user_id from the global context.</li>\n<li>In production mode, retrieves the user_id from the <code>Streamlit</code> session state if <code>prt_session</code> is present.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_user_id</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">user_id</span><span class=\"p\">:</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;User ID: </span><span class=\"si\">{</span><span class=\"n\">user_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;No user logged in.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_username": {"fullname": "practicuscore.apps.get_username", "modulename": "practicuscore", "qualname": "apps.get_username", "kind": "function", "doc": "<p>Retrieves the current user's username (the part of their email before '@', or a configured username).</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The username as a string. Returns an empty string if not found.</li>\n</ul>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>In development mode, returns the username from global context.</li>\n<li>In production mode, returns the username from the <code>Streamlit</code> session state if <code>prt_session</code> is available.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_username</span><span class=\"p\">()</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Hello, </span><span class=\"si\">{</span><span class=\"n\">username</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_user_email": {"fullname": "practicuscore.apps.get_user_email", "modulename": "practicuscore", "qualname": "apps.get_user_email", "kind": "function", "doc": "<p>Retrieves the current user's email address.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The user\u2019s email if available, or an empty string if not found.</li>\n</ul>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>In development mode, returns the user_email from global context.</li>\n<li>In production mode, returns the email from the <code>Streamlit</code> session state if <code>prt_session</code> is available.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_user_email</span><span class=\"p\">()</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Your email: </span><span class=\"si\">{</span><span class=\"n\">email</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_user_groups": {"fullname": "practicuscore.apps.get_user_groups", "modulename": "practicuscore", "qualname": "apps.get_user_groups", "kind": "function", "doc": "<p>Retrieves the list of groups to which the current user belongs.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>reload (bool): If True, forces a reload of the user groups, ignoring any cached values.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>list[str]: A list of group names the user is part of.</li>\n</ul>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>In development mode, returns the developer\u2019s predefined groups.</li>\n<li>In production mode, retrieves groups from <code>prt_session</code> or queries the Practicus AI backend if <code>reload</code> is True.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">groups</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_user_groups</span><span class=\"p\">()</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;You belong to the following groups: </span><span class=\"si\">{</span><span class=\"s1\">&#39;, &#39;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">groups</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reload</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.user_is_admin": {"fullname": "practicuscore.apps.user_is_admin", "modulename": "practicuscore", "qualname": "apps.user_is_admin", "kind": "function", "doc": "<p>Checks if the current logged-in user is an admin.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if the user is an admin, False otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">user_is_admin</span><span class=\"p\">():</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;Welcome, Admin!&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;You do not have admin privileges.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_app_id": {"fullname": "practicuscore.apps.get_app_id", "modulename": "practicuscore", "qualname": "apps.get_app_id", "kind": "function", "doc": "<p>Retrieves the ID of the current app.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>int | None: The app ID if available, otherwise None.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">app_id</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_app_id</span><span class=\"p\">()</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Current App ID: </span><span class=\"si\">{</span><span class=\"n\">app_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_app_prefix": {"fullname": "practicuscore.apps.get_app_prefix", "modulename": "practicuscore", "qualname": "apps.get_app_prefix", "kind": "function", "doc": "<p>Retrieves the prefix of the current app.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The app prefix.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prefix</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_app_prefix</span><span class=\"p\">()</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;App Prefix: </span><span class=\"si\">{</span><span class=\"n\">prefix</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_app_name": {"fullname": "practicuscore.apps.get_app_name", "modulename": "practicuscore", "qualname": "apps.get_app_name", "kind": "function", "doc": "<p>Retrieves the name of the current app.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The app name.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_app_name</span><span class=\"p\">()</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;App Name: </span><span class=\"si\">{</span><span class=\"n\">name</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.get_app_version": {"fullname": "practicuscore.apps.get_app_version", "modulename": "practicuscore", "qualname": "apps.get_app_version", "kind": "function", "doc": "<p>Retrieves the version of the current app.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The app version.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">version</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_app_version</span><span class=\"p\">()</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;App Version: </span><span class=\"si\">{</span><span class=\"n\">version</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.development_mode": {"fullname": "practicuscore.apps.development_mode", "modulename": "practicuscore", "qualname": "apps.development_mode", "kind": "function", "doc": "<p>Indicates whether the app is running in development mode or in production (AppHost) mode.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if running in development mode; False if running in production mode.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">development_mode</span><span class=\"p\">():</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;Running in development mode.&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;Running in production mode.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.set_cookie": {"fullname": "practicuscore.apps.set_cookie", "modulename": "practicuscore", "qualname": "apps.set_cookie", "kind": "function", "doc": "<p>Sets an HTTP cookie in the user's browser.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The cookie\u2019s name.</li>\n<li>value (str): The cookie\u2019s value.</li>\n<li>max_age (int | None): The cookie\u2019s lifespan in seconds. Default is 30 days (2,592,000 seconds).</li>\n<li>path (str | None): The path for which the cookie is valid. Defaults to '/'.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">set_cookie</span><span class=\"p\">(</span><span class=\"s2\">&quot;theme&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;dark&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">max_age</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"mi\">2592000</span>,</span><span class=\"param\">\t<span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.apps.get_cookie": {"fullname": "practicuscore.apps.get_cookie", "modulename": "practicuscore", "qualname": "apps.get_cookie", "kind": "function", "doc": "<p>Retrieves the value of a specified HTTP cookie.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name of the cookie.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The cookie\u2019s value if found, None otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">theme</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">get_cookie</span><span class=\"p\">(</span><span class=\"s2\">&quot;theme&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">theme</span><span class=\"p\">:</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Current theme: </span><span class=\"si\">{</span><span class=\"n\">theme</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;No theme cookie set.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.apps.delete_cookie": {"fullname": "practicuscore.apps.delete_cookie", "modulename": "practicuscore", "qualname": "apps.delete_cookie", "kind": "function", "doc": "<p>Deletes an existing HTTP cookie by setting its max age to 0.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name of the cookie to delete.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">apps</span><span class=\"o\">.</span><span class=\"n\">delete_cookie</span><span class=\"p\">(</span><span class=\"s2\">&quot;theme&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">&quot;Theme cookie deleted.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.workflows": {"fullname": "practicuscore.workflows", "modulename": "practicuscore", "qualname": "workflows", "kind": "class", "doc": "<p>Provides a simplified interface for managing workflows\u2014such as Airflow DAGs\u2014in Practicus AI.</p>\n\n<p>The <code>workflows</code> class enables you to deploy, generate, and test workflows that define and execute\ncomplex data pipelines or ML processes. By abstracting away the underlying integration with Airflow\nand other systems, it allows you to focus on authoring DAGs, tasks, and configurations without\ndelving into low-level deployment details.</p>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Workflow</strong>: A directed acyclic graph (DAG) representing a set of tasks and their dependencies,\norchestrated by a workflow engine like Airflow.</li>\n<li><strong>Airflow Integration</strong>: Practicus AI supports generating and deploying Airflow DAGs to the configured\nregion, enabling fully managed and scheduled execution of your tasks.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Deploy an Airflow DAG to the current region</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">workflows</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span><span class=\"n\">service_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_airflow_service&quot;</span><span class=\"p\">,</span> <span class=\"n\">dag_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_data_pipeline&quot;</span><span class=\"p\">,</span> <span class=\"n\">files_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dag_files/&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Generate DAG and task files from a high-level workflow description</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">workflows</span><span class=\"o\">.</span><span class=\"n\">generate_files</span><span class=\"p\">(</span>\n    <span class=\"n\">dag_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_data_pipeline&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">dag_flow</span><span class=\"o\">=</span><span class=\"s2\">&quot;extract_data &gt;&gt; transform_data &gt;&gt; load_data&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">files_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dag_files/&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">default_worker_config</span><span class=\"o\">=</span><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span><span class=\"p\">(),</span>\n    <span class=\"n\">schedule_interval</span><span class=\"o\">=</span><span class=\"s2\">&quot;@daily&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Test tasks locally by creating temporary workers and running each task script</span>\n<span class=\"n\">success_workers</span><span class=\"p\">,</span> <span class=\"n\">failed_workers</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">workflows</span><span class=\"o\">.</span><span class=\"n\">test_tasks</span><span class=\"p\">(</span>\n    <span class=\"n\">dag_flow</span><span class=\"o\">=</span><span class=\"s2\">&quot;extract_data &gt;&gt; transform_data &gt;&gt; load_data&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">files_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_dag_files/&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">default_worker_config</span><span class=\"o\">=</span><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span><span class=\"p\">(),</span>\n    <span class=\"n\">terminate_on_success</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.workflows.deploy": {"fullname": "practicuscore.workflows.deploy", "modulename": "practicuscore", "qualname": "workflows.deploy", "kind": "function", "doc": "<p>Deploys a workflow (Airflow DAG) to the currently selected Practicus AI region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>service_key (str): The key identifying the workflow orchestration service (e.g., Airflow instance)\ndefined by your Practicus AI administrator.</li>\n<li>dag_key (str): A unique identifier (name) for the DAG being deployed.</li>\n<li>files_path (str | None): The directory containing the DAG file and associated task files.\nIf None, defaults to the current working directory.</li>\n<li>max_files_to_upload (int): The maximum number of files to upload along with the DAG for its tasks.</li>\n</ul>\n\n<p><strong>Behavior:</strong>\nThis method packages the specified DAG files, task scripts, and configurations, and uploads them\nto the Airflow service running in the current region, making the DAG available for scheduling and execution.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">workflows</span><span class=\"o\">.</span><span class=\"n\">deploy</span><span class=\"p\">(</span>\n    <span class=\"n\">service_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_airflow_service&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">dag_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_pipeline&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">service_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dag_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">files_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_files_to_upload</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">250</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.workflows.get_airflow_params": {"fullname": "practicuscore.workflows.get_airflow_params", "modulename": "practicuscore", "qualname": "workflows.get_airflow_params", "kind": "function", "doc": "<p>Retrieves a dictionary of Airflow DAG parameters that can be used to configure Practicus AI workers\nand services within the Airflow tasks. These parameters often include environment details, service\nendpoints, and default worker configurations.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>dict: A dictionary of parameters suitable for inclusion in Airflow DAG and task configurations.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">workflows</span><span class=\"o\">.</span><span class=\"n\">get_airflow_params</span><span class=\"p\">()</span>\n<span class=\"c1\"># Use params in your DAG definition to provide runtime configuration</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "practicuscore.workflows.run_airflow_task": {"fullname": "practicuscore.workflows.run_airflow_task", "modulename": "practicuscore", "qualname": "workflows.run_airflow_task", "kind": "function", "doc": "<p>Executes an Airflow task inside a DAG at runtime.</p>\n\n<p>This method is primarily intended for internal use within the Airflow DAGs generated by Practicus AI.\nIt receives runtime parameters from Airflow and runs the associated task. Users typically do not\ncall this method directly.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>kwargs: Dynamic parameters provided by the Airflow scheduler and DAG configuration.</li>\n</ul>\n\n<p><strong>Returns:</strong>\nNone</p>\n\n<p><strong>Note:</strong>\nRefer to Practicus AI's Airflow integration documentation or generated DAG code for usage details.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.workflows.get_dag_info": {"fullname": "practicuscore.workflows.get_dag_info", "modulename": "practicuscore", "qualname": "workflows.get_dag_info", "kind": "function", "doc": "<p>Infers the DAG key and the username (as derived from a predefined folder structure)\nfrom a given DAG file path.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>dag_file_path (str): The full path to the DAG file. For convenience, you can pass <code>__file__</code>\nwhen calling from inside the DAG file.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>tuple[str, str]: A tuple <code>(dag_key, username)</code> extracted from the directory structure.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">dag_key</span><span class=\"p\">,</span> <span class=\"n\">username</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">workflows</span><span class=\"o\">.</span><span class=\"n\">get_dag_info</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">dag_key</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dag_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.workflows.generate_files": {"fullname": "practicuscore.workflows.generate_files", "modulename": "practicuscore", "qualname": "workflows.generate_files", "kind": "function", "doc": "<p>Generates Airflow DAG and task files from a given workflow definition (DAG flow).</p>\n\n<p>This utility helps bootstrap the filesystem layout for your workflow code, including:</p>\n\n<ul>\n<li>DAG file (Python code)</li>\n<li>Task scripts (Python files, optionally shell scripts)</li>\n<li>Worker configuration files</li>\n</ul>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>dag_key (str): A unique identifier for the DAG.</li>\n<li>dag_flow (str): A string representing the workflow tasks and their dependencies\n(e.g. <code>\"extract_data &gt;&gt; transform_data &gt;&gt; load_data\"</code>).</li>\n<li>files_path (str | None): The directory where DAG and task files will be generated.\nIf None, defaults to the current working directory.</li>\n<li>default_worker_config (WorkerConfig | None): The default worker configuration applied to all tasks.</li>\n<li>custom_worker_configs (list[tuple[str, WorkerConfig]] | None): A list of tuples mapping specific task\nnames to custom worker configurations.</li>\n<li>save_credentials (bool): If True, saves the current user's credentials in the default worker config file.</li>\n<li>overwrite_existing (bool): If True, overwrites existing files.</li>\n<li>schedule_interval (str | None): The scheduling interval for the DAG, e.g. \"@daily\", \"0 2 * * THU\".</li>\n<li>start_date (datetime | None): The start date for the DAG scheduling. Defaults to the current datetime.</li>\n<li>retries (int): The number of retries allowed for tasks in this DAG.</li>\n<li>dag_template (str): The template filename for the DAG file.</li>\n<li>task_template (str): The template filename for individual task files.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">workflows</span><span class=\"o\">.</span><span class=\"n\">generate_files</span><span class=\"p\">(</span>\n    <span class=\"n\">dag_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;etl_pipeline&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">dag_flow</span><span class=\"o\">=</span><span class=\"s2\">&quot;extract &gt;&gt; transform &gt;&gt; load&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">default_worker_config</span><span class=\"o\">=</span><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span><span class=\"p\">(),</span>\n    <span class=\"n\">schedule_interval</span><span class=\"o\">=</span><span class=\"s2\">&quot;@daily&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">start_date</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2024</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n    <span class=\"n\">retries</span><span class=\"o\">=</span><span class=\"mi\">2</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dag_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dag_flow</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">files_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default_worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">custom_worker_configs</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">save_credentials</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">overwrite_existing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">schedule_interval</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">start_date</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">retries</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">dag_template</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;airflow_dag.j2.py&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">task_template</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;python_task.j2.py&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.workflows.test_tasks": {"fullname": "practicuscore.workflows.test_tasks", "modulename": "practicuscore", "qualname": "workflows.test_tasks", "kind": "function", "doc": "<p>Tests tasks defined by a given DAG flow or a task list by running them in temporary workers.\nThis allows local validation of code before deploying the full workflow.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>dag_flow (str | None): A DAG flow string (e.g. \"task1 &gt;&gt; task2\") defining task dependencies.</li>\n<li>task_list (list[str] | None): A list of task names to test. Provide either <code>dag_flow</code> or <code>task_list</code>, not both.</li>\n<li>files_path (str | None): The directory containing the task files. If None, uses the current directory.</li>\n<li>default_worker_config (WorkerConfig | None): The base worker configuration for running the tasks.</li>\n<li>custom_worker_configs (list[tuple[str, WorkerConfig]] | None): Per-task overrides for the worker configuration.</li>\n<li>terminate_on_success (bool): If True, terminates the worker after a successful task run.</li>\n<li>terminate_on_failed (bool): If True, terminates the worker if the task fails.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>tuple[list[Worker], list[Worker]]: A tuple containing a list of workers that ran successful tasks\nand a list of workers that ran failed tasks (if they were not terminated).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">success_workers</span><span class=\"p\">,</span> <span class=\"n\">failed_workers</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">workflows</span><span class=\"o\">.</span><span class=\"n\">test_tasks</span><span class=\"p\">(</span>\n    <span class=\"n\">dag_flow</span><span class=\"o\">=</span><span class=\"s2\">&quot;extract &gt;&gt; transform &gt;&gt; load&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">default_worker_config</span><span class=\"o\">=</span><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span><span class=\"p\">(),</span>\n    <span class=\"n\">terminate_on_success</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">terminate_on_failed</span><span class=\"o\">=</span><span class=\"kc\">False</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dag_flow</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">task_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">files_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default_worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">custom_worker_configs</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">terminate_on_success</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">terminate_on_failed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span><span class=\"p\">],</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "practicuscore.connections": {"fullname": "practicuscore.connections", "modulename": "practicuscore", "qualname": "connections", "kind": "class", "doc": "<p>Provides a high-level interface for managing various data and service connections within Practicus AI.</p>\n\n<p>The <code>connections</code> class includes:</p>\n\n<ul>\n<li>Type aliases for different connection configuration types (e.g., S3, SQL databases, Snowflake).</li>\n<li>Functions to create, update, retrieve, and list all configured connections.</li>\n<li>A utility to upload files to S3 storage.</li>\n</ul>\n\n<p>By leveraging these methods, you can easily integrate and interact with multiple data sources and\nexternal systems in your Practicus AI environment, all through a unified interface.</p>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Connection Configuration (ConnConf)</strong>: A structured way to store credentials, endpoints, and parameters\nnecessary to connect to databases, storage services, and other external data systems.</li>\n<li><strong>Managed Connections</strong>: Centralized management of all defined connections, allowing for easy retrieval\nand updates through code, without needing to hard-code credentials repeatedly.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Get all configured connections</span>\n<span class=\"n\">all_connections</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">get_all</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Retrieve a specific connection by name</span>\n<span class=\"n\">my_db_conn</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_database&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Create a new S3 connection configuration</span>\n<span class=\"n\">s3_config</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">S3ConnConf</span><span class=\"p\">(</span>\n    <span class=\"n\">endpoint_url</span><span class=\"o\">=</span><span class=\"s2\">&quot;...&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">aws_access_key_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;...&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_s3_conn&quot;</span><span class=\"p\">,</span> <span class=\"n\">conn_conf</span><span class=\"o\">=</span><span class=\"n\">s3_config</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Update an existing connection</span>\n<span class=\"n\">updated_config</span> <span class=\"o\">=</span> <span class=\"n\">s3_config</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">(</span><span class=\"n\">update</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;bucket&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;my-new-bucket&quot;</span><span class=\"p\">})</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_s3_conn&quot;</span><span class=\"p\">,</span> <span class=\"n\">conn_conf</span><span class=\"o\">=</span><span class=\"n\">updated_config</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Upload a file to S3 using the newly created connection</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">upload_to_s3</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_s3_conn&quot;</span><span class=\"p\">,</span> <span class=\"n\">local_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;data.csv&quot;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;data/data.csv&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.connections.UploadS3Conf": {"fullname": "practicuscore.connections.UploadS3Conf", "modulename": "practicuscore", "qualname": "connections.UploadS3Conf", "kind": "class", "doc": "<p>Configuration for uploading files to an S3-compatible storage.</p>\n\n<p>This class defines the parameters needed to upload files from a local source to a specified S3 bucket and prefix.\nIt can also handle cutting part of the source path to simplify the uploaded key structure.</p>\n\n<p><strong>Usage Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">s3_conf</span> <span class=\"o\">=</span> <span class=\"n\">UploadS3Conf</span><span class=\"p\">(</span>\n    <span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-bucket&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;data/backups&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">folder_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;local_data/&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">aws_access_key_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;AKIA...&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">aws_secret_access_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;secret...&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">aws_region</span><span class=\"o\">=</span><span class=\"s2\">&quot;us-east-1&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "bases": "pydantic.main.BaseModel"}, "practicuscore.connections.ConnConfFactory": {"fullname": "practicuscore.connections.ConnConfFactory", "modulename": "practicuscore", "qualname": "connections.ConnConfFactory", "kind": "class", "doc": "<p>Factory class to generate connection configuration classes using a dictionary, json or an instance of the subject class</p>\n"}, "practicuscore.connections.ConnConf": {"fullname": "practicuscore.connections.ConnConf", "modulename": "practicuscore", "qualname": "connections.ConnConf", "kind": "class", "doc": "<p>Base connection configuration class</p>\n", "bases": "practicuscore.api_base.PrtBaseModel"}, "practicuscore.connections.S3ConnConf": {"fullname": "practicuscore.connections.S3ConnConf", "modulename": "practicuscore", "qualname": "connections.S3ConnConf", "kind": "class", "doc": "<p>AWS S3 or compatible object storage (e.g. Minio, CEPH, Google Cloud Storage) connection configuration</p>\n", "bases": "practicuscore.api_base.ConnConf"}, "practicuscore.connections.SqLiteConnConf": {"fullname": "practicuscore.connections.SqLiteConnConf", "modulename": "practicuscore", "qualname": "connections.SqLiteConnConf", "kind": "class", "doc": "<p>SQLite connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.MYSQLConnConf": {"fullname": "practicuscore.connections.MYSQLConnConf", "modulename": "practicuscore", "qualname": "connections.MYSQLConnConf", "kind": "class", "doc": "<p>MYSQL connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.PostgreSQLConnConf": {"fullname": "practicuscore.connections.PostgreSQLConnConf", "modulename": "practicuscore", "qualname": "connections.PostgreSQLConnConf", "kind": "class", "doc": "<p>PostgreSQL connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.RedshiftConnConf": {"fullname": "practicuscore.connections.RedshiftConnConf", "modulename": "practicuscore", "qualname": "connections.RedshiftConnConf", "kind": "class", "doc": "<p>AWS Redshift connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.SnowflakeConnConf": {"fullname": "practicuscore.connections.SnowflakeConnConf", "modulename": "practicuscore", "qualname": "connections.SnowflakeConnConf", "kind": "class", "doc": "<p>Snowflake connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.MSSQLConnConf": {"fullname": "practicuscore.connections.MSSQLConnConf", "modulename": "practicuscore", "qualname": "connections.MSSQLConnConf", "kind": "class", "doc": "<p>Microsoft SQL Server connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.OracleConnConf": {"fullname": "practicuscore.connections.OracleConnConf", "modulename": "practicuscore", "qualname": "connections.OracleConnConf", "kind": "class", "doc": "<p>Oracle DB or DWH connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.HiveConnConf": {"fullname": "practicuscore.connections.HiveConnConf", "modulename": "practicuscore", "qualname": "connections.HiveConnConf", "kind": "class", "doc": "<p>Hive connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.ClouderaConnConf": {"fullname": "practicuscore.connections.ClouderaConnConf", "modulename": "practicuscore", "qualname": "connections.ClouderaConnConf", "kind": "class", "doc": "<p>Cloudera connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.AthenaConnConf": {"fullname": "practicuscore.connections.AthenaConnConf", "modulename": "practicuscore", "qualname": "connections.AthenaConnConf", "kind": "class", "doc": "<p>AWS Athena connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.ElasticSearchConnConf": {"fullname": "practicuscore.connections.ElasticSearchConnConf", "modulename": "practicuscore", "qualname": "connections.ElasticSearchConnConf", "kind": "class", "doc": "<p>ElasticSearch connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.OpenSearchConnConf": {"fullname": "practicuscore.connections.OpenSearchConnConf", "modulename": "practicuscore", "qualname": "connections.OpenSearchConnConf", "kind": "class", "doc": "<p>OpenSearch connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.TrinoConnConf": {"fullname": "practicuscore.connections.TrinoConnConf", "modulename": "practicuscore", "qualname": "connections.TrinoConnConf", "kind": "class", "doc": "<p>Trino connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.DremioConnConf": {"fullname": "practicuscore.connections.DremioConnConf", "modulename": "practicuscore", "qualname": "connections.DremioConnConf", "kind": "class", "doc": "<p>Dremio connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.HanaConnConf": {"fullname": "practicuscore.connections.HanaConnConf", "modulename": "practicuscore", "qualname": "connections.HanaConnConf", "kind": "class", "doc": "<p>SAP Hana connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.TeradataConnConf": {"fullname": "practicuscore.connections.TeradataConnConf", "modulename": "practicuscore", "qualname": "connections.TeradataConnConf", "kind": "class", "doc": "<p>Teradata connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.Db2ConnConf": {"fullname": "practicuscore.connections.Db2ConnConf", "modulename": "practicuscore", "qualname": "connections.Db2ConnConf", "kind": "class", "doc": "<p>IBM DB2 connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.DynamoDBConnConf": {"fullname": "practicuscore.connections.DynamoDBConnConf", "modulename": "practicuscore", "qualname": "connections.DynamoDBConnConf", "kind": "class", "doc": "<p>AWS DynamoDB connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.CockroachDBConnConf": {"fullname": "practicuscore.connections.CockroachDBConnConf", "modulename": "practicuscore", "qualname": "connections.CockroachDBConnConf", "kind": "class", "doc": "<p>CockroachDB connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.CustomDBConnConf": {"fullname": "practicuscore.connections.CustomDBConnConf", "modulename": "practicuscore", "qualname": "connections.CustomDBConnConf", "kind": "class", "doc": "<p>Custom sqlalchemy compatible connection configuration</p>\n", "bases": "practicuscore.api_base.RelationalConnConf"}, "practicuscore.connections.upload_to_s3": {"fullname": "practicuscore.connections.upload_to_s3", "modulename": "practicuscore", "qualname": "connections.upload_to_s3", "kind": "function", "doc": "<p>Uploads a file to S3 using the specified upload configuration.</p>\n\n<p>This method uses the configuration details in <code>UploadS3Conf</code>\u2014including credentials,\ntarget S3 bucket, and key\u2014to upload a local file or in-memory data to S3.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>upload_conf (UploadS3Conf): A configuration object containing:\n<ul>\n<li>Access and secret keys or reference to a connection.</li>\n<li>Bucket name.</li>\n<li>Local file path or data to upload.</li>\n<li>S3 key (object path) under which the file will be stored.</li>\n<li>Other optional parameters like overwrite behavior.</li>\n</ul></li>\n</ul>\n\n<p><strong>Returns:</strong>\nNone. Raises an exception if the upload fails.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">upload_conf</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">UploadS3Conf</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.connections.get_all": {"fullname": "practicuscore.connections.get_all", "modulename": "practicuscore", "qualname": "connections.get_all", "kind": "function", "doc": "<p>Retrieves a list of all configured connections in the currently active Practicus AI region.</p>\n\n<p>This method returns a list of <code>Connection</code> objects, each representing a previously created\nor registered connection within the current region's environment. Connections can include\nvarious data sources like S3, databases, or custom endpoints.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[Connection]: A read-only list of <code>Connection</code> objects.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"n\">all_conns</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">get_all</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">conn</span> <span class=\"ow\">in</span> <span class=\"n\">all_conns</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">conn_type</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">conn_helper</span><span class=\"o\">.</span><span class=\"n\">Connection</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.connections.get": {"fullname": "practicuscore.connections.get", "modulename": "practicuscore", "qualname": "connections.get", "kind": "function", "doc": "<p>Retrieves a specific connection configuration by its UUID or name.</p>\n\n<p>If you know the unique identifier (UUID) or a user-friendly name of the connection,\nthis method returns the corresponding <code>Connection</code> object. If no connection matches\nthe provided identifier, returns None.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>uuid_or_name (str): The UUID or name of the desired connection.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Connection | None: The matching <code>Connection</code> object, or None if not found.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"n\">my_conn</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_database&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">my_conn</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Found connection:&quot;</span><span class=\"p\">,</span> <span class=\"n\">my_conn</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">my_conn</span><span class=\"o\">.</span><span class=\"n\">conn_type</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Connection not found.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">uuid_or_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">conn_helper</span><span class=\"o\">.</span><span class=\"n\">Connection</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.connections.create": {"fullname": "practicuscore.connections.create", "modulename": "practicuscore", "qualname": "connections.create", "kind": "function", "doc": "<p>Creates a new connection in the currently active Practicus AI region.</p>\n\n<p>By providing a name and a <code>ConnConf</code> object representing the configuration details,\nthis method registers a new connection that can later be retrieved and used.\nThe optional <code>tree_path</code> parameter can organize connections into a logical hierarchy.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name of the new connection. Must be unique within the region.</li>\n<li>conn_conf (ConnConf): The configuration object specifying credentials, endpoints, and properties\nfor the connection type (e.g., S3, MySQL, Snowflake).</li>\n<li>tree_path (str | None): Optional hierarchical path to store the connection under (e.g., \"teamA/projects\").</li>\n<li>can_write (bool): If True, indicates that this connection can be used for write operations.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The UUID of the newly created connection.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"n\">s3_conf</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">S3ConnConf</span><span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n<span class=\"n\">conn_uuid</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_s3_conn&quot;</span><span class=\"p\">,</span> <span class=\"n\">conn_conf</span><span class=\"o\">=</span><span class=\"n\">s3_conf</span><span class=\"p\">,</span> <span class=\"n\">can_write</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Created connection with UUID:&quot;</span><span class=\"p\">,</span> <span class=\"n\">conn_uuid</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">ConnConf</span>,</span><span class=\"param\">\t<span class=\"n\">tree_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">can_write</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.connections.update": {"fullname": "practicuscore.connections.update", "modulename": "practicuscore", "qualname": "connections.update", "kind": "function", "doc": "<p>Updates an existing connection with new configuration details.</p>\n\n<p>Use this method to modify an existing connection if credentials, endpoints, or other parameters\nneed to be changed. For example, changing the S3 bucket, database host, or default credentials.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>conn_uuid (str): The UUID of the connection to update.</li>\n<li>name (str): The new name for the connection (can be the same as before or a new one).</li>\n<li>conn_conf (ConnConf): The updated connection configuration object.</li>\n<li>tree_path (str | None): Optional hierarchical path for organizing the connection.</li>\n<li>can_write (bool): If True, indicates this connection can be used for write operations.</li>\n</ul>\n\n<p><strong>Returns:</strong>\nNone. Raises an exception if the update fails or if the connection does not exist.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Retrieve UUID from get or create methods</span>\n<span class=\"n\">updated_s3_conf</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">S3ConnConf</span><span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">conn_uuid</span><span class=\"o\">=</span><span class=\"s2\">&quot;existing-uuid&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_updated_s3_conn&quot;</span><span class=\"p\">,</span> <span class=\"n\">conn_conf</span><span class=\"o\">=</span><span class=\"n\">updated_s3_conf</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Connection updated successfully.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">conn_uuid</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">ConnConf</span>,</span><span class=\"param\">\t<span class=\"n\">tree_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">can_write</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.distributed": {"fullname": "practicuscore.distributed", "modulename": "practicuscore", "qualname": "distributed", "kind": "class", "doc": "<p>Provides a simplified interface for managing distributed compute jobs within Practicus AI.</p>\n\n<p>The <code>distributed</code> class offers convenient methods and property aliases to inspect and interact with\ndistributed workloads, such as multi-worker or multi-GPU training jobs. It leverages underlying\n<code>DistJobHelper</code> utilities and configurations to streamline setup and monitoring.</p>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Distributed Jobs:</strong> A set of workers orchestrated together to run a parallel or distributed task,\nsuch as large-scale training, hyperparameter tuning, or data processing.</li>\n<li><strong>Coordinator and Agents:</strong> In distributed tasks, a coordinator (rank 0) manages synchronization and\ncoordination, while agent workers (rank \u2265 1) carry out the bulk of the workload.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Check if running in a distributed cluster</span>\n<span class=\"k\">if</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">running_on_a_cluster</span><span class=\"p\">():</span>\n    <span class=\"n\">job_id</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">get_job_id</span><span class=\"p\">()</span>\n    <span class=\"n\">gpu_count</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">get_gpu_count</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Running in distributed mode. Job ID: </span><span class=\"si\">{</span><span class=\"n\">job_id</span><span class=\"si\">}</span><span class=\"s2\">, GPUs: </span><span class=\"si\">{</span><span class=\"n\">gpu_count</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">is_coordinator</span><span class=\"p\">():</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;This worker is the coordinator. Managing task distribution...&quot;</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;This worker is an agent, focusing on processing tasks.&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;This worker is not part of a distributed job.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.distributed.JobType": {"fullname": "practicuscore.distributed.JobType", "modulename": "practicuscore", "qualname": "distributed.JobType", "kind": "variable", "doc": "<p>Job type e.g. python, spark, deepspeed etc. using the <code>DistJobType</code> enum</p>\n", "default_value": "&lt;enum &#x27;DistJobType&#x27;&gt;"}, "practicuscore.distributed.JobConfig": {"fullname": "practicuscore.distributed.JobConfig", "modulename": "practicuscore", "qualname": "distributed.JobConfig", "kind": "variable", "doc": "<p>Job configuration using <code>DistJobConfig</code> pydantic class</p>\n", "default_value": "&lt;class &#x27;practicuscore.api_base.DistJobConfig&#x27;&gt;"}, "practicuscore.distributed.wait_for_start": {"fullname": "practicuscore.distributed.wait_for_start", "modulename": "practicuscore", "qualname": "distributed.wait_for_start", "kind": "function", "doc": "<p>Waits until the distributed job directory and configuration files appear, indicating that all executors have started\n(but not necessarily running).</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>job_dir (str | None): The job directory. If None, expects the code is running on the cluster.</li>\n<li>job_id (str | None): The job ID. If None, expects the code is running on the cluster.</li>\n<li>timeout (int): Maximum number of seconds to wait before raising a TimeoutError.</li>\n<li>sleep_between_refresh (int): How often (in seconds) to check for job start.</li>\n<li>log_state (bool): If True, logs waiting status messages.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">DistJobHelper</span><span class=\"o\">.</span><span class=\"n\">wait_for_start</span><span class=\"p\">(</span><span class=\"n\">job_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;/path/to/job_dir&quot;</span><span class=\"p\">,</span> <span class=\"n\">job_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;12345&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">job_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">120</span>,</span><span class=\"param\">\t<span class=\"n\">sleep_between_refresh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">log_state</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.distributed.wait_for_running": {"fullname": "practicuscore.distributed.wait_for_running", "modulename": "practicuscore", "qualname": "distributed.wait_for_running", "kind": "function", "doc": "<p>Waits until all executors of a distributed job are in the <code>running</code> state.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>job_dir (str | None): The job directory. If None, expects the code is running on the cluster.</li>\n<li>job_id (str | None): The job ID. If None, expects the code is running on the cluster.</li>\n<li>timeout (int): Maximum number of seconds to wait before raising a TimeoutError.</li>\n<li>sleep_between_refresh (int): How often (in seconds) to check for executors running.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">DistJobHelper</span><span class=\"o\">.</span><span class=\"n\">wait_for_running</span><span class=\"p\">(</span><span class=\"n\">job_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;/path/to/job_dir&quot;</span><span class=\"p\">,</span> <span class=\"n\">job_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;12345&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">job_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">timeout</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">120</span>,</span><span class=\"param\">\t<span class=\"n\">sleep_between_refresh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.distributed.live_view": {"fullname": "practicuscore.distributed.live_view", "modulename": "practicuscore", "qualname": "distributed.live_view", "kind": "function", "doc": "<p>Opens a live view of the distributed job\u2019s state inside a Jupyter environment, refreshing periodically.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>job_dir (str | None): Job directory or None if running inside the cluster.</li>\n<li>job_id (str | None): Job ID or None if running inside the cluster.</li>\n<li>max_rows (int): Maximum number of executor entries to display.</li>\n<li>sleep_between_refresh (int): How often (in seconds) to refresh the view.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">DistJobHelper</span><span class=\"o\">.</span><span class=\"n\">live_view</span><span class=\"p\">(</span><span class=\"n\">job_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;/path/to/job_dir&quot;</span><span class=\"p\">,</span> <span class=\"n\">job_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;12345&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">job_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_rows</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">sleep_between_refresh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.distributed.view_log": {"fullname": "practicuscore.distributed.view_log", "modulename": "practicuscore", "qualname": "distributed.view_log", "kind": "function", "doc": "<p>Displays executor worker logs for a given distributed job executor (identified by rank).</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>job_dir (str | None): Job directory or None if running inside the cluster.</li>\n<li>job_id (str | None): Job ID or None if running inside the cluster.</li>\n<li>rank (int | None): The executor rank. If None, uses the current worker\u2019s rank.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">DistJobHelper</span><span class=\"o\">.</span><span class=\"n\">view_log</span><span class=\"p\">(</span><span class=\"n\">job_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;/path/to/job_dir&quot;</span><span class=\"p\">,</span> <span class=\"n\">job_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;12345&quot;</span><span class=\"p\">,</span> <span class=\"n\">rank</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">job_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rank</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.distributed.get_client": {"fullname": "practicuscore.distributed.get_client", "modulename": "practicuscore", "qualname": "distributed.get_client", "kind": "function", "doc": "<p>Acquires a client (or session) for interactive clusters like Dask or Spark.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>job_dir (str | None): Job directory or None if running on the coordinator.</li>\n<li>job_id (str | None): Job ID or None if running on the coordinator.</li>\n<li>conn_conf (ConnConf | None): Optional connection configuration (e.g., credentials for S3 in Spark).</li>\n<li>config_dict (dict | None): Additional configuration parameters.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Client/session object appropriate for the job type (e.g., Dask client, Spark session).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">DistJobHelper</span><span class=\"o\">.</span><span class=\"n\">get_client</span><span class=\"p\">(</span><span class=\"n\">job_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;/path&quot;</span><span class=\"p\">,</span> <span class=\"n\">job_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;12345&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># client could be a Dask client or a Spark session depending on the job type.</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">job_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">ConnConf</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.distributed.open_dashboard": {"fullname": "practicuscore.distributed.open_dashboard", "modulename": "practicuscore", "qualname": "distributed.open_dashboard", "kind": "function", "doc": "<p>Opens the management dashboard for interactive clusters (Spark, Dask) in a browser or returns the URL.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>job_dir (str | None): Job directory or None if running on the job cluster.</li>\n<li>job_id (str | None): Job ID or None if running on the job cluster.</li>\n<li>get_url_only (bool): If True, returns the dashboard URL without opening it.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The dashboard URL.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">dashboard_url</span> <span class=\"o\">=</span> <span class=\"n\">DistJobHelper</span><span class=\"o\">.</span><span class=\"n\">open_dashboard</span><span class=\"p\">(</span><span class=\"n\">job_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;/path&quot;</span><span class=\"p\">,</span> <span class=\"n\">job_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;12345&quot;</span><span class=\"p\">,</span> <span class=\"n\">get_url_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Dashboard URL:&quot;</span><span class=\"p\">,</span> <span class=\"n\">dashboard_url</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">job_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">job_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">get_url_only</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.distributed.get_job_id": {"fullname": "practicuscore.distributed.get_job_id", "modulename": "practicuscore", "qualname": "distributed.get_job_id", "kind": "function", "doc": "<p>Retrieves the active Job ID for this worker if it is part of a distributed job.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>int | None: The Job ID if this worker is part of a distributed job, None otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">job_id</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">get_job_id</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">job_id</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;This worker belongs to distributed job ID: </span><span class=\"si\">{</span><span class=\"n\">job_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Not part of a distributed job.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.distributed.get_job_rank": {"fullname": "practicuscore.distributed.get_job_rank", "modulename": "practicuscore", "qualname": "distributed.get_job_rank", "kind": "function", "doc": "<p>Retrieves the rank of this worker within the distributed job.</p>\n\n<p>The rank is an integer that distinguishes different workers in a job. Typically:</p>\n\n<ul>\n<li>Rank 0: Coordinator (master) worker.</li>\n<li>Rank \u22651: Agent (worker) nodes.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>int | None: The rank of this worker if part of a distributed job, None otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">rank</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">get_job_rank</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">rank</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is the coordinator node.&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">elif</span> <span class=\"n\">rank</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;This is an agent node with rank: </span><span class=\"si\">{</span><span class=\"n\">rank</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Not part of a distributed job.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.distributed.get_gpu_count": {"fullname": "practicuscore.distributed.get_gpu_count", "modulename": "practicuscore", "qualname": "distributed.get_gpu_count", "kind": "function", "doc": "<p>Retrieves the number of GPUs available on this worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>int: The number of GPUs detected on this worker.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">gpu_count</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">get_gpu_count</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Available GPUs on this worker: </span><span class=\"si\">{</span><span class=\"n\">gpu_count</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, "practicuscore.distributed.running_on_a_cluster": {"fullname": "practicuscore.distributed.running_on_a_cluster", "modulename": "practicuscore", "qualname": "distributed.running_on_a_cluster", "kind": "function", "doc": "<p>Checks if the current code is running on a worker that is part of a distributed job or cluster.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if running as part of a distributed job, False otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">running_on_a_cluster</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Running in distributed mode.&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Running in a standalone worker.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.distributed.is_coordinator": {"fullname": "practicuscore.distributed.is_coordinator", "modulename": "practicuscore", "qualname": "distributed.is_coordinator", "kind": "function", "doc": "<p>Checks if this worker is the coordinator (rank 0) of a distributed job.</p>\n\n<p>If the worker is running a distributed job and its rank is 0, or if auto-distributed configuration\nis detected without a specific rank, it is considered the coordinator.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if this worker is the coordinator, False otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">is_coordinator</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I am the coordinator of this distributed job.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.distributed.is_agent": {"fullname": "practicuscore.distributed.is_agent", "modulename": "practicuscore", "qualname": "distributed.is_agent", "kind": "function", "doc": "<p>Checks if this worker is an agent (rank \u2265 1) in a distributed job.</p>\n\n<p>Agents typically carry out workloads assigned by the coordinator.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if this worker is an agent in a distributed job, False otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">is_agent</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;I am an agent worker node.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.distributed.validate_job_dir": {"fullname": "practicuscore.distributed.validate_job_dir", "modulename": "practicuscore", "qualname": "distributed.validate_job_dir", "kind": "function", "doc": "<p>Validates that the specified job directory is accessible to this worker.</p>\n\n<p>In distributed settings, job-related files or configurations may be stored in a shared directory.\nThis method ensures that the directory is present and accessible.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>job_dir (str): The user-friendly job directory path. It will be translated\nto the actual directory path by <code>DistJobHelper</code>.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">distributed</span><span class=\"o\">.</span><span class=\"n\">validate_job_dir</span><span class=\"p\">(</span><span class=\"s2\">&quot;/my/job/dir&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Job directory is valid.&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"ne\">FileNotFoundError</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Invalid job directory.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">job_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.auth": {"fullname": "practicuscore.auth", "modulename": "practicuscore", "qualname": "auth", "kind": "class", "doc": "<p>Provides a high-level, convenience interface for Practicus AI authentication and authorization tasks.</p>\n\n<p>The <code>auth</code> class exposes commonly used authentication-related methods\u2014such as logging in, logging out,\nchanging passwords, and retrieving tokens\u2014without requiring direct interaction with the underlying <code>regions</code>\nclass or <code>Region</code> objects. This allows developers to quickly manage authentication workflows in a more\nstreamlined manner.</p>\n\n<p><strong>Typical Operations Include:</strong></p>\n\n<ul>\n<li>Logging into a Practicus AI region with <code>auth.login(...)</code>.</li>\n<li>Logging out from one or all regions using <code>auth.logout(...)</code>.</li>\n<li>Automatically authenticating within known Practicus AI environments using <code>auth.auto_login()</code>.</li>\n<li>Changing user passwords and retrieving workspace credentials or tokens.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Log in to a Practicus AI region</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://my-practicus-region.example.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">&quot;user@example.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">&quot;mypassword&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Retrieve an access token</span>\n<span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">get_access_token</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Change the default region</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">set_default_region</span><span class=\"p\">(</span><span class=\"s2\">&quot;user@my-practicus-region.example.com&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Logout from all known regions</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">auth</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">(</span><span class=\"n\">all_regions</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.auth.set_default_region": {"fullname": "practicuscore.auth.set_default_region", "modulename": "practicuscore", "qualname": "auth.set_default_region", "kind": "function", "doc": "<p>Sets the default Practicus AI region. Subsequent operations that do not explicitly specify a region\nwill use this default.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>region_key (str): The region identifier, e.g. <code>username@my-region.example.com</code> or just <code>my-region.example.com</code>\nif only one user is associated with it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the region is successfully set as default; False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">region_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.auth.login": {"fullname": "practicuscore.auth.login", "modulename": "practicuscore", "qualname": "auth.login", "kind": "function", "doc": "<p>Authenticates the user to a Practicus AI region and returns a <code>Region</code> instance.</p>\n\n<p>The login process uses the provided credentials (password or tokens) to obtain a refresh token and\naccess token. Once authenticated, the region and associated credentials are stored so they can be\nreused in subsequent sessions, unless <code>save_config</code> is set to False.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>url (str | None): The base URL of the Practicus AI region, e.g. \"https://my-region.example.com\"\nYou can also define <code>PRT_URL</code> OS Environment variable and skip providing url.</li>\n<li>email (str | None): The user's email associated with the Practicus AI account.\nIf a token is provided, the email inside the token has priority and the email you provide is ignored.</li>\n<li>password (str | None): The user's password. Optional if refresh_token or access_token are provided.</li>\n<li>one_time_password (str | None): If logging in with a password AND Multi-factor Authentication (MFA) is enabled,\nyou must also pass the one-time password from your authenticator app e.g. Google Authenticator.</li>\n<li>refresh_token (str | None): Existing refresh token; can be used instead of password-based login.</li>\n<li>access_token (str | None): An existing valid access token to bypass credential-based login.</li>\n<li>token (str | None): An existing valid refresh or access token. Token type is automatically detected.\nYou can also define <code>PRT_TOKEN</code> OS Environment variable and skip providing tokens.</li>\n<li>save_password (bool): If True, saves the entered password securely for future sessions.</li>\n<li>save_config (bool): If True, persists the configuration so that subsequent sessions do not require login.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Region</code> object representing the authenticated Practicus AI environment.</p>\n</blockquote>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s2\">&quot;https://my-practicus-region.example.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s2\">&quot;user@example.com&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s2\">&quot;mypassword&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">save_password</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">one_time_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">access_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">save_password</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">save_config</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.auth.logout": {"fullname": "practicuscore.auth.logout", "modulename": "practicuscore", "qualname": "auth.logout", "kind": "function", "doc": "<p>Logs out of one or all Practicus AI regions, removing stored credentials from local configuration.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>region_key (str | None): The key of the region to logout from. If None and <code>all_regions</code> is False,\nno action will be taken.</li>\n<li>all_regions (bool): If True (default), logs out from all known regions. If False, you must specify <code>region_key</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>None</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">region_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">all_regions</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.auth.auto_login": {"fullname": "practicuscore.auth.auto_login", "modulename": "practicuscore", "qualname": "auth.auto_login", "kind": "function", "doc": "<p>Automatically logs into the Practicus AI region when running within a known Practicus AI environment\n(e.g., a worker or workspace) that already has embedded credentials. Useful for automations and\ninternal scenarios where explicit login is not required.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The default <code>Region</code> instance after auto-login.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.auth.change_password": {"fullname": "practicuscore.auth.change_password", "modulename": "practicuscore", "qualname": "auth.change_password", "kind": "function", "doc": "<p>Changes the current user's password in the default Practicus AI region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>old_password (str): The current password.</li>\n<li>new_password (str): The new desired password.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">old_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.auth.get_workspace_credentials": {"fullname": "practicuscore.auth.get_workspace_credentials", "modulename": "practicuscore", "qualname": "auth.get_workspace_credentials", "kind": "function", "doc": "<p>Retrieves the username and password credentials for a specified workspace instance.</p>\n\n<p>The username is typically derived from the user's email address. The password is a managed credential\nprovided by the region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>instance_id (str): The identifier of the workspace. View available instances via <code>region.worker_list</code>.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple <code>(username, password)</code> for the selected workspace.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.auth.get_access_token": {"fullname": "practicuscore.auth.get_access_token", "modulename": "practicuscore", "qualname": "auth.get_access_token", "kind": "function", "doc": "<p>Retrieves a new access token for the currently active region using the stored refresh token.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The new access token as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.auth.get_refresh_token": {"fullname": "practicuscore.auth.get_refresh_token", "modulename": "practicuscore", "qualname": "auth.get_refresh_token", "kind": "function", "doc": "<p>Retrieves a new refresh token for the currently active region using the stored refresh token.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The new refresh token as a string.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.auth.get_refresh_and_access_token": {"fullname": "practicuscore.auth.get_refresh_and_access_token", "modulename": "practicuscore", "qualname": "auth.get_refresh_and_access_token", "kind": "function", "doc": "<p>Retrieves both a refresh token and an updated access token for the current region session.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple <code>(refresh_token, access_token)</code>.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.engines": {"fullname": "practicuscore.engines", "modulename": "practicuscore", "qualname": "engines", "kind": "class", "doc": "<p>Provides high-level access to data processing engines like Apache Spark within Practicus AI.</p>\n\n<p>The <code>engines</code> class acts as a simplified interface for working with various data processing engines configured\nin the Practicus AI environment. This typically involves retrieving or creating Spark sessions that run\non Practicus AI Workers. By abstracting away configuration details, it allows developers to focus on their\ndata pipelines and analysis tasks.</p>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Spark Session</strong>: A handle to an Apache Spark cluster environment. You can use it to read and write data,\nrun transformations, and perform distributed computations.</li>\n<li><strong>Connection Config</strong>: A dictionary or JSON configuration that specifies how the Spark session should\nconnect to data sources (e.g., S3, databases).</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Get or create a Spark session on a Practicus AI Worker</span>\n<span class=\"n\">spark</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">engines</span><span class=\"o\">.</span><span class=\"n\">get_spark_session</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Perform Spark operations</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">spark</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;s3://mybucket/mydata.csv&quot;</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Delete the Spark session when done</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">engines</span><span class=\"o\">.</span><span class=\"n\">delete_spark_session</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<p><strong>Important:</strong>\nSpark sessions require that your code is running on a Practicus AI Worker. Attempting to run Spark-related\noperations outside of a Worker environment will result in an error.</p>\n"}, "practicuscore.engines.get_spark_session": {"fullname": "practicuscore.engines.get_spark_session", "modulename": "practicuscore", "qualname": "engines.get_spark_session", "kind": "function", "doc": "<p>Retrieves or creates a Spark session for distributed data processing within a Practicus AI Worker.</p>\n\n<p>A Spark session can be used to connect to various data sources, run SQL queries, and perform large-scale\ntransformations or machine learning tasks. If a session already exists, it will be reused; otherwise,\na new one will be created based on the provided configuration parameters.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>conn_conf (dict | str | None):\nOptional. A configuration object specifying data connection details.</li>\n</ul>\n\n<ul>\n<li>extra_spark_conf (dict | None):\nOptional. A dictionary of additional Spark configuration options. For example:\n<code>{\"spark.executor.memory\": \"4g\", \"spark.driver.cores\": \"2\"}</code></li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Optional['SparkSession']: A SparkSession object if successful, or None if Spark cannot be initialized.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">spark</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">engines</span><span class=\"o\">.</span><span class=\"n\">get_spark_session</span><span class=\"p\">(</span>\n    <span class=\"n\">extra_spark_conf</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;spark.executor.instances&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;5&quot;</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">spark</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">csv</span><span class=\"p\">(</span><span class=\"s2\">&quot;s3://my-data-bucket/data.csv&quot;</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">extra_spark_conf</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">pyspark</span><span class=\"o\">.</span><span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">SparkSession</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.engines.delete_spark_session": {"fullname": "practicuscore.engines.delete_spark_session", "modulename": "practicuscore", "qualname": "engines.delete_spark_session", "kind": "function", "doc": "<p>Terminates the currently active Spark session created by Practicus AI.</p>\n\n<p>This method releases the resources associated with the Spark session, including executors and\nany cached data. It is good practice to delete the Spark session when you have finished your\ndata processing tasks, especially if you anticipate creating a new session later.</p>\n\n<p><strong>Returns:</strong>\nNone</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># After finishing all Spark tasks</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">engines</span><span class=\"o\">.</span><span class=\"n\">delete_spark_session</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.experiments": {"fullname": "practicuscore.experiments", "modulename": "practicuscore", "qualname": "experiments", "kind": "class", "doc": "<p>Provides a simplified interface for managing machine learning experiments in Practicus AI.</p>\n\n<p>The <code>experiments</code> class helps you integrate with various experiment tracking services supported by\nPracticus AI (e.g., MLFlow) to log parameters, metrics, and artifacts of your machine learning models.\nBy centralizing the configuration process, it allows you to easily initialize and switch between\nexperiment backends without deep knowledge of their internal configurations.</p>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Experiment Tracking</strong>: The practice of recording experiment parameters, metrics, artifacts (models,\nplots, data snapshots), and metadata in a versioned and searchable manner.</li>\n<li><strong>MLFlow</strong>: A popular open-source platform for managing the ML lifecycle. Practicus AI can configure\nMLFlow servers to track your experiments.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Configure the experiment tracking to use a particular MLFlow service</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">experiments</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-mlflow-service&quot;</span><span class=\"p\">,</span> <span class=\"n\">service_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;abc123&quot;</span><span class=\"p\">,</span> <span class=\"n\">experiment_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;MyExperiment&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># After configuration, your ML code can log metrics and parameters via MLFlow APIs</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">mlflow</span>\n\n<span class=\"k\">with</span> <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">start_run</span><span class=\"p\">():</span>\n    <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_param</span><span class=\"p\">(</span><span class=\"s2\">&quot;learning_rate&quot;</span><span class=\"p\">,</span> <span class=\"mf\">0.01</span><span class=\"p\">)</span>\n    <span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_metric</span><span class=\"p\">(</span><span class=\"s2\">&quot;accuracy&quot;</span><span class=\"p\">,</span> <span class=\"mf\">0.95</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.experiments.configure": {"fullname": "practicuscore.experiments.configure", "modulename": "practicuscore", "qualname": "experiments.configure", "kind": "function", "doc": "<p>Configures the machine learning experiment tracking service for the current environment.</p>\n\n<p>This method sets up integration with a configured MLFlow tracking server in Practicus AI.\nAfter configuration, you can use the MLFlow Python API to log parameters, metrics, and artifacts of your\nexperiments.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>service_name (str | None):\nThe name of the Practicus AI experiment service (e.g., an MLFlow deployment) to connect to.\nIf None, uses a default or previously configured service if available.</li>\n</ul>\n\n<ul>\n<li><p>service_key (str | None):\nA key or token to authenticate and retrieve the appropriate experiment service details.\nThis might be provided by Practicus AI\u2019s console or your platform administrator.</p></li>\n<li><p>experiment_name (str | None):\nAn optional name of the experiment. If provided, this will attempt to set or start a new\nexperiment run under the given name. If not provided, the service will default to a\npredefined experiment context or wait for you to specify one later.</p></li>\n</ul>\n\n<p><strong>Returns:</strong>\nNone</p>\n\n<p><strong>Behavior and Error Handling:</strong></p>\n\n<ul>\n<li>If configuration is successful and <code>service_name</code> references an external MLFlow service,\na log message confirms the configuration.</li>\n<li>If configuration fails, an error message is logged. Common reasons for failure include:\n<ul>\n<li>Invalid <code>service_name</code> or <code>service_key</code>.</li>\n<li>Network or credential issues accessing the external tracking server.</li>\n</ul></li>\n<li>Exceptions, if any, are logged with stack traces for debugging.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Configure with a known MLFlow service and start a new experiment</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">experiments</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span>\n    <span class=\"n\">service_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-mlflow-service&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">service_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;myservicekey123&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">experiment_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;MyModelExperiment&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Now you can use MLFlow&#39;s Python SDK for tracking:</span>\n<span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">mlflow</span>\n<span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_param</span><span class=\"p\">(</span><span class=\"s2\">&quot;batch_size&quot;</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">)</span>\n<span class=\"n\">mlflow</span><span class=\"o\">.</span><span class=\"n\">log_metric</span><span class=\"p\">(</span><span class=\"s2\">&quot;loss&quot;</span><span class=\"p\">,</span> <span class=\"mf\">0.4</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">service_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">experiment_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.notebooks": {"fullname": "practicuscore.notebooks", "modulename": "practicuscore", "qualname": "notebooks", "kind": "class", "doc": "<p>Provides a simplified interface for executing, configuring, and managing Jupyter notebooks\nprogrammatically within Practicus AI.</p>\n\n<p>The <code>notebooks</code> class allows you to:</p>\n\n<ul>\n<li>Configure default output directories for successful and failed notebook runs.</li>\n<li>Execute Jupyter notebooks with specified parameters, capturing outputs and handling failures.</li>\n<li>Keep track of execution history, including which notebooks succeeded or failed.</li>\n<li>Validate the execution environment (e.g., correct Python virtual environment).</li>\n</ul>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Notebook Execution</strong>: Running a <code>.ipynb</code> file programmatically (via papermill) and capturing the executed output.</li>\n<li><strong>Output Management</strong>: Storing successful and failed notebook outputs in designated directories, optionally with\ntimestamps for versioning or organization.</li>\n<li><strong>History Tracking</strong>: Keeping a record of all notebooks executed, and validating that all completed successfully if desired.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Configure default directories and reset history</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span>\n    <span class=\"n\">default_output_folder</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/notebook_outputs/success&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">default_failed_output_folder</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/notebook_outputs/failed&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">add_time_stamp_to_output</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">reset_history</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Execute a notebook</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">execute_notebook</span><span class=\"p\">(</span>\n    <span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/my_notebook.ipynb&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">parameters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;param1&quot;</span><span class=\"p\">:</span> <span class=\"mi\">42</span><span class=\"p\">},</span>\n    <span class=\"n\">raise_on_failure</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># View execution history</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">view_history</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Validate all executed notebooks</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">validate_history</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n"}, "practicuscore.notebooks.default_output_folder": {"fullname": "practicuscore.notebooks.default_output_folder", "modulename": "practicuscore", "qualname": "notebooks.default_output_folder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, "practicuscore.notebooks.default_failed_output_folder": {"fullname": "practicuscore.notebooks.default_failed_output_folder", "modulename": "practicuscore", "qualname": "notebooks.default_failed_output_folder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str | None", "default_value": "None"}, "practicuscore.notebooks.successful_notebooks": {"fullname": "practicuscore.notebooks.successful_notebooks", "modulename": "practicuscore", "qualname": "notebooks.successful_notebooks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]", "default_value": "[]"}, "practicuscore.notebooks.failed_notebooks": {"fullname": "practicuscore.notebooks.failed_notebooks", "modulename": "practicuscore", "qualname": "notebooks.failed_notebooks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": list[str]", "default_value": "[]"}, "practicuscore.notebooks.configure": {"fullname": "practicuscore.notebooks.configure", "modulename": "practicuscore", "qualname": "notebooks.configure", "kind": "function", "doc": "<p>Configures default output directories and history handling for notebook execution.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>default_output_folder (str | None):\nThe base directory where successful notebook outputs will be stored.\nSupports <code>~</code> for the home directory. If <code>add_time_stamp_to_output</code> is True, a timestamped subfolder is created.</li>\n<li>default_failed_output_folder (str | None):\nThe base directory where failed notebook outputs will be stored.\nSupports <code>~</code> for the home directory. If <code>add_time_stamp_to_output</code> is True, a timestamped subfolder is created.</li>\n<li>add_time_stamp_to_output (bool):\nIf True, appends a timestamp-based folder structure (YYYY-MM-DD/HH-MM-SS) inside the specified output directories.</li>\n<li>reset_history (bool):\nIf True, clears the record of previously executed notebooks, resetting <code>successful_notebooks</code> and <code>failed_notebooks</code>.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span>\n    <span class=\"n\">default_output_folder</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/outputs/success&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">default_failed_output_folder</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/outputs/failed&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">add_time_stamp_to_output</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">reset_history</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">default_output_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default_failed_output_folder</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_time_stamp_to_output</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">reset_history</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.notebooks.reset_history": {"fullname": "practicuscore.notebooks.reset_history", "modulename": "practicuscore", "qualname": "notebooks.reset_history", "kind": "function", "doc": "<p>Clears the record of previously executed notebooks, resetting both successful and failed lists.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">reset_history</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Execution history has been reset.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.notebooks.view_history": {"fullname": "practicuscore.notebooks.view_history", "modulename": "practicuscore", "qualname": "notebooks.view_history", "kind": "function", "doc": "<p>Logs the summary of executed notebooks: how many succeeded and how many failed.</p>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>If there are failed notebooks, logs a warning with the count.</li>\n<li>If there are successful notebooks, logs their count.</li>\n<li>If no notebooks have been run, logs that no history is available.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">view_history</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.notebooks.validate_history": {"fullname": "practicuscore.notebooks.validate_history", "modulename": "practicuscore", "qualname": "notebooks.validate_history", "kind": "function", "doc": "<p>Validates the execution history by checking if any notebooks failed.</p>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>If any notebooks failed, raises a <code>ValidationFailedError</code>.</li>\n<li>If all executed notebooks were successful, logs a success message.</li>\n<li>If no notebooks have been run, logs that no runs are in the history.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">validate_history</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.notebooks.get_venv_name": {"fullname": "practicuscore.notebooks.get_venv_name", "modulename": "practicuscore", "qualname": "notebooks.get_venv_name", "kind": "function", "doc": "<p>Retrieves the name of the current Python virtual environment.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The current virtual environment name. If using system Python, returns \"practicus\".</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">current_venv</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">get_venv_name</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Running in venv: </span><span class=\"si\">{</span><span class=\"n\">current_venv</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.notebooks.validate_venv": {"fullname": "practicuscore.notebooks.validate_venv", "modulename": "practicuscore", "qualname": "notebooks.validate_venv", "kind": "function", "doc": "<p>Validates that the current environment matches the expected virtual environment name.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>venv_name (str): The expected virtual environment name.</li>\n</ul>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>If the current environment does not match <code>venv_name</code>, raises an EnvironmentError.</li>\n<li>In a Practicus AI Worker, suggests using the correct image or kernel if mismatch is found.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">validate_venv</span><span class=\"p\">(</span><span class=\"s2\">&quot;practicus_genai&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">venv_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.notebooks.execute_notebook": {"fullname": "practicuscore.notebooks.execute_notebook", "modulename": "practicuscore", "qualname": "notebooks.execute_notebook", "kind": "function", "doc": "<p>Executes a Jupyter notebook using papermill, optionally applying parameters.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>input_path (str): The path to the input <code>.ipynb</code> notebook file. <code>~</code> will be expanded to home dir. If no <code>.ipynb</code> suffix, it is appended.</li>\n<li>parameters (dict | None): A dictionary of parameters to pass to the notebook.</li>\n<li>cwd: (str | Path | None) Working directory to use when executing the notebook, if none defaults to the directory of the notebook.</li>\n<li>kernel_name (str | None): Name of kernel to execute the notebook against</li>\n<li>output_path (str | None): The path to save the executed notebook.\nIf None, uses <code>default_output_folder</code> or modifies <code>input_path</code> to create an <code>_output.ipynb</code>.</li>\n<li>failed_output_path (str | None): Custom directory to store failed notebook outputs.\nIf None, uses <code>default_failed_output_folder</code> if configured.</li>\n<li>raise_on_failure (bool): If True, raises an exception if the notebook fails.</li>\n<li>**kwargs: Additional arguments passed to <code>papermill.execute_notebook()</code>.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if the notebook ran successfully, False if it fails and raise_on_failure=False (default)</li>\n</ul>\n\n<p><strong>Behavior:</strong></p>\n\n<ul>\n<li>Executes the notebook with papermill.</li>\n<li>If successful, logs success and records the notebook in <code>successful_notebooks</code>.</li>\n<li>If it fails, logs an error, moves the output to the failed directory if available, and records the notebook in <code>failed_notebooks</code>.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">notebooks</span><span class=\"o\">.</span><span class=\"n\">execute_notebook</span><span class=\"p\">(</span>\n    <span class=\"n\">input_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;~/analysis.ipynb&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">parameters</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;input_data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;dataset.csv&quot;</span><span class=\"p\">},</span>\n    <span class=\"n\">raise_on_failure</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">input_path</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">cwd</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">failed_output_path</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">raise_on_failure</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.notebooks.find_notebooks": {"fullname": "practicuscore.notebooks.find_notebooks", "modulename": "practicuscore", "qualname": "notebooks.find_notebooks", "kind": "function", "doc": "<p>Recursively finds notebooks (.ipynb files) starting from a given path, excluding any\npaths or files matching patterns in <code>exclude</code>.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>start_path (str):\nThe starting directory to search.</li>\n<li>exclude (list[str] | None):\nA list of patterns to exclude. For example:\n<ul>\n<li><code>\"folder/notebook.ipynb\"</code> will exclude just that file.</li>\n<li><code>\"folder/*\"</code> will exclude every notebook under the <code>folder</code> directory.</li>\n</ul></li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>list[str]: A sorted list of absolute paths to the matching <code>.ipynb</code> files.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">start_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">exclude</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.notebooks.execute_notebooks": {"fullname": "practicuscore.notebooks.execute_notebooks", "modulename": "practicuscore", "qualname": "notebooks.execute_notebooks", "kind": "function", "doc": "<p>Executes all notebooks found in a given directory (recursively), allowing the caller\nto exclude certain paths or specify parameters for specific notebooks (or groups\nof notebooks) via wildcard patterns.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>start_path (str):\nThe starting directory to search for <code>.ipynb</code> files.</li>\n<li>exclude (list[str] | None):\nA list of patterns to exclude. For example:\n<ul>\n<li><code>\"folder/notebook.ipynb\"</code> will exclude just that file.</li>\n<li><code>\"folder/*\"</code> will exclude every notebook under the <code>folder</code> directory.</li>\n</ul></li>\n<li>notebook_params (dict | None):\nA dictionary mapping a pattern or file path to a dictionary of parameters.\nExamples:</li>\n</ul>\n\n<p>1) Specific file:</p>\n\n<pre><code> <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"s2\">&quot;some_dir/a.ipynb&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;param1&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n\n Only `some_dir/a.ipynb` will use `{\"param1\": 1}`.\n</code></pre>\n\n<p>2) Wildcard for all notebooks in a directory:</p>\n\n<pre><code> <div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"s2\">&quot;some_dir/*&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">&quot;param1&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre>\n</div>\n\n\n All notebooks under `some_dir` (and its children) will get `{\"param1\": 1}`.\n</code></pre>\n\n<p>If multiple patterns match a single notebook, the <em>last</em> matching pattern's\n  parameters will take precedence.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>None</li>\n</ul>\n\n<p>Upon completion, logs how many notebooks succeeded or failed.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">start_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">exclude</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">notebook_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.quality": {"fullname": "practicuscore.quality", "modulename": "practicuscore", "qualname": "quality", "kind": "class", "doc": "<p>Provides convenience methods to check and format code quality using the <code>ruff</code> linting and formatting tool.</p>\n\n<p>The <code>quality</code> class leverages the <code>ruff</code> command-line tool to:</p>\n\n<ul>\n<li>Lint code, identifying stylistic, formatting, and potential bug issues.</li>\n<li>Automatically fix certain issues to maintain a consistent code style.</li>\n</ul>\n\n<p>By default, if no paths are specified, it operates on the current working directory.</p>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Linting (Check)</strong>: Scans code for issues and reports them without changing files.</li>\n<li><strong>Formatting</strong>: Attempts to auto-fix and format code to adhere to specified guidelines.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Check code quality in the current directory</span>\n<span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">quality</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Format code in a specific directory</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">quality</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;src/&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n"}, "practicuscore.quality.check": {"fullname": "practicuscore.quality.check", "modulename": "practicuscore", "qualname": "quality.check", "kind": "function", "doc": "<p>Checks code quality and linting issues using ruff.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>paths (list[str] | None): Paths to lint. If None, defaults to the current directory.</li>\n<li>config_path (str | None): Optional ruff config file path.</li>\n<li>fix (bool): If True, attempts to fix linting issues automatically (default: False).</li>\n<li>select (list[str] | None): Specific linting rules (error codes) to focus on.</li>\n<li>ignore (list[str] | None): Specific linting rules (error codes) to ignore.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if no issues (or successfully fixed) found; False otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Check the current directory without fixing issues</span>\n<span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">quality</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Check and fix issues in &#39;src&#39; directory</span>\n<span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">quality</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;src/&quot;</span><span class=\"p\">],</span> <span class=\"n\">fix</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">paths</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">fix</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">select</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignore</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.quality.format": {"fullname": "practicuscore.quality.format", "modulename": "practicuscore", "qualname": "quality.format", "kind": "function", "doc": "<p>Formats code to improve code style and consistency.</p>\n\n<p>Unlike <code>check</code>, the <code>format</code> command attempts to rewrite code to conform to linting rules.\nIt does not fix all issues but can apply automatic formatting improvements.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>paths (list[str] | None): Paths to format. If None, defaults to the current directory.</li>\n<li>config_path (str | None): Optional ruff config file path.</li>\n<li>select (list[str] | None): Specific formatting-related rules to enforce.</li>\n<li>ignore (list[str] | None): Specific formatting-related rules to ignore.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Automatically format code in &#39;src&#39; directory</span>\n<span class=\"n\">quality</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;src/&quot;</span><span class=\"p\">])</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">paths</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">select</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignore</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.containers": {"fullname": "practicuscore.containers", "modulename": "practicuscore", "qualname": "containers", "kind": "class", "doc": "<p>Provides easy access to container-related functionality within the Practicus AI platform.</p>\n\n<p><strong>Features</strong>:</p>\n\n<ul>\n<li><code>ImageConfig</code>: A Pydantic model that encapsulates all necessary configurations\n(e.g., credentials, pull policies, builder parameters) for working with\ncontainer images in Kubernetes.</li>\n<li><code>build_image</code>: A method for building and optionally pushing container images.\nThis can be used for tasks such as deploying custom images to private registries\nor automated CI/CD workflows.</li>\n<li><code>update_build_config</code>: A method for updating build service configuration at runtime,\nparticularly useful for adding insecure registries without restarting the Worker.</li>\n</ul>\n\n<p><strong>Use Cases</strong>:</p>\n\n<ul>\n<li><strong>Private Registry Access</strong>: Set up private registry credentials via\n<code>ImageConfig</code> or registry credentials in <code>build_image</code> parameters.</li>\n<li><strong>Building Custom Images</strong>: Call <code>build_image</code> to compile a Dockerfile\ninto a runnable image and push it to a registry if needed.</li>\n<li><strong>Runtime Configuration</strong>: Call <code>update_build_config</code> to update the build service\ndaemon's configuration, such as adding insecure registries after startup.</li>\n<li><strong>Advanced Builds</strong>: Leverage additional build arguments or an entirely\ncustom command for specialized configurations.</li>\n</ul>\n"}, "practicuscore.containers.build_image": {"fullname": "practicuscore.containers.build_image", "modulename": "practicuscore", "qualname": "containers.build_image", "kind": "function", "doc": "<p>Build a container image in a Practicus AI Worker.</p>\n\n<p>This method allows you to optionally provide Dockerfile build arguments, registry credentials,\nand additional build parameters. It supports pushing the resulting image to a registry if\ndesired. If a custom build command is specified, the normal build command\nis skipped in favor of the custom one.</p>\n\n<p>Concurrency:\n    Only one image build can be active at a time on the same Worker.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str | None): Name of the image to build. Required if\n<code>custom_build_command</code> is not provided.</li>\n<li>tag (str | None): Tag for the image, e.g., \"24.8.x\". Required\nif <code>custom_build_command</code> is not provided.</li>\n<li>push_image (bool): If True, pushes the built image to its registry\nafter successful build. Defaults to True.</li>\n<li>build_args (dict | None): Key-value pairs corresponding to Dockerfile\narguments. For example, <code>{\"ENV_VAR\": \"value\"}</code>.</li>\n<li>registry_credentials (list[tuple[str, str, str]] | None): Optional\nlist of tuples in the form <code>(registry_host, username, password)</code>.\nIf you are using Practicus AI container registry, please only use robot\naccounts for improved security.</li>\n<li>insecure_registry (bool): If True, uses HTTP connections to\nthe registry. Defaults to False.</li>\n<li>additional_build_params (str | None): String of extra build parameters.\nUseful for advanced settings or experimental features.\nIntended to be used with the help of Practicus AI professionals.</li>\n<li>custom_build_command (str | None): If provided, overrides the default\nbuild command entirely. Intended to be used with the help of Practicus AI professionals.</li>\n</ul>\n\n<p>Returns:\n    bool:\n        - <code>True</code> if the image build completed successfully.\n        - <code>False</code> if the build encountered an error.</p>\n\n<p><strong>Example</strong>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>    <span class=\"n\">ContainerHelper</span><span class=\"o\">.</span><span class=\"n\">build_image</span><span class=\"p\">(</span>\n         <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-registry.my-company.com/myproject/my-app&quot;</span><span class=\"p\">,</span>\n         <span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s2\">&quot;24.8.x&quot;</span><span class=\"p\">,</span>\n         <span class=\"n\">push_image</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n         <span class=\"n\">build_args</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;MY_ARG&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;my_value&quot;</span><span class=\"p\">},</span>\n         <span class=\"n\">registry_credentials</span><span class=\"o\">=</span><span class=\"p\">[(</span><span class=\"s2\">&quot;my-registry.my-company.com&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot; robot$myproject+my-robot&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;some-token&quot;</span><span class=\"p\">)],</span>\n         <span class=\"n\">insecure_registry</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><strong>Note</strong>:</p>\n\n<ul>\n<li>Logs for this build process are written to the log file/home/ubuntu/build/build.log, which you can\nview to debug issues.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">tag</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">push_image</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">build_args</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">registry_credentials</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">insecure_registry</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">additional_build_params</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">custom_build_command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.containers.update_build_config": {"fullname": "practicuscore.containers.update_build_config", "modulename": "practicuscore", "qualname": "containers.update_build_config", "kind": "function", "doc": "<p>Update build service configuration and restart the daemon if necessary.</p>\n\n<p>This method allows updating the build service daemon's configuration at runtime\nwithout requiring a pod restart. It supports two approaches:</p>\n\n<ol>\n<li>Providing a complete custom build service configuration</li>\n<li>Specifying insecure registries (simpler approach for common use case)</li>\n</ol>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>config_content (str | None): Complete build service configuration content.\nThis parameter takes precedence if both are provided.</li>\n</ul>\n\n<ul>\n<li>insecure_registries (str | list | None): Either a comma-separated string or\na list of registry hostnames to mark as insecure (HTTP instead of HTTPS).\nExample: \"registry1.local,registry2.example.com\" or [\"registry1.local\", \"registry2.example.com\"]</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if configuration was updated successfully, False otherwise.</li>\n</ul>\n\n<p><strong>Examples:</strong></p>\n\n<p>Simple approach for insecure registries:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">ContainerHelper</span><span class=\"o\">.</span><span class=\"n\">update_build_config</span><span class=\"p\">(</span>\n    <span class=\"n\">insecure_registries</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-registry.my-company.com,registry2.example.com&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Advanced approach with custom configuration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">custom_config</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"s1\">[registry.&quot;my-registry.example.com&quot;]</span>\n<span class=\"s1\">  insecure = true</span>\n\n<span class=\"s1\">[registry.&quot;secure-registry.example.com&quot;]</span>\n<span class=\"s1\">  ca = &quot;/etc/certs/my-ca.pem&quot;</span>\n\n<span class=\"s1\">[worker.oci]</span>\n<span class=\"s1\">  max-parallelism = 4</span>\n<span class=\"s1\">&#39;&#39;&#39;</span>\n\n<span class=\"n\">ContainerHelper</span><span class=\"o\">.</span><span class=\"n\">update_build_config</span><span class=\"p\">(</span><span class=\"n\">config_content</span><span class=\"o\">=</span><span class=\"n\">custom_config</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n<li>When the configuration is updated, if the build service daemon is already running,\nit will be restarted automatically to apply the new configuration.</li>\n<li>The complete configuration approach gives you full control over all build service\nsettings, including certificates, mirrors, and advanced worker options.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config_content</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">insecure_registries</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.vault": {"fullname": "practicuscore.vault", "modulename": "practicuscore", "qualname": "vault", "kind": "class", "doc": "<p>The <code>vault</code> class provides high-level methods for managing secrets in a secure vault.\nThis includes creating or updating secrets, retrieving secrets, and deleting secrets\nas needed throughout your application lifecycle.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">vault</span><span class=\"o\">.</span><span class=\"n\">create_or_update_secret</span><span class=\"p\">(</span><span class=\"s2\">&quot;API_KEY&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;12345-abcdef&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">vault</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">&quot;API_KEY&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Retrieved secret:&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Age (days):&quot;</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">)</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">vault</span><span class=\"o\">.</span><span class=\"n\">delete_secret</span><span class=\"p\">(</span><span class=\"s2\">&quot;API_KEY&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Secret deleted successfully!&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.vault.create_or_update_secret": {"fullname": "practicuscore.vault.create_or_update_secret", "modulename": "practicuscore", "qualname": "vault.create_or_update_secret", "kind": "function", "doc": "<p>Creates or updates a secret in the vault.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name (unique identifier) of the secret.</li>\n<li>key (str): The secret data or key to store.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.vault.get_secret": {"fullname": "practicuscore.vault.get_secret", "modulename": "practicuscore", "qualname": "vault.get_secret", "kind": "function", "doc": "<p>Retrieves a secret from the vault.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name of the secret to retrieve.</li>\n<li>shared (bool | None): If True, retrieves a secret defined by an admin and shared with you or one of your groups\nif False, from a personal vault; if None, also personal vault is used.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, int): Returns a tuple containing the secret value (str)\nand an integer representing age in days.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">SecretManager</span><span class=\"p\">()</span>\n<span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">&quot;API_KEY&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Secret value:&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Secret age (days):&quot;</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">shared</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.vault.delete_secret": {"fullname": "practicuscore.vault.delete_secret", "modulename": "practicuscore", "qualname": "vault.delete_secret", "kind": "function", "doc": "<p>Deletes a personal secret from the vault.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name of the secret to delete.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.git": {"fullname": "practicuscore.git", "modulename": "practicuscore", "qualname": "git", "kind": "class", "doc": "<p>The <code>git</code> class provides high-level methods for working with Git repositories.\nThis allows you to synchronize, clone, or pull repositories using concise method calls.\nTo commit and push changes, please use git tools embedded into Jupyter Lab or VSCode,\nor git from terminal directly.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"n\">git_config</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">GitConfig</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">git</span><span class=\"o\">.</span><span class=\"n\">sync_repo</span><span class=\"p\">(</span><span class=\"n\">git_config</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.git.sync_repo": {"fullname": "practicuscore.git.sync_repo", "modulename": "practicuscore", "qualname": "git.sync_repo", "kind": "function", "doc": "<p>Syncs a Git repository into a local folder:\n  1) If local folder does not exist, clone (partial clone + sparse if requested).\n  2) If local folder exists, pull with --strategy=merge to integrate remote changes.</p>\n\n<p>Args:\n    config (GitConfig): Configuration options.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">GitConfig</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.git.clone_repo": {"fullname": "practicuscore.git.clone_repo", "modulename": "practicuscore", "qualname": "git.clone_repo", "kind": "function", "doc": "<p>Clones a Git repository (partial clone + sparse if requested) using either:</p>\n\n<ul>\n<li>Embedded credentials in URL (save_secret=True), or</li>\n<li>Environment-based askpass (save_secret=False).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">GitConfig</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.git.pull_repo": {"fullname": "practicuscore.git.pull_repo", "modulename": "practicuscore", "qualname": "git.pull_repo", "kind": "function", "doc": "<p>Performs a <code>git pull --strategy=merge</code> in the given repo_path.\nIf there are conflicts, they will be reported in stderr.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">repo_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.mq": {"fullname": "practicuscore.mq", "modulename": "practicuscore", "qualname": "mq", "kind": "class", "doc": "<p>SDK for RabbitMQ operations.\nProvides:</p>\n\n<ul>\n<li><code>consumer(...)</code>: Decorator for consumer (subscriber) functions.</li>\n<li><code>connect(...)</code>: Asynchronously connects to RabbitMQ (returns an MQConnection instance).</li>\n<li><code>publish(...)</code>: Asynchronously publishes messages.</li>\n<li><code>analyze(...)</code>: Inspects Python files for consumers (subscribers).</li>\n<li><code>test_consumer(...)</code>: Runs a consumer (subscriber) interactively for testing.</li>\n<li><code>apply_topology(...)</code>: Explicitly applies (declares) the topology (exchange, queue, binding).</li>\n<li><code>export_topology(...)</code>: Creates topology .yaml files (exchange, queue, binding, user, permissions, vhost).</li>\n</ul>\n\n<p><strong>Example</strong>:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">my_module</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">MQConfig</span><span class=\"p\">,</span> <span class=\"n\">mq</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">MQConfig</span><span class=\"p\">(</span>\n     <span class=\"n\">conn_str</span><span class=\"o\">=</span><span class=\"s2\">&quot;amqp://localhost&quot;</span><span class=\"p\">,</span>\n     <span class=\"n\">queue</span><span class=\"o\">=</span><span class=\"s2\">&quot;test-queue&quot;</span><span class=\"p\">,</span>        <span class=\"c1\"># For consumers (subscribers) or direct-to-queue publishing (if exchange=None).</span>\n     <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s2\">&quot;test-exchange&quot;</span><span class=\"p\">,</span>  <span class=\"c1\"># Omit if you prefer direct-to-queue publishing.</span>\n     <span class=\"n\">exchange_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;direct&quot;</span><span class=\"p\">,</span>\n     <span class=\"n\">verify_delivery</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n\n<span class=\"nd\">@mq</span><span class=\"o\">.</span><span class=\"n\">consumer</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">handle_message</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">,</span> <span class=\"n\">incoming</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Got:&quot;</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Headers:&quot;</span><span class=\"p\">,</span> <span class=\"n\">incoming</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Optionally, apply (declare) the topology (if you have configure privileges)</span>\n<span class=\"k\">await</span> <span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">apply_topology</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Asynchronous publishing:</span>\n<span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">publish</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Hello from async publisher!&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "practicuscore.mq.consumer": {"fullname": "practicuscore.mq.consumer", "modulename": "practicuscore", "qualname": "mq.consumer", "kind": "function", "doc": "<p>Decorator to mark an async function as a RabbitMQ consumer (subscriber).</p>\n\n<p>Usage:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nd\">@mq</span><span class=\"o\">.</span><span class=\"n\">consumer</span><span class=\"p\">(</span><span class=\"n\">MQConfig</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">))</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">my_consumer</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">,</span> <span class=\"n\">incoming</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n</code></pre>\n</div>\n\n<p>The function must be <code>async def</code>. The decorated function can have one or two parameters:</p>\n\n<ul>\n<li>1 param: receives the deserialized message (str or Pydantic model).</li>\n<li>2 params: second param is the raw <code>aio_pika.IncomingMessage</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mq_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">MQConfig</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.mq.connect": {"fullname": "practicuscore.mq.connect", "modulename": "practicuscore", "qualname": "mq.connect", "kind": "function", "doc": "<p>Connects to RabbitMQ using MQConnection (async).</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">MQConfig</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">mq_helper</span><span class=\"o\">.</span><span class=\"n\">MQConnection</span>:</span></span>", "funcdef": "async def"}, "practicuscore.mq.publish": {"fullname": "practicuscore.mq.publish", "modulename": "practicuscore", "qualname": "mq.publish", "kind": "function", "doc": "<p>Publishes a message asynchronously with retry logic.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">conn</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">mq_helper</span><span class=\"o\">.</span><span class=\"n\">MQConnection</span>,</span><span class=\"param\">\t<span class=\"n\">msg</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pydantic</span><span class=\"o\">.</span><span class=\"n\">main</span><span class=\"o\">.</span><span class=\"n\">BaseModel</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "practicuscore.mq.analyze": {"fullname": "practicuscore.mq.analyze", "modulename": "practicuscore", "qualname": "mq.analyze", "kind": "function", "doc": "<p>Analyzes a Python file for functions decorated with <code>@mq.consumer(...)</code>\nand returns the list of consumer (subscriber) functions. Raises TypeError if a\ndecorated function is not async.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">py_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">function</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.mq.test_consumer": {"fullname": "practicuscore.mq.test_consumer", "modulename": "practicuscore", "qualname": "mq.test_consumer", "kind": "function", "doc": "<p>Runs a consumer (subscriber) in the foreground for testing. Stops on KeyboardInterrupt.</p>\n\n<p>Example usage:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nd\">@mq</span><span class=\"o\">.</span><span class=\"n\">consumer</span><span class=\"p\">(</span><span class=\"n\">MQConfig</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">))</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">my_sub</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">await</span> <span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">test_consumer</span><span class=\"p\">(</span><span class=\"n\">my_sub</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">consumer</span><span class=\"p\">:</span> <span class=\"n\">function</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "practicuscore.mq.apply_topology": {"fullname": "practicuscore.mq.apply_topology", "modulename": "practicuscore", "qualname": "mq.apply_topology", "kind": "function", "doc": "<p>Explicitly applies (declares) the topology (exchange, queue, and binding) using the provided configuration.\nAssumes that the developer has full configure privileges on the RabbitMQ cluster.\nCloses the connection after applying (declaration).\nPrefer to use <code>mq.export_topology(...)</code> if you lack privileges.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">MQConfig</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "async def"}, "practicuscore.mq.export_topology": {"fullname": "practicuscore.mq.export_topology", "modulename": "practicuscore", "qualname": "mq.export_topology", "kind": "function", "doc": "<p>Generates Kubernetes YAML topology files based on the provided MQConfig using Jinja2 templates.</p>\n\n<p>This creates YAML definitions for RabbitMQ resources (exchange, queue, binding, etc.)\nand can generate helper bash scripts for applying/deleting these resources on Kubernetes.</p>\n\n<p>Parameters:\n    config (MQConfig): The configuration object containing connection details and topology settings.\n    files_path (str | None): The output directory for generated YAML files and scripts. Defaults to cwd.\n    namespace (str | None): Kubernetes namespace to use. Defaults to <code>core_context_glbl.k8s_namespace</code>.\n    create_user (bool): Whether to generate YAML for creating MQ user resources.\n    save_user_credentials (bool): If True, the generated secret file includes the actual password.\n    create_virtual_host (bool): Whether to generate YAML for creating the RabbitMQ virtual host.\n    create_scripts (bool): Whether to generate helper bash scripts (create/delete).\n    comment_out_delete_commands (bool): If True, the delete commands in the deletion script are commented out.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">MQConfig</span>,</span><span class=\"param\">\t<span class=\"n\">files_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">namespace</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">create_user</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">save_user_credentials</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">create_virtual_host</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">create_scripts</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">comment_out_delete_commands</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.notify": {"fullname": "practicuscore.notify", "modulename": "practicuscore", "qualname": "notify", "kind": "class", "doc": "<p>Convenience class for sending notifications.</p>\n\n<p>Exposes the <code>send</code> method of NotifyHelper as a static method and prevents instantiation.</p>\n"}, "practicuscore.notify.Notification": {"fullname": "practicuscore.notify.Notification", "modulename": "practicuscore", "qualname": "notify.Notification", "kind": "class", "doc": "<p>Represents a notification to be sent via the Practicus AI SDK.</p>\n", "bases": "pydantic.main.BaseModel"}, "practicuscore.notify.send": {"fullname": "practicuscore.notify.send", "modulename": "practicuscore", "qualname": "notify.send", "kind": "function", "doc": "<p>Sends a notification with the specified details.</p>\n\n<p>Parameters:</p>\n\n<ul>\n<li>recipients (list[str] | str | None): One or more recipient email addresses. If none, sends notification to current user.</li>\n<li>title (str | None): Title of the notification.</li>\n<li>body (str | None): Content of the notification.</li>\n<li>preheader (str | None): Preview text for email clients. If missing, defaults to the first 100 characters of the body.</li>\n<li>level (str | None): Log level. Options: \"debug\", \"info\", \"warning\", \"error\".\nLevel is also added to the bottom of the notification (if email) so users can create mailbox rules to route to folders easier.</li>\n<li>category (str | None): A category text such as 'xyz_success' 'abc_created' ...\nCategories are added to the bottom of the notification (if email) so users can create mailbox rules to route to folders easier.</li>\n<li>urgency (str | None): Urgency level. Options: \"low\", \"normal\", \"high\", \"critical\".\nUrgency is also added to the bottom of the notification (if email) so users can create mailbox rules to route to folders easier.</li>\n<li>send_plain_text (bool | None): If True, sends the notification as plain text.</li>\n<li>ignore_template (bool | None): If True, indicates that the body includes the complete HTML.</li>\n<li>additional_params (dict | None): Additional parameters for custom logic.</li>\n<li>exc_info (bool | None): If True, includes exception details (stack trace) in the notification.</li>\n<li>raise_on_error (bool): If False (default), errors on notifications get logged but do not raise an exception.</li>\n<li>region (Region | None): Pass a Practicus AI Region object if you are sending the notification on a region\nother than the current / default region. If you are also using a custom notification app,\ndefine it using PRT_CUSTOM_NOTIFY_APP_SUFFIX OS Environment variable, or else, /apps/notify/api/send/ is used.</li>\n</ul>\n\n<p>Returns:</p>\n\n<ul>\n<li>Notification: The created Notification instance.</li>\n</ul>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">notification</span> <span class=\"o\">=</span> <span class=\"n\">NotifyHelper</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span>\n    <span class=\"n\">recipients</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">&quot;user@example.com&quot;</span><span class=\"p\">],</span>\n    <span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s2\">&quot;Test Notification&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s2\">&quot;&lt;p&gt;Hello World!&lt;/p&gt;&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">exc_info</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">recipients</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">preheader</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">urgency</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">send_plain_text</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_template</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">additional_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">exc_info</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">raise_on_error</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">region</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.db": {"fullname": "practicuscore.db", "modulename": "practicuscore", "qualname": "db", "kind": "class", "doc": "<p>SDK for Database operations.</p>\n\n<p>Provides:</p>\n\n<ul>\n<li>init: Initialize the database structure.</li>\n<li>revision: Create a new database revision (revision message limited to 75 characters).</li>\n<li>upgrade: Upgrade the database to the latest migration.\n<ul>\n<li>Supports offline mode (generate a SQL script) via the 'offline' parameter.</li>\n</ul></li>\n</ul>\n\n<p>Example:\n    import practicuscore as prt</p>\n\n<pre><code># Initialize the database setup in the current directory.\nprt.db.init(overwrite=True)\n\n# Create a new revision (max 75 characters).\nprt.db.revision(\"Added new model\")\n\n# Upgrade the database online.\nprt.db.upgrade()\n\n# Or upgrade in offline mode (generate a SQL script).\nprt.db.upgrade(offline=True)\n</code></pre>\n"}, "practicuscore.db.init": {"fullname": "practicuscore.db.init", "modulename": "practicuscore", "qualname": "db.init", "kind": "function", "doc": "<p>Initialize the database structure for Practicus AI.</p>\n\n<p>This method performs the following steps:</p>\n\n<ol>\n<li>Creates the 'db' folder (if it doesn't exist) in the specified directory.</li>\n<li>Generates db/__init__.py with \"from .models import *\".</li>\n<li>Creates a sample db/models.py (if not already present) with a sample SQLModel and db/static_data.py</li>\n<li>Runs \"alembic init migrations\" to generate migrations folder and alembic.ini.</li>\n<li>Moves the generated migrations folder to db/migrations.</li>\n<li>Moves alembic.ini from the root to db/migrations.ini and updates it to set\n\"script_location = db/migrations\".</li>\n<li>Updates env.py in db/migrations:\n<ul>\n<li>Replaces \"target_metadata = None\" with code that:\na. Retrieves PRT_DB_CONN_STR from environment variables.\nb. Sets the sqlalchemy.url in the Alembic config.\nc. Imports db and SQLModel, setting target_metadata = SQLModel.metadata.</li>\n</ul></li>\n<li>Updates script.py.mako in db/migrations:\n<ul>\n<li>Inserts \"import sqlmodel\" at the top (above the marker) if it is not already present.</li>\n</ul></li>\n<li>Logs detailed debug and info messages to assist the user.\n<ol start=\"10\">\n<li>Informs the user that they can now open db/models.py to start adding their models.</li>\n</ol></li>\n</ol>\n\n<p>Parameters:\n    directory (str): The directory where the db folder will be created (default: current directory).\n    overwrite (bool): Whether to overwrite existing files (except models.py and static_data.py).</p>\n\n<p>Example:\n    import practicuscore as prt\n    prt.db.init(overwrite=True)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;.&#39;</span>, </span><span class=\"param\"><span class=\"n\">overwrite</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.db.revision": {"fullname": "practicuscore.db.revision", "modulename": "practicuscore", "qualname": "db.revision", "kind": "function", "doc": "<p>Generate a new Alembic revision with autogeneration using PRT_DB_CONN_STR OS env variable as connection string.</p>\n\n<p>The revision message must be 75 characters or fewer. After the revision is\ngenerated, review the migration script under db/migrations/versions and adjust\nthe auto-detected changes before proceeding with an upgrade.</p>\n\n<p>Parameters:\n    message (str): The revision message (max 75 characters).</p>\n\n<p>Example:\n    import practicuscore as prt\n    prt.db.revision(\"Added new model\")</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.db.upgrade": {"fullname": "practicuscore.db.upgrade", "modulename": "practicuscore", "qualname": "db.upgrade", "kind": "function", "doc": "<p>Upgrade the database to the latest revision using PRT_DB_CONN_STR OS env variable as connection string.</p>\n\n<p>Supports two modes:</p>\n\n<ul>\n<li>Online mode (default): Applies the latest migration revisions directly.</li>\n<li>Offline mode: Generates a SQL script (using --sql) that you can review and\nmanually apply to update your database.</li>\n</ul>\n\n<p>Parameters:\n    offline (bool): If True, generate a SQL script instead of applying changes.\n                   Defaults to False.</p>\n\n<p>Example:\n    import practicuscore as prt</p>\n\n<pre><code># Online upgrade:\nprt.db.upgrade()\n\n# Offline upgrade (generate SQL script):\nprt.db.upgrade(offline=True)\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">offline</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.db.upsert_static_data": {"fullname": "practicuscore.db.upsert_static_data", "modulename": "practicuscore", "qualname": "db.upsert_static_data", "kind": "function", "doc": "<p>Upserts (inserts, or updates if exists) static data to the app database using db/static_data.py file in current folder\nusing PRT_DB_CONN_STR OS env variable as connection string.\nPlease make sure your has static primary keys, and not auto-increment primary keys.\nWithout static primary keys, you will insert new data on each run.</p>\n\n<p>Returns:</p>\n\n<ul>\n<li>Dictionary of model name and number of rows upserted</li>\n</ul>\n\n<p>Example:\n    import practicuscore as prt\n    prt.db.upsert_static_data()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.addons": {"fullname": "practicuscore.addons", "modulename": "practicuscore", "qualname": "addons", "kind": "class", "doc": "<p>Helper methods for Practicus AI Add-ons.</p>\n"}, "practicuscore.addons.get_session_token": {"fullname": "practicuscore.addons.get_session_token", "modulename": "practicuscore", "qualname": "addons.get_session_token", "kind": "function", "doc": "<p>Gets an API session token for the selected add-on. One of key or addon parameter must be provided.\nPlease note that only some add-ons APIs can use these keys. Please check the documentation to learn more.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>key (str | None): The unique key of the add-on. You can use prt.addons.get_list() to view all the add-ons you have access to.</li>\n<li>addon (AddOn | None): The unique key of the add-on. You can use prt.addons.get_list() to view all the add-ons you have access to.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">add_ons</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">addons</span><span class=\"o\">.</span><span class=\"n\">get_list</span><span class=\"p\">()</span>\n<span class=\"c1\"># An session token for the first add-on in your list.</span>\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_addon_session_token</span><span class=\"p\">(</span><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">addons</span><span class=\"o\">.</span><span class=\"n\">get_list</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">addon</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">AddOn</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.addons.get_list": {"fullname": "practicuscore.addons.get_list", "modulename": "practicuscore", "qualname": "addons.get_list", "kind": "function", "doc": "<p>Retrieves a list of add-ons (3rd party services) integrated into this region.</p>\n\n<p>Add-ons might represent external analytics tools, monitoring services etc. accessible through the region.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[AddOn]: A read-only list of add-ons.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">addon</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">addon_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">addon</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">addon</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">AddOn</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region": {"fullname": "practicuscore.Region", "modulename": "practicuscore", "qualname": "Region", "kind": "class", "doc": "<p>Represents a Practicus AI \"Region,\" which is a logical control plane for managing resources\nsuch as workers (compute pods), models, applications, workflows, and data connections.</p>\n\n<p>A <code>Region</code> corresponds to an isolated environment often running on Kubernetes. Each Region\nholds configurations, credentials, and references to available services and data sources.\nBy interacting with a <code>Region</code>, you can:</p>\n\n<ul>\n<li>Launch and manage Workers or Workspaces for running code, notebooks, or hosting models.</li>\n<li>Deploy and manage ML models, view model prefixes and versions.</li>\n<li>Deploy and manage Streamlit-based applications.</li>\n<li>Manage data connections (e.g., S3, SQL databases, Snowflake).</li>\n<li>Work with add-ons integrated into the Practicus AI ecosystem.</li>\n</ul>\n\n<p><strong>Key Concepts:</strong></p>\n\n<ul>\n<li><strong>Workers and Workspaces:</strong> Kubernetes pods that run code, handle notebooks, or host services.</li>\n<li><strong>Model and App Deployments:</strong> ML models and Streamlit apps deployed as services accessible by stable URLs.</li>\n<li><strong>Connections:</strong> Configurations to external data sources (S3, databases, etc.).</li>\n<li><strong>Regions &amp; Isolation:</strong> Each Region is an isolated namespace, ensuring that resources\nand configurations do not conflict across environments.</li>\n</ul>\n\n<p><strong>Common Usage:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"nn\">prt</span>\n\n<span class=\"c1\"># Retrieve the default region</span>\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">get_default_region</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Launch a worker</span>\n<span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_worker</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># List current workers</span>\n<span class=\"k\">for</span> <span class=\"n\">w</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">worker_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"o\">.</span><span class=\"n\">instance_id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Deploy a model or app</span>\n<span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">deploy_model</span><span class=\"p\">(</span><span class=\"n\">deployment_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_model_service&quot;</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;mymodel&quot;</span><span class=\"p\">,</span> <span class=\"n\">model_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;model_v1&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">deploy_app</span><span class=\"p\">(</span><span class=\"n\">deployment_setting_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_app_service&quot;</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;apps&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;app_v1&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Manage data connections</span>\n<span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_connection</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_database&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Terminate all workers</span>\n<span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">terminate_all_workers</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n"}, "practicuscore.Region.__init__": {"fullname": "practicuscore.Region.__init__", "modulename": "practicuscore", "qualname": "Region.__init__", "kind": "function", "doc": "<p>Initializes a new Region instance.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>url (str): The base URL of the Practicus AI Region.</li>\n<li>email (str | None): The user's email associated with this Region.</li>\n<li>username (str | None): The username derived from the email or assigned for this Region.</li>\n<li>refresh_token (str | None): A refresh token for authenticating calls to the Region.</li>\n<li>access_token (str | None): An optional pre-obtained access token.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refresh_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">access_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "practicuscore.Region.logger": {"fullname": "practicuscore.Region.logger", "modulename": "practicuscore", "qualname": "Region.logger", "kind": "variable", "doc": "<p>Logger configuration for all region related activity</p>\n", "default_value": "&lt;Logger practicus.core.region (DEBUG)&gt;"}, "practicuscore.Region.url": {"fullname": "practicuscore.Region.url", "modulename": "practicuscore", "qualname": "Region.url", "kind": "variable", "doc": "<p>The base URL of the Practicus AI Region.</p>\n", "annotation": ": str"}, "practicuscore.Region.email": {"fullname": "practicuscore.Region.email", "modulename": "practicuscore", "qualname": "Region.email", "kind": "variable", "doc": "<p>The email address of the user associated with this Region session, if known.</p>\n", "annotation": ": str | None"}, "practicuscore.Region.username": {"fullname": "practicuscore.Region.username", "modulename": "practicuscore", "qualname": "Region.username", "kind": "variable", "doc": "<p>The username derived from the user's email or explicitly set for this Region session.</p>\n", "annotation": ": str | None"}, "practicuscore.Region.refresh_token": {"fullname": "practicuscore.Region.refresh_token", "modulename": "practicuscore", "qualname": "Region.refresh_token", "kind": "variable", "doc": "<p>The refresh token used for authenticating requests in this Region session.</p>\n", "annotation": ": str | None"}, "practicuscore.Region.get_csv_header": {"fullname": "practicuscore.Region.get_csv_header", "modulename": "practicuscore", "qualname": "Region.get_csv_header", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.host_dns": {"fullname": "practicuscore.Region.host_dns", "modulename": "practicuscore", "qualname": "Region.host_dns", "kind": "variable", "doc": "<p>Retrieves the host DNS of the region by stripping protocol from the URL.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The host DNS (e.g., \"my-region.example.com\").</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">host_dns</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": str"}, "practicuscore.Region.key": {"fullname": "practicuscore.Region.key", "modulename": "practicuscore", "qualname": "Region.key", "kind": "variable", "doc": "<p>A unique key identifying this region in the form \"username@host_dns\".</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The unique region key.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>  <span class=\"c1\"># e.g. &quot;alice@my-region.example.com&quot;</span>\n</code></pre>\n</div>\n", "annotation": ": str"}, "practicuscore.Region.is_default": {"fullname": "practicuscore.Region.is_default", "modulename": "practicuscore", "qualname": "Region.is_default", "kind": "variable", "doc": "<p>Checks whether this region is configured as the default region.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if this is the default region, False otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">if</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">is_default</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is the default region.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": bool"}, "practicuscore.Region.console_client": {"fullname": "practicuscore.Region.console_client", "modulename": "practicuscore", "qualname": "Region.console_client", "kind": "variable", "doc": "<p>For advanced scenarios only: returns internal API client for control plane (Practicus AI Console) operations.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>Active K8sConsoleClient instance</p>\n</blockquote>\n", "annotation": ": practicuscore.k8s_console_client.K8sConsoleClient"}, "practicuscore.Region.worker_list": {"fullname": "practicuscore.Region.worker_list", "modulename": "practicuscore", "qualname": "Region.worker_list", "kind": "variable", "doc": "<p>Retrieves a list of all Workers currently running in this region.</p>\n\n<p>Workers are refreshed periodically. If the cache is stale, this property automatically\nreloads the worker list from the region.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[Worker]: A read-only list of Workers.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">worker</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">worker_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">service_type</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.worker_manager.Worker]"}, "practicuscore.Region.reload_worker_list": {"fullname": "practicuscore.Region.reload_worker_list", "modulename": "practicuscore", "qualname": "Region.reload_worker_list", "kind": "function", "doc": "<p>Forces a reload of the worker list from the region, optionally filtering by service type\n(e.g., \"cloud_worker\", \"workspace\").</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>service_type (str | None): The service type to filter workers by. If None, returns all workers.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_worker_list</span><span class=\"p\">(</span><span class=\"n\">service_type</span><span class=\"o\">=</span><span class=\"s2\">&quot;cloud_worker&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">service_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.get_default_worker_size": {"fullname": "practicuscore.Region.get_default_worker_size", "modulename": "practicuscore", "qualname": "Region.get_default_worker_size", "kind": "function", "doc": "<p>Retrieves the default worker size for launching new workers if none is specified.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The default worker size name.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">default_size</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_default_worker_size</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Default worker size:&quot;</span><span class=\"p\">,</span> <span class=\"n\">default_size</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_default_worker_image": {"fullname": "practicuscore.Region.get_default_worker_image", "modulename": "practicuscore", "qualname": "Region.get_default_worker_image", "kind": "function", "doc": "<p>Retrieves the default container image for a given service type.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>service_type (str): The service type (e.g., \"cloud_worker\", \"workspace\").</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The URL of the default worker image.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">default_image</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_default_worker_image</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Default worker image:&quot;</span><span class=\"p\">,</span> <span class=\"n\">default_image</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">service_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cloud_worker&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.create_worker": {"fullname": "practicuscore.Region.create_worker", "modulename": "practicuscore", "qualname": "Region.create_worker", "kind": "function", "doc": "<p>Creates a new Practicus AI Worker in this region.</p>\n\n<p>If no <code>worker_config</code> is provided, defaults (default image and size) are used.\nThe worker can be a simple \"cloud_worker\" or a more complex distributed job.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): The worker configuration.\nCan be a <code>WorkerConfig</code> object, a path to a JSON file, a dict, or None.</li>\n<li>wait_until_ready (bool | None): If True, waits until the worker is fully ready.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Worker: The newly created Worker instance.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_worker</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Created worker:&quot;</span><span class=\"p\">,</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">wait_until_ready</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.create_workspace": {"fullname": "practicuscore.Region.create_workspace", "modulename": "practicuscore", "qualname": "Region.create_workspace", "kind": "function", "doc": "<p>Creates a new Practicus AI Workspace.</p>\n\n<p>A Workspace is a specialized worker configured for interactive development (e.g., Jupyter notebooks).</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): The workspace configuration.\nIf None, default settings are used.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Worker: The newly created workspace worker.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">workspace</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_workspace</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Created workspace:&quot;</span><span class=\"p\">,</span> <span class=\"n\">workspace</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_local_worker": {"fullname": "practicuscore.Region.get_local_worker", "modulename": "practicuscore", "qualname": "Region.get_local_worker", "kind": "function", "doc": "<p>Retrieves the Worker instance representing the current environment if the code is running inside a worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Worker: The local worker.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li>SystemError: If not running inside a worker.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">local_w</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_local_worker</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Local worker:&quot;</span><span class=\"p\">,</span> <span class=\"n\">local_w</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_or_create_worker": {"fullname": "practicuscore.Region.get_or_create_worker", "modulename": "practicuscore", "qualname": "Region.get_or_create_worker", "kind": "function", "doc": "<p>Gets an existing worker or creates a new one if none suitable exists.</p>\n\n<p>If <code>worker_config</code> is not provided and no suitable running worker is found, it creates a new one.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): The worker configuration.</li>\n<li>service_type (str): The service type (e.g. \"cloud_worker\").</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Worker: An existing or newly created worker.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_or_create_worker</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Worker:&quot;</span><span class=\"p\">,</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">service_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cloud_worker&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.model_prefix_list": {"fullname": "practicuscore.Region.model_prefix_list", "modulename": "practicuscore", "qualname": "Region.model_prefix_list", "kind": "variable", "doc": "<p>Retrieves a list of configured model prefixes available in this region.</p>\n\n<p>Model prefixes group related models, allowing you to organize and manage multiple versions and\ndeployments under a logical namespace.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[ModelPrefix]: A read-only list of model prefixes.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">prefix</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">model_prefix_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">.</span><span class=\"n\">prefix_name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.api_k8s.ModelPrefix]"}, "practicuscore.Region.model_list": {"fullname": "practicuscore.Region.model_list", "modulename": "practicuscore", "qualname": "Region.model_list", "kind": "variable", "doc": "<p>Retrieves a list of all models known to this region.</p>\n\n<p>Each <code>ModelMeta</code> object contains metadata about a model, such as its name, versions, and associated prefix.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[ModelMeta]: A read-only list of models.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">model</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">model_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">latest_version</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.api_k8s.ModelMeta]"}, "practicuscore.Region.app_list": {"fullname": "practicuscore.Region.app_list", "modulename": "practicuscore", "qualname": "Region.app_list", "kind": "variable", "doc": "<p>Retrieves a list of all applications known to this region.</p>\n\n<p>Each <code>AppMeta</code> object contains metadata about the app, such as its prefix, name, versions, and deployment info.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[AppMeta]: A read-only list of apps.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">app</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">app_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">app_name</span><span class=\"p\">,</span> <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">visible_name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.api_k8s.AppMeta]"}, "practicuscore.Region.app_prefix_list": {"fullname": "practicuscore.Region.app_prefix_list", "modulename": "practicuscore", "qualname": "Region.app_prefix_list", "kind": "variable", "doc": "<p>Retrieves a list of app prefixes available in this region.</p>\n\n<p>App prefixes group related applications, providing a logical namespace for organizing multiple apps.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[AppPrefix]: A read-only list of app prefixes.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">prefix</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">app_prefix_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">.</span><span class=\"n\">prefix</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.api_k8s.AppPrefix]"}, "practicuscore.Region.reload_model_prefix_list": {"fullname": "practicuscore.Region.reload_model_prefix_list", "modulename": "practicuscore", "qualname": "Region.reload_model_prefix_list", "kind": "function", "doc": "<p>Forces a reload of the model prefix list from the region.</p>\n\n<p>If prefixes are stale or changed, calling this method ensures you have the latest data.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_model_prefix_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.reload_model_list": {"fullname": "practicuscore.Region.reload_model_list", "modulename": "practicuscore", "qualname": "Region.reload_model_list", "kind": "function", "doc": "<p>Forces a reload of the model list from the region.</p>\n\n<p>Ensures that newly created or updated models are reflected locally.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_model_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.reload_app_list": {"fullname": "practicuscore.Region.reload_app_list", "modulename": "practicuscore", "qualname": "Region.reload_app_list", "kind": "function", "doc": "<p>Forces a reload of the app list from the region.</p>\n\n<p>Ensures that newly deployed or updated apps appear locally.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_app_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.reload_app_prefix_list": {"fullname": "practicuscore.Region.reload_app_prefix_list", "modulename": "practicuscore", "qualname": "Region.reload_app_prefix_list", "kind": "function", "doc": "<p>Forces a reload of the app prefix list from the region.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_app_prefix_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.model_deployment_list": {"fullname": "practicuscore.Region.model_deployment_list", "modulename": "practicuscore", "qualname": "Region.model_deployment_list", "kind": "variable", "doc": "<p>Retrieves a list of all model deployments currently defined in this region.</p>\n\n<p>A <code>ModelDeployment</code> represents a deployed model service, including routing and scaling details.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[ModelDeployment]: A read-only list of model deployments.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">deployment</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">model_deployment_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">deployment</span><span class=\"o\">.</span><span class=\"n\">model_name</span><span class=\"p\">,</span> <span class=\"n\">deployment</span><span class=\"o\">.</span><span class=\"n\">deployment_key</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.api_k8s.ModelDeployment]"}, "practicuscore.Region.app_deployment_setting_list": {"fullname": "practicuscore.Region.app_deployment_setting_list", "modulename": "practicuscore", "qualname": "Region.app_deployment_setting_list", "kind": "variable", "doc": "<p>Retrieves a list of all application deployment settings defined in this region.</p>\n\n<p><code>AppDeploymentSetting</code> provides configurations that influence how apps are deployed\n(e.g., environment variables, scaling settings).</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[AppDeploymentSetting]: A read-only list of app deployment settings.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">setting</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">app_deployment_setting_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">setting</span><span class=\"o\">.</span><span class=\"n\">deployment_setting_key</span><span class=\"p\">,</span> <span class=\"n\">setting</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.api_k8s.AppDeploymentSetting]"}, "practicuscore.Region.reload_model_deployment_list": {"fullname": "practicuscore.Region.reload_model_deployment_list", "modulename": "practicuscore", "qualname": "Region.reload_model_deployment_list", "kind": "function", "doc": "<p>Forces a reload of the model deployment list from the region.</p>\n\n<p>Ensures newly created or removed deployments are reflected locally.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_model_deployment_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.reload_app_deployment_setting_list": {"fullname": "practicuscore.Region.reload_app_deployment_setting_list", "modulename": "practicuscore", "qualname": "Region.reload_app_deployment_setting_list", "kind": "function", "doc": "<p>Forces a reload of the app deployment setting list from the region.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_app_deployment_setting_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.deploy_model": {"fullname": "practicuscore.Region.deploy_model", "modulename": "practicuscore", "qualname": "Region.deploy_model", "kind": "function", "doc": "<p>Deploys a ML model to this region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>deployment_key (str): The deployment key defined by admin.</li>\n<li>prefix (str): The model prefix.</li>\n<li>model_name (str): The model name.</li>\n<li>model_dir (str | None): Directory containing model files. If None, current directory is used.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, str, str): (Dynamic version API URL, Specific version API URL, Metadata API URL).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">dynamic_url</span><span class=\"p\">,</span> <span class=\"n\">version_url</span><span class=\"p\">,</span> <span class=\"n\">meta_url</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">deploy_model</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_model_service&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mymodel&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;model_v1&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">deployment_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">model_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.deploy_app": {"fullname": "practicuscore.Region.deploy_app", "modulename": "practicuscore", "qualname": "Region.deploy_app", "kind": "function", "doc": "<p>Deploys an application to this region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>deployment_setting_key (str): The deployment setting key defined by admin.</li>\n<li>prefix (str): The app prefix.</li>\n<li>app_name (str): The app name.</li>\n<li>app_dir (str | None): The directory with app files. If None, current directory is used.</li>\n<li>visible_name (str | None): User-facing name of the app.</li>\n<li>description (str | None): Short description of the app.</li>\n<li>startup_script (str | None): Startup script to run each time the app kubernetes pod starts.\nNote: App deployment setting can also have a startup script defined, in which case that script would run first.</li>\n<li>env_variables (dict | None): OS environment variables to pass to the App. Shared for all app versions.</li>\n<li>personal_secrets (list[str] | None): List of personal secrets to pull from the vault.\nYou can use PERSONAL_SECRET_1:NEW_OS_ENV format to rename the OS environment variable.</li>\n<li>shared_secrets (list[str] | None): Shared secrets saved by the admin in the vault.\nYou can use SHARED_SECRET_1:NEW_OS_ENV format to rename the OS environment variable.</li>\n<li>icon (str | None): Font Awesome icon name.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, str): (UI URL, API URL)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">deployment_setting_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">app_dir</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">visible_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">description</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">startup_script</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">env_variables</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">personal_secrets</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">shared_secrets</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">icon</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.delete_app": {"fullname": "practicuscore.Region.delete_app", "modulename": "practicuscore", "qualname": "Region.delete_app", "kind": "function", "doc": "<p>Deletes an entire application (all versions) from this region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>app_id (int | None): The app ID. If not provided, prefix and app_name must be given.</li>\n<li>prefix (str | None): The app prefix if app_id is not known.</li>\n<li>app_name (str | None): The app name if app_id is not known.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">delete_app</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;apps&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-app&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">app_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.delete_app_version": {"fullname": "practicuscore.Region.delete_app_version", "modulename": "practicuscore", "qualname": "Region.delete_app_version", "kind": "function", "doc": "<p>Deletes a specific version of an app from this region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>version (int | str): The version to delete.</li>\n<li>app_id (int | None): The app ID. If not provided, prefix and app_name must be given.</li>\n<li>prefix (str | None): The app prefix.</li>\n<li>app_name (str | None): The app name.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">delete_app_version</span><span class=\"p\">(</span><span class=\"n\">version</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;apps&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-app&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">app_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.prepare_app_db": {"fullname": "practicuscore.Region.prepare_app_db", "modulename": "practicuscore", "qualname": "Region.prepare_app_db", "kind": "function", "doc": "<p>Prepares database for an app by creating a database schema dedicated for the selected app_prefix and app_name, using database settings from deployment_setting_key.\nSince app versions can have a different deployment_settings, please make sure database schema and settings are compatible\nfor all app versions.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>prefix (str): The app prefix.</li>\n<li>app_name (str): The app name.</li>\n<li>deployment_setting_key (str): App deployment setting key.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, str): A tuple of (connection string, database schema name).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">prepare_app_db</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;apps&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-app&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">deployment_setting_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.remove_app_db": {"fullname": "practicuscore.Region.remove_app_db", "modulename": "practicuscore", "qualname": "Region.remove_app_db", "kind": "function", "doc": "<p><strong>DELETES DATA</strong> from the db dedicated to the app.\nResets database for the app by deleting the database schema dedicated for the selected app_prefix and app_name,\nusing the db configuration of deployment_setting_key.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>prefix (str): The app prefix.</li>\n<li>app_name (str): The app name.</li>\n<li>deployment_setting_key (str): App deployment setting key.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>None</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reset_app_db</span><span class=\"p\">(</span><span class=\"n\">prefix</span><span class=\"o\">=</span><span class=\"s2\">&quot;apps&quot;</span><span class=\"p\">,</span> <span class=\"n\">app_name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-app&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">app_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">deployment_setting_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.deploy_workflow": {"fullname": "practicuscore.Region.deploy_workflow", "modulename": "practicuscore", "qualname": "Region.deploy_workflow", "kind": "function", "doc": "<p>Deploys a workflow (e.g., an Airflow DAG) to this region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>service_key (str): The workflow service key defined by admin (e.g., Airflow).</li>\n<li>dag_key (str): The DAG key (must be a valid Python module name).</li>\n<li>files_path (str | None): The directory with workflow files. Defaults to current directory.</li>\n<li>max_files_to_upload (int): Maximum files to upload.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">deploy_workflow</span><span class=\"p\">(</span><span class=\"n\">service_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;airflow_service&quot;</span><span class=\"p\">,</span> <span class=\"n\">dag_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_pipeline&quot;</span><span class=\"p\">,</span> <span class=\"n\">files_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;workflow_files/&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">service_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">dag_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">files_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_files_to_upload</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">250</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.logout": {"fullname": "practicuscore.Region.logout", "modulename": "practicuscore", "qualname": "Region.logout", "kind": "function", "doc": "<p>Logs out from this region by removing stored credentials.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">logout</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Logged out from region.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.set_default": {"fullname": "practicuscore.Region.set_default", "modulename": "practicuscore", "qualname": "Region.set_default", "kind": "function", "doc": "<p>Sets this region as the default region.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">set_default</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Default region is now:&quot;</span><span class=\"p\">,</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.run_task": {"fullname": "practicuscore.Region.run_task", "modulename": "practicuscore", "qualname": "Region.run_task", "kind": "function", "doc": "<p>Runs a remote task (script) on a newly created or existing worker.</p>\n\n<p>The code and dependencies are uploaded to the worker, and the script is executed.\nIf <code>terminate_on_completion</code> is True, the worker is terminated after the task finishes.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>file_name (str | None): The Python (.py) or shell (.sh) script to run after files are uploaded.</li>\n<li>files_path (str | None): Directory containing files to upload. Defaults to current directory.</li>\n<li>upload_files (bool): Default is True. Uploads files defined by files_path, or current dir if files_path is not defined.\nIf False, you must upload files separately e.g. using automated git sync,\nor run a file already in ~/my or ~/shared folder and set file_path_on_worker param.</li>\n<li>file_path_on_worker (str | None): If you are not uploading files, you must set file_path_on_worker param\nto the path of the Python (.py) or shell (.sh) script to run. This file must already be present on the Worker\ne.g. by using automated git sync, or a file already in ~/my or ~/shared folders.</li>\n<li>worker_config (WorkerConfig | str | dict | None): Configuration for the remote worker.</li>\n<li>terminate_on_completion (bool): If True, terminates the worker after completion.</li>\n<li>capture_task_output (bool): If True, captures and logs the script's stdout and stderr.</li>\n<li>python_venv_name (str | None): Name of a Python virtual environment to use on the worker.</li>\n<li>max_files_to_upload (int): Max number of files to upload.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(Worker | None, bool): A tuple of (worker, success_boolean).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span><span class=\"p\">,</span> <span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">run_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;analysis.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">files_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;project_code/&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">success</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Task ran successfully!&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">files_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">upload_files</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">file_path_on_worker</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">terminate_on_completion</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">capture_task_output</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">python_venv_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_files_to_upload</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">250</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_model_api_session_token": {"fullname": "practicuscore.Region.get_model_api_session_token", "modulename": "practicuscore", "qualname": "Region.get_model_api_session_token", "kind": "function", "doc": "<p>Retrieves a short-lived session token for interacting with a model's API.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>api_url (str): The model API URL.</li>\n<li>for_upload (bool): If True, requests a token with permissions for model uploads.</li>\n<li>retry (int): Number of times to retry obtaining a token.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The session token, or None if unable to fetch.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_model_api_session_token</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://my-region.com/mymodel/&quot;</span><span class=\"p\">,</span> <span class=\"n\">for_upload</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">token</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Got token for model API upload.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">for_upload</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">retry</span><span class=\"o\">=</span><span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_app_api_session_token": {"fullname": "practicuscore.Region.get_app_api_session_token", "modulename": "practicuscore", "qualname": "Region.get_app_api_session_token", "kind": "function", "doc": "<p>Retrieves a short-lived session token for interacting with an app's API.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>api_url (str | None): The app API URL.</li>\n<li>app_id (int | None): The app's unique identifier.</li>\n<li>for_upload (bool): If True, requests a token for uploading a new app version.</li>\n<li>retry (int): Number of times to retry obtaining a token.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The session token, or None if unable to fetch.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_app_api_session_token</span><span class=\"p\">(</span><span class=\"n\">app_id</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">,</span> <span class=\"n\">for_upload</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">token</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Got token for app API.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">api_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">app_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">for_upload</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">retry</span><span class=\"o\">=</span><span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.addon_list": {"fullname": "practicuscore.Region.addon_list", "modulename": "practicuscore", "qualname": "Region.addon_list", "kind": "variable", "doc": "<p>Retrieves a list of add-ons (3rd party services) integrated into this region.</p>\n\n<p>Add-ons might represent external analytics tools, monitoring services etc. accessible through the region.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[AddOn]: A read-only list of add-ons.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">addon</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">addon_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">addon</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">addon</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.api_k8s.AddOn]"}, "practicuscore.Region.reload_addon_list": {"fullname": "practicuscore.Region.reload_addon_list", "modulename": "practicuscore", "qualname": "Region.reload_addon_list", "kind": "function", "doc": "<p>Forces a reload of the add-on list from the region.</p>\n\n<p>Ensures that any newly added or updated add-ons are reflected locally.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_addon_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.get_addon": {"fullname": "practicuscore.Region.get_addon", "modulename": "practicuscore", "qualname": "Region.get_addon", "kind": "function", "doc": "<p>Retrieves an AddOn by its key.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>key (str): The unique identifier of the add-on.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>AddOn | None: The matching add-on, or None if not found.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">addon</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_addon</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_addon_key&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">addon</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Add-on name:&quot;</span><span class=\"p\">,</span> <span class=\"n\">addon</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Add-on not found.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">AddOn</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.open_addon": {"fullname": "practicuscore.Region.open_addon", "modulename": "practicuscore", "qualname": "Region.open_addon", "kind": "function", "doc": "<p>Opens the specified add-on in a browser or a suitable interface if supported.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>key (str): The unique identifier of the add-on to open.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">open_addon</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_addon_key&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.get_addon_session_token": {"fullname": "practicuscore.Region.get_addon_session_token", "modulename": "practicuscore", "qualname": "Region.get_addon_session_token", "kind": "function", "doc": "<p>Gets an API session token for the selected add-on. One of key or addon parameter must be provided.\nPlease note that only some add-ons APIs can use these keys. Please check the documentation to learn more.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>key (str | None): The unique key of the add-on. You can use prt.addons.get_list() to view all the add-ons you have access to.</li>\n<li>addon (AddOn | None): The unique key of the add-on. You can use prt.addons.get_list() to view all the add-ons you have access to.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">add_ons</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">addons</span><span class=\"o\">.</span><span class=\"n\">get_list</span><span class=\"p\">()</span>\n<span class=\"c1\"># An session token for the first add-on in your list.</span>\n<span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_addon_session_token</span><span class=\"p\">(</span><span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">addons</span><span class=\"o\">.</span><span class=\"n\">get_list</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">addon</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_k8s</span><span class=\"o\">.</span><span class=\"n\">AddOn</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_worker": {"fullname": "practicuscore.Region.get_worker", "modulename": "practicuscore", "qualname": "Region.get_worker", "kind": "function", "doc": "<p>Removes a worker from the region's internal cache without terminating it.</p>\n\n<p>This is typically used internally. To fully terminate a worker, use <code>terminate_worker()</code>.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_name (str): The name of the worker to remove from the cache.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">remove_worker_from_cache</span><span class=\"p\">(</span><span class=\"s2\">&quot;Worker-123&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">worker_name_or_num</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_connection": {"fullname": "practicuscore.Region.get_connection", "modulename": "practicuscore", "qualname": "Region.get_connection", "kind": "function", "doc": "<p>Retrieves a data connection by UUID or name.</p>\n\n<p>Names are not guaranteed unique, so it's recommended to use UUIDs in production.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>uuid_or_name (str): The connection's UUID or name.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Connection | None: The matching connection, or None if not found.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">conn</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_connection</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_database&quot;</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">conn</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Found connection:&quot;</span><span class=\"p\">,</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">uuid_or_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">conn_helper</span><span class=\"o\">.</span><span class=\"n\">Connection</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.remove_worker_from_cache": {"fullname": "practicuscore.Region.remove_worker_from_cache", "modulename": "practicuscore", "qualname": "Region.remove_worker_from_cache", "kind": "function", "doc": "<p>Removes a worker from the region's internal cache without terminating it.</p>\n\n<p>This is typically used internally. To fully terminate a worker, use <code>terminate_worker()</code>.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_name (str): The name of the worker to remove from the cache.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">remove_worker_from_cache</span><span class=\"p\">(</span><span class=\"s2\">&quot;Worker-123&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">worker_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.terminate_worker": {"fullname": "practicuscore.Region.terminate_worker", "modulename": "practicuscore", "qualname": "Region.terminate_worker", "kind": "function", "doc": "<p>Terminates one or all workers in this region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_name_or_num (str | int | None): The worker name or numeric suffix (e.g. \"Worker-123\" or \"123\").</li>\n<li>all_workers (bool): If True, terminates all workers in the region.</li>\n<li>instance_id (str | None): The instance_id of a worker, if not using name/num.</li>\n<li>stop_reason (str): A reason for stopping, used for logging and audit.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if at least one worker was terminated, False otherwise.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">terminate_worker</span><span class=\"p\">(</span><span class=\"n\">worker_name_or_num</span><span class=\"o\">=</span><span class=\"s2\">&quot;Worker-123&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">terminate_worker</span><span class=\"p\">(</span><span class=\"n\">all_workers</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">worker_name_or_num</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">all_workers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stop_reason</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sdk requested&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_groups": {"fullname": "practicuscore.Region.get_groups", "modulename": "practicuscore", "qualname": "Region.get_groups", "kind": "function", "doc": "<p>Retrieves the group memberships of the currently logged-in user.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>list[str]: A list of group names.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">groups</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_groups</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;User groups:&quot;</span><span class=\"p\">,</span> <span class=\"n\">groups</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.terminate_all_workers": {"fullname": "practicuscore.Region.terminate_all_workers", "modulename": "practicuscore", "qualname": "Region.terminate_all_workers", "kind": "function", "doc": "<p>Terminates all workers in this region.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if any workers were terminated, False if none were found.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">terminate_all_workers</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.connection_list": {"fullname": "practicuscore.Region.connection_list", "modulename": "practicuscore", "qualname": "Region.connection_list", "kind": "variable", "doc": "<p>Retrieves a sorted list of all data connections defined in this region.</p>\n\n<p>Connections can point to databases, S3 buckets, or other external data sources.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[Connection]: A read-only list of connections sorted by name.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">conn</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">connection_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">conn</span><span class=\"o\">.</span><span class=\"n\">uuid</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.conn_helper.Connection]"}, "practicuscore.Region.reload_connection_list": {"fullname": "practicuscore.Region.reload_connection_list", "modulename": "practicuscore", "qualname": "Region.reload_connection_list", "kind": "function", "doc": "<p>Forces a reload of the data connection list from the region.</p>\n\n<p>Ensures newly created or updated connections appear locally.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_connection_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.create_connection": {"fullname": "practicuscore.Region.create_connection", "modulename": "practicuscore", "qualname": "Region.create_connection", "kind": "function", "doc": "<p>Creates a new data connection in this region.</p>\n\n<p>A data connection stores credentials and parameters for accessing external data sources,\nsuch as databases or S3 buckets.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): A unique name for the new connection.</li>\n<li>conn_conf (ConnConf): The connection configuration object describing the data source.</li>\n<li>tree_path (str | None): An optional hierarchical path for organizing the connection, e.g. \"teamA/projects\".</li>\n<li>can_write (bool): If True, this connection can be used for write operations.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The UUID of the newly created connection.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">S3ConnConf</span><span class=\"p\">,</span> <span class=\"n\">connections</span>\n\n<span class=\"n\">s3_conf</span> <span class=\"o\">=</span> <span class=\"n\">S3ConnConf</span><span class=\"p\">(</span><span class=\"n\">access_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;AKIA...&quot;</span><span class=\"p\">,</span> <span class=\"n\">secret_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;secret...&quot;</span><span class=\"p\">,</span> <span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-bucket&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">uuid</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_connection</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_s3_conn&quot;</span><span class=\"p\">,</span> <span class=\"n\">conn_conf</span><span class=\"o\">=</span><span class=\"n\">s3_conf</span><span class=\"p\">,</span> <span class=\"n\">can_write</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Created connection with UUID:&quot;</span><span class=\"p\">,</span> <span class=\"n\">uuid</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">ConnConf</span>,</span><span class=\"param\">\t<span class=\"n\">tree_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">can_write</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.update_connection": {"fullname": "practicuscore.Region.update_connection", "modulename": "practicuscore", "qualname": "Region.update_connection", "kind": "function", "doc": "<p>Updates an existing data connection's configuration.</p>\n\n<p>This method allows changing connection details (e.g., credentials, endpoints) or reorganizing\nhow connections are stored (via <code>tree_path</code>).</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>conn_uuid (str): The UUID of the existing connection to update.</li>\n<li>name (str): The new name for the connection. You can keep the old name or provide a new one.</li>\n<li>conn_conf (ConnConf): The updated connection configuration.</li>\n<li>tree_path (str | None): An optional hierarchical path for reorganizing the connection.</li>\n<li>can_write (bool): If True, the updated connection can be used for write operations.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Assume we previously retrieved or created a connection with UUID &quot;abcd1234&quot;</span>\n<span class=\"n\">updated_s3_conf</span> <span class=\"o\">=</span> <span class=\"n\">S3ConnConf</span><span class=\"p\">(</span><span class=\"n\">access_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;AKIA...&quot;</span><span class=\"p\">,</span> <span class=\"n\">secret_key</span><span class=\"o\">=</span><span class=\"s2\">&quot;new_secret&quot;</span><span class=\"p\">,</span> <span class=\"n\">bucket</span><span class=\"o\">=</span><span class=\"s2\">&quot;my-new-bucket&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">update_connection</span><span class=\"p\">(</span><span class=\"n\">conn_uuid</span><span class=\"o\">=</span><span class=\"s2\">&quot;abcd1234&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_updated_s3_conn&quot;</span><span class=\"p\">,</span> <span class=\"n\">conn_conf</span><span class=\"o\">=</span><span class=\"n\">updated_s3_conf</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Connection updated successfully.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">conn_uuid</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">ConnConf</span>,</span><span class=\"param\">\t<span class=\"n\">tree_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">can_write</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.create_or_update_secret": {"fullname": "practicuscore.Region.create_or_update_secret", "modulename": "practicuscore", "qualname": "Region.create_or_update_secret", "kind": "function", "doc": "<p>Creates or updates a secret in the vault.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name (unique identifier) of the secret.</li>\n<li>key (str): The secret data or key to store.</li>\n</ul>\n\n<p><strong>Returns:</strong>\n   Action string: e.g. create or updated</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_secret": {"fullname": "practicuscore.Region.get_secret", "modulename": "practicuscore", "qualname": "Region.get_secret", "kind": "function", "doc": "<p>Retrieves a secret from the vault.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name of the secret to retrieve.</li>\n<li>shared (bool | None): If True, retrieves a secret defined by an admin and shared with you or one of your groups\nif False, from a personal vault; if None, also personal vault is used.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, int): Returns a tuple containing the secret value (str)\nand an integer representing age in days.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">SecretManager</span><span class=\"p\">()</span>\n<span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">get_secret</span><span class=\"p\">(</span><span class=\"s2\">&quot;API_KEY&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Secret value:&quot;</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Secret age (days):&quot;</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">shared</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.delete_secret": {"fullname": "practicuscore.Region.delete_secret", "modulename": "practicuscore", "qualname": "Region.delete_secret", "kind": "function", "doc": "<p>Deletes a personal secret from the vault.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>name (str): The name of the secret to delete.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>None</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.worker_size_list": {"fullname": "practicuscore.Region.worker_size_list", "modulename": "practicuscore", "qualname": "Region.worker_size_list", "kind": "variable", "doc": "<p>Retrieves a list of worker sizes available in this region.</p>\n\n<p>Worker sizes define the compute resources (CPU, memory) allocated to a worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[WorkerSize]: A read-only list of worker sizes.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">size</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">worker_size_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">.</span><span class=\"n\">default</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.worker_manager.WorkerSize]"}, "practicuscore.Region.reload_worker_size_list": {"fullname": "practicuscore.Region.reload_worker_size_list", "modulename": "practicuscore", "qualname": "Region.reload_worker_size_list", "kind": "function", "doc": "<p>Forces a reload of the worker size list from the region.</p>\n\n<p>Ensures that any newly added or updated worker sizes are reflected locally.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_worker_size_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.worker_image_list": {"fullname": "practicuscore.Region.worker_image_list", "modulename": "practicuscore", "qualname": "Region.worker_image_list", "kind": "variable", "doc": "<p>Retrieves a list of available worker images in this region.</p>\n\n<p>Worker images define the software environment (base Docker image) used by workers or workspaces.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[WorkerImage]: A read-only list of worker images, sorted by priority (order).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">for</span> <span class=\"n\">img</span> <span class=\"ow\">in</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">worker_image_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"o\">.</span><span class=\"n\">service_type</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.worker_manager.WorkerImage]"}, "practicuscore.Region.reload_worker_image_list": {"fullname": "practicuscore.Region.reload_worker_image_list", "modulename": "practicuscore", "qualname": "Region.reload_worker_image_list", "kind": "function", "doc": "<p>Forces a reload of the worker image list from the region.</p>\n\n<p>Ensures that any newly added or updated worker images are reflected locally.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">reload_worker_image_list</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.get_access_token": {"fullname": "practicuscore.Region.get_access_token", "modulename": "practicuscore", "qualname": "Region.get_access_token", "kind": "function", "doc": "<p>Retrieves an access token for the region using the stored refresh token.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The access token.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_access_token</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Access token:&quot;</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_refresh_token": {"fullname": "practicuscore.Region.get_refresh_token", "modulename": "practicuscore", "qualname": "Region.get_refresh_token", "kind": "function", "doc": "<p>Retrieves a refresh token for the region using the stored refresh token.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The refresh token.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_refresh_token</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Refresh token:&quot;</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_refresh_and_access_token": {"fullname": "practicuscore.Region.get_refresh_and_access_token", "modulename": "practicuscore", "qualname": "Region.get_refresh_and_access_token", "kind": "function", "doc": "<p>Retrieves a refreshed access token and refresh token from the region.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, str): (refresh_token, access_token)</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">refresh_t</span><span class=\"p\">,</span> <span class=\"n\">access_t</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_refresh_and_access_token</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.get_workspace_credentials": {"fullname": "practicuscore.Region.get_workspace_credentials", "modulename": "practicuscore", "qualname": "Region.get_workspace_credentials", "kind": "function", "doc": "<p>Retrieves the login credentials for a specified workspace.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>instance_id (str): The instance ID of the workspace.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, str): (username, password)</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">pwd</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">get_workspace_credentials</span><span class=\"p\">(</span><span class=\"s2\">&quot;instance1234&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Workspace creds:&quot;</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">pwd</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">instance_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Region.recreate_model_deployment": {"fullname": "practicuscore.Region.recreate_model_deployment", "modulename": "practicuscore", "qualname": "Region.recreate_model_deployment", "kind": "function", "doc": "<p>Re-creates a model deployment, deleting and recreating it. This is an admin operation often used in testing.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>model_deployment_key (str): The key of the model deployment to recreate.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">recreate_model_deployment</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_model_deployment_key&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model_deployment_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.change_password": {"fullname": "practicuscore.Region.change_password", "modulename": "practicuscore", "qualname": "Region.change_password", "kind": "function", "doc": "<p>Changes the currently logged-in user's password.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>old_password (str): The current password.</li>\n<li>new_password (str): The new password, which must meet complexity requirements.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">change_password</span><span class=\"p\">(</span><span class=\"n\">old_password</span><span class=\"o\">=</span><span class=\"s2\">&quot;oldpass&quot;</span><span class=\"p\">,</span> <span class=\"n\">new_password</span><span class=\"o\">=</span><span class=\"s2\">&quot;NewP@ssw0rd!&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Password changed successfully.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">old_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Region.get_ai_assistants": {"fullname": "practicuscore.Region.get_ai_assistants", "modulename": "practicuscore", "qualname": "Region.get_ai_assistants", "kind": "function", "doc": "<p>Retrieves the AI Assistants that the current logged in user has access to.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>include_custom_tokens (str): If True (default) returns The current password.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>list[dict]: The list of metadata dictionary of AI Assistants</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker": {"fullname": "practicuscore.Worker", "modulename": "practicuscore", "qualname": "Worker", "kind": "class", "doc": "<p>Represents a compute resource (pod) running in a Practicus AI Region.</p>\n\n<p>A Worker can host notebooks, run scripts, process data, perform distributed jobs, training,\nand serve as the foundation for various workloads.\nWorkers are managed by the <code>Region</code> and are typically created through methods like <code>region.create_worker()</code>\nor <code>region.get_local_worker()</code>.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Creating a worker through the region:</span>\n<span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">create_worker</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Running a task on the worker:</span>\n<span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">region</span><span class=\"o\">.</span><span class=\"n\">run_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;analysis.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">files_path</span><span class=\"o\">=</span><span class=\"s2\">&quot;project_code/&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Task successful:&quot;</span><span class=\"p\">,</span> <span class=\"n\">success</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Opening a notebook on the worker:</span>\n<span class=\"n\">notebook_url</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">open_notebook</span><span class=\"p\">(</span><span class=\"n\">get_url_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Notebook URL:&quot;</span><span class=\"p\">,</span> <span class=\"n\">notebook_url</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Once you are done with the Worker, you can terminate it to free resources:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">terminate</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n"}, "practicuscore.Worker.__init__": {"fullname": "practicuscore.Worker.__init__", "modulename": "practicuscore", "qualname": "Worker.__init__", "kind": "function", "doc": "<p>Initializes a new Worker instance associated with a given Region.</p>\n\n<p>Normally, you don't directly instantiate <code>Worker</code>. Instead, you obtain <code>Worker</code> instances by calling methods\nlike <code>region.create_worker()</code> or <code>region.get_local_worker()</code>.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>region (Region): The region this worker belongs to.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">region</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span></span>)</span>"}, "practicuscore.Worker.logger": {"fullname": "practicuscore.Worker.logger", "modulename": "practicuscore", "qualname": "Worker.logger", "kind": "variable", "doc": "<p>Logger configuration for all worker related activity</p>\n", "default_value": "&lt;Logger practicus.core.worker (DEBUG)&gt;"}, "practicuscore.Worker.region": {"fullname": "practicuscore.Worker.region", "modulename": "practicuscore", "qualname": "Worker.region", "kind": "variable", "doc": "<p>The parent (owner) <code>Region</code> of this worker</p>\n", "annotation": ": practicuscore.region_manager.Region"}, "practicuscore.Worker.create_model_response": {"fullname": "practicuscore.Worker.create_model_response", "modulename": "practicuscore", "qualname": "Worker.create_model_response", "kind": "variable", "doc": "<p>For internal use</p>\n", "annotation": ": Optional[practicuscore.api_def.CreateModelResponse]"}, "practicuscore.Worker.async_op_issue_list": {"fullname": "practicuscore.Worker.async_op_issue_list", "modulename": "practicuscore", "qualname": "Worker.async_op_issue_list", "kind": "variable", "doc": "<p>For internal use</p>\n", "annotation": ": list[practicuscore.core_def.OPResult]"}, "practicuscore.Worker.async_op_issue_history_list": {"fullname": "practicuscore.Worker.async_op_issue_history_list", "modulename": "practicuscore", "qualname": "Worker.async_op_issue_history_list", "kind": "variable", "doc": "<p>For internal use</p>\n", "annotation": ": list[practicuscore.core_def.OPResult]"}, "practicuscore.Worker.get_csv_header": {"fullname": "practicuscore.Worker.get_csv_header", "modulename": "practicuscore", "qualname": "Worker.get_csv_header", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.service_type": {"fullname": "practicuscore.Worker.service_type", "modulename": "practicuscore", "qualname": "Worker.service_type", "kind": "variable", "doc": "<p>The type of service this worker provides (e.g., \"cloud_worker\", \"workspace\").</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The worker's service type.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.instance_id": {"fullname": "practicuscore.Worker.instance_id", "modulename": "practicuscore", "qualname": "Worker.instance_id", "kind": "variable", "doc": "<p>The unique instance identifier of this worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The worker's instance ID, or None if not assigned yet.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.server_name": {"fullname": "practicuscore.Worker.server_name", "modulename": "practicuscore", "qualname": "Worker.server_name", "kind": "variable", "doc": "<p>A system-generated server (Kubernetes pod) name for internal use.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The server name based on the worker's instance ID.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.server_addr": {"fullname": "practicuscore.Worker.server_addr", "modulename": "practicuscore", "qualname": "Worker.server_addr", "kind": "variable", "doc": "<p>The internal Kubernetes service address name used within the cluster.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The cluster service address name, or None if not assigned.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.server_addr_fqdn": {"fullname": "practicuscore.Worker.server_addr_fqdn", "modulename": "practicuscore", "qualname": "Worker.server_addr_fqdn", "kind": "variable", "doc": "<p>The fully qualified domain name (FQDN) of the worker's service within the Kubernetes cluster.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The cluster-local FQDN of the worker's service.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.image": {"fullname": "practicuscore.Worker.image", "modulename": "practicuscore", "qualname": "Worker.image", "kind": "variable", "doc": "<p>The container image used by this worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The image string.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.image_id": {"fullname": "practicuscore.Worker.image_id", "modulename": "practicuscore", "qualname": "Worker.image_id", "kind": "variable", "doc": "<p>A parsed image identifier derived from the worker's image.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The simplified image ID extracted from the image string.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.creation_time": {"fullname": "practicuscore.Worker.creation_time", "modulename": "practicuscore", "qualname": "Worker.creation_time", "kind": "variable", "doc": "<p>The timestamp when this worker was created.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>datetime | None: The creation timestamp, or None if not available.</li>\n</ul>\n", "annotation": ": datetime.datetime | None"}, "practicuscore.Worker.name": {"fullname": "practicuscore.Worker.name", "modulename": "practicuscore", "qualname": "Worker.name", "kind": "variable", "doc": "<p>The friendly name of this worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The worker's name (e.g., \"Worker-123\").</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.size": {"fullname": "practicuscore.Worker.size", "modulename": "practicuscore", "qualname": "Worker.size", "kind": "variable", "doc": "<p>The worker size, representing the compute resources allocated (e.g., \"Medium\").</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The worker size name.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.total_mem_gb": {"fullname": "practicuscore.Worker.total_mem_gb", "modulename": "practicuscore", "qualname": "Worker.total_mem_gb", "kind": "variable", "doc": "<p>The total memory allocated to this worker, in gigabytes.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>float | None: The total memory in GB.</li>\n</ul>\n", "annotation": ": float | None"}, "practicuscore.Worker.cpu": {"fullname": "practicuscore.Worker.cpu", "modulename": "practicuscore", "qualname": "Worker.cpu", "kind": "variable", "doc": "<p>The number of CPU cores allocated to this worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>float | None: The count of CPU cores.</li>\n</ul>\n", "annotation": ": float | None"}, "practicuscore.Worker.gpu": {"fullname": "practicuscore.Worker.gpu", "modulename": "practicuscore", "qualname": "Worker.gpu", "kind": "variable", "doc": "<p>The number of GPU cores allocated to this worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>float | None: The GPU core count.</li>\n</ul>\n", "annotation": ": float | None"}, "practicuscore.Worker.status": {"fullname": "practicuscore.Worker.status", "modulename": "practicuscore", "qualname": "Worker.status", "kind": "variable", "doc": "<p>The current status/state of this worker (e.g., \"Running\", \"Terminated\").</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The worker's status.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.ready": {"fullname": "practicuscore.Worker.ready", "modulename": "practicuscore", "qualname": "Worker.ready", "kind": "variable", "doc": "<p>The current ready state of this worker</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool | None: The worker's ready status, True if ready, False if readiness failed. None if ready status not knwown.</li>\n</ul>\n", "annotation": ": bool | None"}, "practicuscore.Worker.job_id": {"fullname": "practicuscore.Worker.job_id", "modulename": "practicuscore", "qualname": "Worker.job_id", "kind": "variable", "doc": "<p>The job ID, if this worker is part of a distributed job cluster.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The distributed job ID, or None if not applicable.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.Worker.terminating": {"fullname": "practicuscore.Worker.terminating", "modulename": "practicuscore", "qualname": "Worker.terminating", "kind": "variable", "doc": "<p>Indicates whether this worker is in the process of shutting down or already terminated.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if the worker is terminating or terminated, False otherwise.</li>\n</ul>\n", "annotation": ": bool"}, "practicuscore.Worker.assign_node": {"fullname": "practicuscore.Worker.assign_node", "modulename": "practicuscore", "qualname": "Worker.assign_node", "kind": "function", "doc": "<p>Associates the Worker with a specific underlying <code>CloudNode</code>.</p>\n\n<p><strong>Note:</strong> This method is intended for internal use and is typically called when the Worker is created.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>node (CloudNode): The underlying cloud node representing this worker's infrastructure.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">cloud_def</span><span class=\"o\">.</span><span class=\"n\">CloudNode</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Worker.local_worker_factory": {"fullname": "practicuscore.Worker.local_worker_factory", "modulename": "practicuscore", "qualname": "Worker.local_worker_factory", "kind": "function", "doc": "<p>Creates a Worker instance representing the local environment if the code is running on a Practicus AI Worker.</p>\n\n<p><strong>Note:</strong> This is intended for internal use.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>k8s_region (K8sRegion): The Kubernetes region configuration.</li>\n<li>region (Region): The parent Region instance.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Worker: A Worker object representing the local worker environment.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">k8s_region</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">cloud_def</span><span class=\"o\">.</span><span class=\"n\">K8sRegion</span>,</span><span class=\"param\">\t<span class=\"n\">region</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.terminate": {"fullname": "practicuscore.Worker.terminate", "modulename": "practicuscore", "qualname": "Worker.terminate", "kind": "function", "doc": "<p>Terminates the worker, releasing its resources.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>stop_reason (str): A short reason for termination (used for auditing).</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">terminate</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stop_reason</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;sdk requested&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Worker.load": {"fullname": "practicuscore.Worker.load", "modulename": "practicuscore", "qualname": "Worker.load", "kind": "function", "doc": "<p>Loads data into a new Process running on this worker.</p>\n\n<p>This method sets up a data processing environment (like Pandas or Spark) on the worker\nto interact with data from a given connection configuration.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>conn_conf (dict | str | ConnConf): The connection configuration for the data source.</li>\n<li>engine (str): The data processing engine, e.g. \"AUTO\", \"PANDAS\", \"SPARK\".</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>Process: A Process object representing the data loading session.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">ConnConf</span>,</span><span class=\"param\">\t<span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"s1\">&#39;AUTO&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">proc_manager</span><span class=\"o\">.</span><span class=\"n\">Process</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.upload_files": {"fullname": "practicuscore.Worker.upload_files", "modulename": "practicuscore", "qualname": "Worker.upload_files", "kind": "function", "doc": "<p>Uploads files from the local environment to the worker's filesystem.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>source (str): The local file or directory path to upload.</li>\n<li>destination (str | None): The target directory on the worker. Defaults to a predefined upload folder.</li>\n<li>max_files_to_upload (int): Maximum number of files to upload (to prevent huge accidental uploads).</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The directory on the worker where the files were uploaded.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">upload_path</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">upload_files</span><span class=\"p\">(</span><span class=\"s2\">&quot;data/&quot;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Files uploaded to:&quot;</span><span class=\"p\">,</span> <span class=\"n\">upload_path</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">destination</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_files_to_upload</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.download_files": {"fullname": "practicuscore.Worker.download_files", "modulename": "practicuscore", "qualname": "Worker.download_files", "kind": "function", "doc": "<p>Downloads files from the worker's filesystem to the local environment.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>source (str): The file or directory path on the worker to download.</li>\n<li>destination (str): The local directory to store the downloaded files.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">download_files</span><span class=\"p\">(</span><span class=\"s2\">&quot;results/output.csv&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;local_results/&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">source</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">destination</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Worker.run_task": {"fullname": "practicuscore.Worker.run_task", "modulename": "practicuscore", "qualname": "Worker.run_task", "kind": "function", "doc": "<p>Runs a Python (.py) or shell (.sh) script on the worker, optionally capturing output.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>task_file_path (str): The file path on the worker to the script to run.</li>\n<li>capture_task_output (bool): If True, captures stdout and stderr of the script.</li>\n<li>python_venv_name (str | None): Name of a Python virtual environment on the worker.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: A unique task UUID identifying the running task.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">task_uuid</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">run_task</span><span class=\"p\">(</span><span class=\"s2\">&quot;/path/to/script.py&quot;</span><span class=\"p\">,</span> <span class=\"n\">capture_task_output</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">task_file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">capture_task_output</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">python_venv_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.check_task": {"fullname": "practicuscore.Worker.check_task", "modulename": "practicuscore", "qualname": "Worker.check_task", "kind": "function", "doc": "<p>Monitors a running task identified by a task UUID until it completes or fails.</p>\n\n<p>Prints logs periodically and returns True if the task completes successfully, False otherwise.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>task_uuid (str): The UUID of the task to check.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>bool: True if the task succeeded, False if it failed.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">success</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">check_task</span><span class=\"p\">(</span><span class=\"n\">task_uuid</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Task succeeded:&quot;</span><span class=\"p\">,</span> <span class=\"n\">success</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">task_uuid</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.proc_list": {"fullname": "practicuscore.Worker.proc_list", "modulename": "practicuscore", "qualname": "Worker.proc_list", "kind": "variable", "doc": "<p>Retrieves a read-only list of Process objects created on this worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>PrtList[Process]: A list of active processes on this worker.</li>\n</ul>\n", "annotation": ": practicuscore.util.PrtList[practicuscore.proc_manager.Process]"}, "practicuscore.Worker.remove_proc_from_cache": {"fullname": "practicuscore.Worker.remove_proc_from_cache", "modulename": "practicuscore", "qualname": "Worker.remove_proc_from_cache", "kind": "function", "doc": "<p>Removes a process from the worker's internal cache without killing it.</p>\n\n<p><strong>Note:</strong> This is intended for internal use. To fully terminate a process, use <code>kill_proc()</code>.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>proc_id (int): The ID of the process to remove from the cache.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">proc_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Worker.kill_proc": {"fullname": "practicuscore.Worker.kill_proc", "modulename": "practicuscore", "qualname": "Worker.kill_proc", "kind": "function", "doc": "<p>Terminates a specific process running on the worker.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>proc_id (int): The ID of the process to kill.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">kill_proc</span><span class=\"p\">(</span><span class=\"n\">proc_id</span><span class=\"o\">=</span><span class=\"mi\">123</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">proc_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Worker.kill_all_procs": {"fullname": "practicuscore.Worker.kill_all_procs", "modulename": "practicuscore", "qualname": "Worker.kill_all_procs", "kind": "function", "doc": "<p>Terminates all processes running on this worker.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">kill_all_procs</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Worker.open_notebook": {"fullname": "practicuscore.Worker.open_notebook", "modulename": "practicuscore", "qualname": "Worker.open_notebook", "kind": "function", "doc": "<p>Opens the Jupyter notebook environment running on this worker in a browser (or returns its URL).</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>dark_mode (bool): If True, the notebook UI is displayed in dark mode.</li>\n<li>get_url_only (bool): If True, returns the notebook login URL without opening a browser.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The login URL for the notebook.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">open_notebook</span><span class=\"p\">(</span><span class=\"n\">get_url_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Notebook URL:&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dark_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">get_url_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.open_vscode": {"fullname": "practicuscore.Worker.open_vscode", "modulename": "practicuscore", "qualname": "Worker.open_vscode", "kind": "function", "doc": "<p>Opens Visual Studio Code (VS Code) environment running on this worker in a browser (or returns its URL and password).</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>dark_mode (bool): If True, the VS Code UI is displayed in dark mode.</li>\n<li>get_url_only (bool): If True, returns the VS Code URL and token without opening a browser.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, str): The VS Code URL and the authentication token.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"n\">token</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">open_vscode</span><span class=\"p\">(</span><span class=\"n\">get_url_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;VS Code URL:&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Token:&quot;</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dark_mode</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">get_url_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.open_workspace": {"fullname": "practicuscore.Worker.open_workspace", "modulename": "practicuscore", "qualname": "Worker.open_workspace", "kind": "function", "doc": "<p>Opens a workspace environment (e.g., a specialized development UI) running on this worker.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>get_url_only (bool): If True, returns the workspace URL without opening a browser.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The workspace URL.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">open_workspace</span><span class=\"p\">(</span><span class=\"n\">get_url_only</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Workspace URL:&quot;</span><span class=\"p\">,</span> <span class=\"n\">url</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">get_url_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.get_workspace_credentials": {"fullname": "practicuscore.Worker.get_workspace_credentials", "modulename": "practicuscore", "qualname": "Worker.get_workspace_credentials", "kind": "function", "doc": "<p>Retrieves login credentials (username, password) for this workspace.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>(str, str): (username, password) for the workspace login.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">pwd</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">get_workspace_credentials</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Workspace user:&quot;</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.ping": {"fullname": "practicuscore.Worker.ping", "modulename": "practicuscore", "qualname": "Worker.ping", "kind": "function", "doc": "<p>Sends a ping request to the worker to measure responsiveness.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>raise_on_error (bool): If True, raise an exception if the worker cannot be reached.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>float: The ping time in seconds, or 0.0 if failed and <code>raise_on_error=False</code>.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">latency</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">ping</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Latency:&quot;</span><span class=\"p\">,</span> <span class=\"n\">latency</span><span class=\"p\">,</span> <span class=\"s2\">&quot;seconds&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">raise_on_error</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.wait_until_ready": {"fullname": "practicuscore.Worker.wait_until_ready", "modulename": "practicuscore", "qualname": "Worker.wait_until_ready", "kind": "function", "doc": "<p>Waits until the worker is fully ready to serve requests.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>timeout (int): Time (in seconds) before raising a TimeoutError if the worker isn't ready.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>float: The final ping time once the worker is ready.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">wait_time</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">wait_until_ready</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">120</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Worker ready, ping:&quot;</span><span class=\"p\">,</span> <span class=\"n\">wait_time</span><span class=\"p\">,</span> <span class=\"s2\">&quot;seconds&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">60</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.get_logs": {"fullname": "practicuscore.Worker.get_logs", "modulename": "practicuscore", "qualname": "Worker.get_logs", "kind": "function", "doc": "<p>Retrieves the latest portion of the worker's logs.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>log_size_mb (int): The size of logs (in MB) to retrieve, from the bottom of the log file.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str | None: The logs as a string, or None if no logs are found.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">logs</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">get_logs</span><span class=\"p\">(</span><span class=\"n\">log_size_mb</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;Worker logs:&quot;</span><span class=\"p\">,</span> <span class=\"n\">logs</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">log_size_mb</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Worker.view_logs": {"fullname": "practicuscore.Worker.view_logs", "modulename": "practicuscore", "qualname": "Worker.view_logs", "kind": "function", "doc": "<p>Prints the latest portion of the worker's logs to stdout.</p>\n\n<p>For reading logs into a variable, use <code>get_logs()</code>.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>log_size_mb (int): The size of logs (in MB) to print.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">view_logs</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">log_size_mb</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process": {"fullname": "practicuscore.Process", "modulename": "practicuscore", "qualname": "Process", "kind": "class", "doc": "<p>Represents a process running on a Practicus AI Worker. A <code>Process</code> corresponds to an actual OS-level process\nin the worker\u2019s environment. It can load and manipulate data, run transformations, execute code snippets,\nand integrate with machine learning model building and prediction tasks.</p>\n\n<p><strong>Key Capabilities:</strong></p>\n\n<ul>\n<li><strong>Data Loading &amp; Processing:</strong> Load data from various sources (Data Lakes, S3, databases, local files) into the worker\u2019s environment,\nand perform transformations such as filtering, sorting, grouping, and type changes.</li>\n<li><strong>Running Code &amp; Snippets:</strong> Execute custom Python code blocks, SQL queries, and pre-defined snippets directly on the worker.</li>\n<li><strong>Model Operations:</strong> Build, register, and search ML models. Integrate model predictions into your data pipeline.</li>\n<li><strong>Workflow Integration:</strong> Run recorded steps, save and restore workflows, and apply transformations in sequence.</li>\n<li><strong>Lifecycle Management:</strong> Automatically kills itself when going out of scope if used as a context manager, and\nprovides methods to terminate, wait until current operations are complete, and manage logs.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">with</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">s3_connection</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">proc</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Perform data transformations</span>\n    <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"s2\">&quot;price &gt; 100&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">sort_column</span><span class=\"p\">([</span><span class=\"s2\">&quot;price&quot;</span><span class=\"p\">])</span>\n    <span class=\"c1\"># Retrieve updated DataFrame</span>\n    <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">proc</span><span class=\"o\">.</span><span class=\"n\">get_df_copy</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">())</span>\n<span class=\"c1\"># Process is automatically killed at the end of the &#39;with&#39; block</span>\n</code></pre>\n</div>\n\n<p>After the process finishes, you can also run model predictions or save the processed data to another destination.</p>\n"}, "practicuscore.Process.__init__": {"fullname": "practicuscore.Process.__init__", "modulename": "practicuscore", "qualname": "Process.__init__", "kind": "function", "doc": "<p>Initializes a new Process associated with a given Worker.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>node (CloudNode): The underlying cloud node (e.g., Kubernetes pod) representing the worker.</li>\n<li>worker (Worker): The parent Worker instance that this process runs on.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">cloud_def</span><span class=\"o\">.</span><span class=\"n\">CloudNode</span>,</span><span class=\"param\">\t<span class=\"n\">worker</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span></span>)</span>"}, "practicuscore.Process.logger": {"fullname": "practicuscore.Process.logger", "modulename": "practicuscore", "qualname": "Process.logger", "kind": "variable", "doc": "<p>Logger specific for</p>\n", "default_value": "&lt;Logger practicus.core.process (DEBUG)&gt;"}, "practicuscore.Process.worker": {"fullname": "practicuscore.Process.worker", "modulename": "practicuscore", "qualname": "Process.worker", "kind": "variable", "doc": "<p>The parent <code>Worker</code> instance for this process.</p>\n", "annotation": ": practicuscore.worker_manager.Worker"}, "practicuscore.Process.ws": {"fullname": "practicuscore.Process.ws", "modulename": "practicuscore", "qualname": "Process.ws", "kind": "variable", "doc": "<p>Manages the internal data (worksheet) and steps executed by this process.</p>\n", "annotation": ": practicuscore.ws.Worksheet | None"}, "practicuscore.Process.wsm": {"fullname": "practicuscore.Process.wsm", "modulename": "practicuscore", "qualname": "Process.wsm", "kind": "variable", "doc": "<p>Manages the internal data (worksheet) state manage by this process.</p>\n"}, "practicuscore.Process.async_op_issue_list": {"fullname": "practicuscore.Process.async_op_issue_list", "modulename": "practicuscore", "qualname": "Process.async_op_issue_list", "kind": "variable", "doc": "<p>Tracks issues or asynchronous operation results that occur during process execution.</p>\n", "annotation": ": list[practicuscore.core_def.OPResult]"}, "practicuscore.Process.alive": {"fullname": "practicuscore.Process.alive", "modulename": "practicuscore", "qualname": "Process.alive", "kind": "variable", "doc": "<p>Indicates if the process is currently alive (running) on the worker.</p>\n", "annotation": ": bool"}, "practicuscore.Process.get_csv_header": {"fullname": "practicuscore.Process.get_csv_header", "modulename": "practicuscore", "qualname": "Process.get_csv_header", "kind": "function", "doc": "<p>Returns a CSV header line representing the columns used in the <code>__str__</code> method.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: CSV-formatted header line for process attributes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.proc_id": {"fullname": "practicuscore.Process.proc_id", "modulename": "practicuscore", "qualname": "Process.proc_id", "kind": "variable", "doc": "<p>The internal process ID assigned by Practicus AI.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>int: The process ID, or -1 if not available.</li>\n</ul>\n", "annotation": ": int"}, "practicuscore.Process.os_pid": {"fullname": "practicuscore.Process.os_pid", "modulename": "practicuscore", "qualname": "Process.os_pid", "kind": "variable", "doc": "<p>The underlying OS-level PID of the process running on the worker.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>int: The OS PID, or -1 if not available.</li>\n</ul>\n", "annotation": ": int"}, "practicuscore.Process.conn_conf": {"fullname": "practicuscore.Process.conn_conf", "modulename": "practicuscore", "qualname": "Process.conn_conf", "kind": "variable", "doc": "<p>The connection configuration used by this process to load data.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>ConnConf | None: The connection configuration, or None if not set.</li>\n</ul>\n", "annotation": ": practicuscore.api_base.ConnConf | None"}, "practicuscore.Process.conn_info": {"fullname": "practicuscore.Process.conn_info", "modulename": "practicuscore", "qualname": "Process.conn_info", "kind": "variable", "doc": "<p>A friendly, human-readable description of the current connection configuration.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The connection's long description, or an empty string if unavailable.</li>\n</ul>\n", "annotation": ": str"}, "practicuscore.Process.worker_name": {"fullname": "practicuscore.Process.worker_name", "modulename": "practicuscore", "qualname": "Process.worker_name", "kind": "variable", "doc": "<p>The name of the worker hosting this process.</p>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: The worker name, or an empty string if unavailable.</li>\n</ul>\n", "annotation": ": str"}, "practicuscore.Process.run_step": {"fullname": "practicuscore.Process.run_step", "modulename": "practicuscore", "qualname": "Process.run_step", "kind": "function", "doc": "<p>Executes a single transformation or action (a <code>Step</code>) on the process.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>step (Step): The step to run, representing a data transformation or action.</li>\n<li>record_step (bool): If True, records the step in the worksheet history.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">step</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">steps</span><span class=\"o\">.</span><span class=\"n\">Step</span>, </span><span class=\"param\"><span class=\"n\">record_step</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.get_eng": {"fullname": "practicuscore.Process.get_eng", "modulename": "practicuscore", "qualname": "Process.get_eng", "kind": "function", "doc": "<p>Returns the internal dataengine representation enum</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">df</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">core_def</span><span class=\"o\">.</span><span class=\"n\">PRTEng</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.show_recorded_steps": {"fullname": "practicuscore.Process.show_recorded_steps", "modulename": "practicuscore", "qualname": "Process.show_recorded_steps", "kind": "function", "doc": "<p>Lists all recorded steps currently stored in the internal worksheet.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.delete_recorded_steps": {"fullname": "practicuscore.Process.delete_recorded_steps", "modulename": "practicuscore", "qualname": "Process.delete_recorded_steps", "kind": "function", "doc": "<p>Deletes one or more recorded steps from the internal worksheet by their step numbers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.reset_recorded_steps": {"fullname": "practicuscore.Process.reset_recorded_steps", "modulename": "practicuscore", "qualname": "Process.reset_recorded_steps", "kind": "function", "doc": "<p>Clears all recorded steps from the internal worksheet.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.run_recorded_steps": {"fullname": "practicuscore.Process.run_recorded_steps", "modulename": "practicuscore", "qualname": "Process.run_recorded_steps", "kind": "function", "doc": "<p>Executes all previously recorded steps in sequence.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.save_ws": {"fullname": "practicuscore.Process.save_ws", "modulename": "practicuscore", "qualname": "Process.save_ws", "kind": "function", "doc": "<p>Saves the current worksheet, including steps and data sampling settings, to a specified file path.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sampling_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;TOP&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">sample_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.get_ws_activity_log": {"fullname": "practicuscore.Process.get_ws_activity_log", "modulename": "practicuscore", "qualname": "Process.get_ws_activity_log", "kind": "function", "doc": "<p>Retrieves the activity log of all operations performed in the worksheet.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.show_logs": {"fullname": "practicuscore.Process.show_logs", "modulename": "practicuscore", "qualname": "Process.show_logs", "kind": "function", "doc": "<p>Displays the recorded activity logs and issues from the worker.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>raise_error_on_issues (bool): If True, raises an error if any issues are found.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">raise_error_on_issues</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.show_issues": {"fullname": "practicuscore.Process.show_issues", "modulename": "practicuscore", "qualname": "Process.show_issues", "kind": "function", "doc": "<p>Displays any captured asynchronous operation issues from the worker.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>raise_error_on_issues (bool): If True, raises an error if issues are present.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">raise_error_on_issues</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.is_local_practicus_svc_active": {"fullname": "practicuscore.Process.is_local_practicus_svc_active", "modulename": "practicuscore", "qualname": "Process.is_local_practicus_svc_active", "kind": "function", "doc": "<p>Checks if the local worker control plane is active</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.my_k8s_worker": {"fullname": "practicuscore.Process.my_k8s_worker", "modulename": "practicuscore", "qualname": "Process.my_k8s_worker", "kind": "variable", "doc": "<p>Returns the internal Worker representation object</p>\n", "annotation": ": practicuscore.cloud_def.K8sCloudNode"}, "practicuscore.Process.my_k8s_region": {"fullname": "practicuscore.Process.my_k8s_region", "modulename": "practicuscore", "qualname": "Process.my_k8s_region", "kind": "variable", "doc": "<p>Returns the internal Region representation object</p>\n", "annotation": ": practicuscore.cloud_def.K8sRegion"}, "practicuscore.Process.get_model_api_session_token": {"fullname": "practicuscore.Process.get_model_api_session_token", "modulename": "practicuscore", "qualname": "Process.get_model_api_session_token", "kind": "function", "doc": "<p>View documentation of <code>Region</code>.<code>get_model_api_session_token</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">api_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">for_upload</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">retry</span><span class=\"o\">=</span><span class=\"mi\">3</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.get_file_path_in_caller_stack": {"fullname": "practicuscore.Process.get_file_path_in_caller_stack", "modulename": "practicuscore", "qualname": "Process.get_file_path_in_caller_stack", "kind": "function", "doc": "<p>Finds E.g., file.json or some/sub/path/file.py up in the caller stack</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_name_or_sub_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.show_head": {"fullname": "practicuscore.Process.show_head", "modulename": "practicuscore", "qualname": "Process.show_head", "kind": "function", "doc": "<p>Prints the first few rows of the DataFrame currently managed by this process.</p>\n\n<p><strong>Note:</strong> The client SDK might have limited or no data depending on previous steps and sampling configurations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.load": {"fullname": "practicuscore.Process.load", "modulename": "practicuscore", "qualname": "Process.load", "kind": "function", "doc": "<p>Loads data into the process from the specified connection and engine configuration.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>conn_conf (dict | str | ConnConf): Connection information, can be a JSON/dict or a ConnConf instance.</li>\n<li>engine (str): The data processing engine, e.g. \"AUTO\", \"PANDAS\", \"SPARK\".</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">ConnConf</span>,</span><span class=\"param\">\t<span class=\"n\">engine</span><span class=\"o\">=</span><span class=\"s1\">&#39;AUTO&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.save": {"fullname": "practicuscore.Process.save", "modulename": "practicuscore", "qualname": "Process.save", "kind": "function", "doc": "<p>Saves the current data state to another destination, defined by the given connection configuration.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>connection (dict | str): The destination connection configuration.</li>\n<li>timeout_min (int): The maximum number of minutes to wait for completion.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">connection</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">timeout_min</span><span class=\"o\">=</span><span class=\"mi\">600</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.delete_columns": {"fullname": "practicuscore.Process.delete_columns", "modulename": "practicuscore", "qualname": "Process.delete_columns", "kind": "function", "doc": "<p>Deletes column(s) using the provided list</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.rename_column": {"fullname": "practicuscore.Process.rename_column", "modulename": "practicuscore", "qualname": "Process.rename_column", "kind": "function", "doc": "<p>Renames a single column from one name to another.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">from_column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">to_column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.rename_columns": {"fullname": "practicuscore.Process.rename_columns", "modulename": "practicuscore", "qualname": "Process.rename_columns", "kind": "function", "doc": "<p>Renames multiple columns at once using a dictionary mapping old names to new names.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">columns_dict</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.change_column_type": {"fullname": "practicuscore.Process.change_column_type", "modulename": "practicuscore", "qualname": "Process.change_column_type", "kind": "function", "doc": "<p>Changes the data type of a specified column.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">column_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.filter": {"fullname": "practicuscore.Process.filter", "modulename": "practicuscore", "qualname": "Process.filter", "kind": "function", "doc": "<p>Filters the DataFrame rows based on a provided conditional expression.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filter_expression</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.one_hot": {"fullname": "practicuscore.Process.one_hot", "modulename": "practicuscore", "qualname": "Process.one_hot", "kind": "function", "doc": "<p>Converts a categorical column into multiple one-hot encoded columns.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">column_prefix</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.categorical_map": {"fullname": "practicuscore.Process.categorical_map", "modulename": "practicuscore", "qualname": "Process.categorical_map", "kind": "function", "doc": "<p>Maps categorical values of a specified column into numeric or string representations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">column_suffix</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.split_column": {"fullname": "practicuscore.Process.split_column", "modulename": "practicuscore", "qualname": "Process.split_column", "kind": "function", "doc": "<p>Splits the values of a column into multiple parts using a specified delimiter.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">split_using</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.handle_missing": {"fullname": "practicuscore.Process.handle_missing", "modulename": "practicuscore", "qualname": "Process.handle_missing", "kind": "function", "doc": "<p>Handles missing values in the specified columns using a given technique or a custom value.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">technique</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">custom_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">column_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.sort_column": {"fullname": "practicuscore.Process.sort_column", "modulename": "practicuscore", "qualname": "Process.sort_column", "kind": "function", "doc": "<p>Sorts the DataFrame by specified columns in ascending or descending order.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column_list</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">ascending</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.group_by_column": {"fullname": "practicuscore.Process.group_by_column", "modulename": "practicuscore", "qualname": "Process.group_by_column", "kind": "function", "doc": "<p>Groups the DataFrame by specified columns and applies aggregation functions.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">aggregation</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.time_sample": {"fullname": "practicuscore.Process.time_sample", "modulename": "practicuscore", "qualname": "Process.time_sample", "kind": "function", "doc": "<p>Performs time-based sampling or aggregation of the data using a date column and specified frequency.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">date_column</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">summary_column</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">summary_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">frequency</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.update_values": {"fullname": "practicuscore.Process.update_values", "modulename": "practicuscore", "qualname": "Process.update_values", "kind": "function", "doc": "<p>Replaces occurrences of an old value with a new value in a specified column.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">old_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">new_value</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.run_formula": {"fullname": "practicuscore.Process.run_formula", "modulename": "practicuscore", "qualname": "Process.run_formula", "kind": "function", "doc": "<p>Creates a new column by evaluating a formula expression involving existing columns.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">formula_expression</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.run_custom_code": {"fullname": "practicuscore.Process.run_custom_code", "modulename": "practicuscore", "qualname": "Process.run_custom_code", "kind": "function", "doc": "<p>Runs a custom Python function's code on the worker.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>custom_function: A Python function object whose source code is executed remotely.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">custom_function</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.run_snippet": {"fullname": "practicuscore.Process.run_snippet", "modulename": "practicuscore", "qualname": "Process.run_snippet", "kind": "function", "doc": "<p>Runs a predefined snippet (a .py file) from the caller's directory stack.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>snippet_name (str): The snippet's name (without <code>.py</code> extension).</li>\n<li>**kwargs: Parameters passed to the snippet's code.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">snippet_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.run_custom_sql": {"fullname": "practicuscore.Process.run_custom_sql", "modulename": "practicuscore", "qualname": "Process.run_custom_sql", "kind": "function", "doc": "<p>Executes a custom SQL query against the current data, treating it as a table with a given name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">custom_sql</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">sql_table_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.build_model": {"fullname": "practicuscore.Process.build_model", "modulename": "practicuscore", "qualname": "Process.build_model", "kind": "function", "doc": "<p>Builds a machine learning model on the worker using the provided configuration.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>model_config (dict | str): The model configuration as a dictionary or JSON string.</li>\n<li>timeout_min (int): Maximum minutes to wait for model build completion.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>ModelConfig | None: The finalized model configuration if successful, else None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">model_config</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">timeout_min</span><span class=\"o\">=</span><span class=\"mi\">300</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_def</span><span class=\"o\">.</span><span class=\"n\">ModelConfig</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.register_model": {"fullname": "practicuscore.Process.register_model", "modulename": "practicuscore", "qualname": "Process.register_model", "kind": "function", "doc": "<p>Registers the last built AI model, making it available in MLFlow or related model registries.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.find_model": {"fullname": "practicuscore.Process.find_model", "modulename": "practicuscore", "qualname": "Process.find_model", "kind": "function", "doc": "<p>Searches for models that match a given text query using MlFlow.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>model_text (str): The search string or query.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>ModelSearchResults | None: The search results, or None if none found.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">model_text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_def</span><span class=\"o\">.</span><span class=\"n\">ModelSearchResults</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.predict": {"fullname": "practicuscore.Process.predict", "modulename": "practicuscore", "qualname": "Process.predict", "kind": "function", "doc": "<p>Runs predictions against a deployed model API endpoint.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>api_url (str): The model API URL.</li>\n<li>api_token (str | None): The access token for the model API. If None, attempts to get one automatically.</li>\n<li>column_names (list[str] | None): The columns to include as input features.</li>\n<li>new_column_name (str | None): The name for the new prediction column.</li>\n<li>ground_truth_col (str | None): If provided, compares predictions against a ground truth column.</li>\n<li>model_id (int | None): Specific model ID to query if multiple versions exist.</li>\n<li>batch_size (int | None): Batch size for prediction requests.</li>\n<li>compression_algo (str | None): Optional compression for data transfer.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">api_url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">api_token</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">column_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">new_column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ground_truth_col</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">batch_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">compression_algo</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.predict_with_offline_model": {"fullname": "practicuscore.Process.predict_with_offline_model", "modulename": "practicuscore", "qualname": "Process.predict_with_offline_model", "kind": "function", "doc": "<p>Makes predictions using an offline model available locally (e.g., MLflow model URI).</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>column_names (list[str] | None): Input feature columns.</li>\n<li>new_column_name (str | None): Column name for predictions.</li>\n<li>future_horizon (int | None): For forecasting, how many steps into the future to predict.</li>\n<li>mlflow_model_uri (str | None): URI for the MLflow model.</li>\n<li>model_conf_path (str | None): Path to a model configuration file.</li>\n<li>model_conf (str | None): Model configuration in JSON/dict form.</li>\n<li>problem_type (str | None): Type of problem (e.g., classification, regression, forecasting).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">column_names</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">new_column_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">future_horizon</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">mlflow_model_uri</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_conf_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_conf</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">problem_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.join": {"fullname": "practicuscore.Process.join", "modulename": "practicuscore", "qualname": "Process.join", "kind": "function", "doc": "<p>Joins the current DataFrame with another dataset from a specified connection.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>conn_conf (str | dict): The connection configuration of the data source to join.</li>\n<li>left_key_col_name (str): The key column in the current DataFrame.</li>\n<li>right_key_col_name (str): The key column in the target dataset.</li>\n<li>right_ws_name (str | None): Optional name for the right worksheet.</li>\n<li>join_technique (str): The join type (\"Left\", \"Right\", \"Inner\", \"Outer\").</li>\n<li>suffix_for_overlap (str): Suffix added to overlapping columns.</li>\n<li>summary_column (bool): If True, adds a summary column of join results.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">conn_conf</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span>,</span><span class=\"param\">\t<span class=\"n\">left_key_col_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">right_key_col_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">right_ws_name</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">join_technique</span><span class=\"o\">=</span><span class=\"s1\">&#39;Left&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix_for_overlap</span><span class=\"o\">=</span><span class=\"s1\">&#39;_right&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">summary_column</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.wait_until_done": {"fullname": "practicuscore.Process.wait_until_done", "modulename": "practicuscore", "qualname": "Process.wait_until_done", "kind": "function", "doc": "<p>Waits until all operations and steps have finished executing on the worker,\nor until the given timeout elapses.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>timeout_min (int): Maximum number of minutes to wait.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout_min</span><span class=\"o\">=</span><span class=\"mi\">600</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Process.get_df_copy": {"fullname": "practicuscore.Process.get_df_copy", "modulename": "practicuscore", "qualname": "Process.get_df_copy", "kind": "function", "doc": "<p>Retrieves a copy of the DataFrame currently held by the process after ensuring all operations are done.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>timeout_min (int): Maximum number of minutes to wait until done.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>pd.DataFrame: A pandas DataFrame representing the processed data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">timeout_min</span><span class=\"o\">=</span><span class=\"mi\">600</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span>:</span></span>", "funcdef": "def"}, "practicuscore.Process.kill": {"fullname": "practicuscore.Process.kill", "modulename": "practicuscore", "qualname": "Process.kill", "kind": "function", "doc": "<p>Terminates the process on the worker, freeing resources.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>kill_async (bool): If True, attempts an asynchronous kill without waiting for confirmation.</li>\n</ul>\n\n<p><strong>Note:</strong> Once killed, the process cannot be reused and a new one must be started for further operations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">kill_async</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.get_logger": {"fullname": "practicuscore.get_logger", "modulename": "practicuscore", "qualname": "get_logger", "kind": "function", "doc": "<p>Retrieves a logger instance associated with a given <code>Log</code> enumeration value.</p>\n\n<p>Logging is critical for monitoring the behavior of the SDK and diagnosing issues.\nThe Practicus AI SDK uses named loggers for different components, allowing you to\nconfigure their levels and outputs independently.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>log (Log): The <code>Log</code> enum value representing the desired logger.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>logging.Logger: A configured logger instance for the specified log component.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">get_logger</span><span class=\"p\">,</span> <span class=\"n\">Log</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">get_logger</span><span class=\"p\">(</span><span class=\"n\">Log</span><span class=\"o\">.</span><span class=\"n\">SDK</span><span class=\"p\">)</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is an informational message from the SDK logger.&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">log</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">log_manager</span><span class=\"o\">.</span><span class=\"n\">Log</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.Log": {"fullname": "practicuscore.Log", "modulename": "practicuscore", "qualname": "Log", "kind": "class", "doc": "<p>Enumeration of loggers used throughout the Practicus AI SDK, each corresponding to a specific subsystem or feature.</p>\n", "bases": "enum.Enum"}, "practicuscore.Log.CORE": {"fullname": "practicuscore.Log.CORE", "modulename": "practicuscore", "qualname": "Log.CORE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.CORE: &#x27;practicus.core&#x27;&gt;"}, "practicuscore.Log.SDK": {"fullname": "practicuscore.Log.SDK", "modulename": "practicuscore", "qualname": "Log.SDK", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.SDK: &#x27;practicus.core.sdk&#x27;&gt;"}, "practicuscore.Log.REGION": {"fullname": "practicuscore.Log.REGION", "modulename": "practicuscore", "qualname": "Log.REGION", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.REGION: &#x27;practicus.core.region&#x27;&gt;"}, "practicuscore.Log.WORKER": {"fullname": "practicuscore.Log.WORKER", "modulename": "practicuscore", "qualname": "Log.WORKER", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.WORKER: &#x27;practicus.core.worker&#x27;&gt;"}, "practicuscore.Log.PROCESS": {"fullname": "practicuscore.Log.PROCESS", "modulename": "practicuscore", "qualname": "Log.PROCESS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.PROCESS: &#x27;practicus.core.process&#x27;&gt;"}, "practicuscore.Log.CLI": {"fullname": "practicuscore.Log.CLI", "modulename": "practicuscore", "qualname": "Log.CLI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.CLI: &#x27;practicus.core.cli&#x27;&gt;"}, "practicuscore.Log.WEB_SOCKET": {"fullname": "practicuscore.Log.WEB_SOCKET", "modulename": "practicuscore", "qualname": "Log.WEB_SOCKET", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.WEB_SOCKET: &#x27;practicus.core.websocket&#x27;&gt;"}, "practicuscore.Log.ENGINES": {"fullname": "practicuscore.Log.ENGINES", "modulename": "practicuscore", "qualname": "Log.ENGINES", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.ENGINES: &#x27;practicus.core.engines&#x27;&gt;"}, "practicuscore.Log.AIRFLOW": {"fullname": "practicuscore.Log.AIRFLOW", "modulename": "practicuscore", "qualname": "Log.AIRFLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.AIRFLOW: &#x27;practicus.core.airflow&#x27;&gt;"}, "practicuscore.Log.APPS": {"fullname": "practicuscore.Log.APPS", "modulename": "practicuscore", "qualname": "Log.APPS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.APPS: &#x27;practicus.core.apps&#x27;&gt;"}, "practicuscore.Log.GEN_AI": {"fullname": "practicuscore.Log.GEN_AI", "modulename": "practicuscore", "qualname": "Log.GEN_AI", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.GEN_AI: &#x27;practicus.core.gen_ai&#x27;&gt;"}, "practicuscore.Log.TEST": {"fullname": "practicuscore.Log.TEST", "modulename": "practicuscore", "qualname": "Log.TEST", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.TEST: &#x27;practicus.core.test&#x27;&gt;"}, "practicuscore.Log.NOTEBOOKS": {"fullname": "practicuscore.Log.NOTEBOOKS", "modulename": "practicuscore", "qualname": "Log.NOTEBOOKS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.NOTEBOOKS: &#x27;practicus.core.notebooks&#x27;&gt;"}, "practicuscore.Log.DISTRIBUTED": {"fullname": "practicuscore.Log.DISTRIBUTED", "modulename": "practicuscore", "qualname": "Log.DISTRIBUTED", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.DISTRIBUTED: &#x27;practicus.core.distributed&#x27;&gt;"}, "practicuscore.Log.CONTAINERS": {"fullname": "practicuscore.Log.CONTAINERS", "modulename": "practicuscore", "qualname": "Log.CONTAINERS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.CONTAINERS: &#x27;practicus.core.containers&#x27;&gt;"}, "practicuscore.Log.GIT": {"fullname": "practicuscore.Log.GIT", "modulename": "practicuscore", "qualname": "Log.GIT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.GIT: &#x27;practicus.core.git&#x27;&gt;"}, "practicuscore.Log.MQ": {"fullname": "practicuscore.Log.MQ", "modulename": "practicuscore", "qualname": "Log.MQ", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.MQ: &#x27;practicus.core.mq&#x27;&gt;"}, "practicuscore.Log.NOTIFY": {"fullname": "practicuscore.Log.NOTIFY", "modulename": "practicuscore", "qualname": "Log.NOTIFY", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.NOTIFY: &#x27;practicus.core.notify&#x27;&gt;"}, "practicuscore.Log.DB": {"fullname": "practicuscore.Log.DB", "modulename": "practicuscore", "qualname": "Log.DB", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.DB: &#x27;practicus.core.db&#x27;&gt;"}, "practicuscore.Log.ADDONS": {"fullname": "practicuscore.Log.ADDONS", "modulename": "practicuscore", "qualname": "Log.ADDONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;Log.ADDONS: &#x27;practicus.core.addon&#x27;&gt;"}, "practicuscore.set_logging_level": {"fullname": "practicuscore.set_logging_level", "modulename": "practicuscore", "qualname": "set_logging_level", "kind": "function", "doc": "<p>Adjusts the logging level globally or for specific modules within the Practicus AI SDK and its dependencies.</p>\n\n<p>By default, logs may be set to a certain level. This function allows you to raise or lower\nthe verbosity of logs depending on your debugging needs. For instance, setting the log level\nto DEBUG can help troubleshoot complex issues by providing more detailed output, while INFO\nor WARNING might be sufficient for normal operations.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>log_level (str | None): The global logging level to apply. Accepts standard Python logging levels\n(e.g., \"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\", \"CRITICAL\"). If None, does not change the global level.</li>\n<li>modules_log_level (str): A comma-separated list of module-specific logging levels. For example:\n<ul>\n<li><code>\"practicus:DEBUG\"</code> sets the logging level for the \"practicus\" module to DEBUG.</li>\n<li><code>\"urllib3:INFO\"</code> sets the \"urllib3\" module to INFO.</li>\n<li><code>\"*:DEBUG\"</code> sets DEBUG level for all modules.\nMultiple rules can be combined by separating them with commas, e.g. <code>\"practicus:DEBUG,urllib3:INFO\"</code>.</li>\n</ul></li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>None</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">practicuscore</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">set_logging_level</span>\n\n<span class=\"c1\"># Set the global logging level to INFO</span>\n<span class=\"n\">set_logging_level</span><span class=\"p\">(</span><span class=\"n\">log_level</span><span class=\"o\">=</span><span class=\"s2\">&quot;INFO&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Set DEBUG level for practicus-related logs and INFO for urllib3</span>\n<span class=\"n\">set_logging_level</span><span class=\"p\">(</span><span class=\"n\">modules_log_level</span><span class=\"o\">=</span><span class=\"s2\">&quot;practicus:DEBUG,urllib3:INFO&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">log_level</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">modules_log_level</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.WorkerConfig": {"fullname": "practicuscore.WorkerConfig", "modulename": "practicuscore", "qualname": "WorkerConfig", "kind": "class", "doc": "<p>Defines a worker configuration for launching Practicus AI Workers.</p>\n\n<p><strong>Usage Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">worker_config</span> <span class=\"o\">=</span> <span class=\"n\">WorkerConfig</span><span class=\"p\">(</span>\n    <span class=\"n\">worker_image</span><span class=\"o\">=</span><span class=\"s2\">&quot;practicus&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">worker_size</span><span class=\"o\">=</span><span class=\"s2\">&quot;Small&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "bases": "pydantic.main.BaseModel"}, "practicuscore.WorkerConfig.worker_image": {"fullname": "practicuscore.WorkerConfig.worker_image", "modulename": "practicuscore", "qualname": "WorkerConfig.worker_image", "kind": "variable", "doc": "<p>The container image to be used for this worker.</p>\n\n<p>If you provide a simple image name like <code>practicus-gpu-torch</code>, it will be expanded to a full image name\n(e.g. <code>ghcr.io/practicusai/practicus-gpu-torch</code>) with a default version. You can also specify a fully qualified\nimage such as <code>my-container-repo/my-container:some-version</code>.</p>\n\n<p><strong>Note:</strong> Custom container images must be based on a Practicus AI-compatible base image.</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.worker_size": {"fullname": "practicuscore.WorkerConfig.worker_size", "modulename": "practicuscore", "qualname": "WorkerConfig.worker_size", "kind": "variable", "doc": "<p>The worker size indicating the CPU, RAM, and GPU resources allocated to the worker.</p>\n\n<p><strong>Example:</strong> \"Small\", \"Medium\", \"Large\".</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.service_type": {"fullname": "practicuscore.WorkerConfig.service_type", "modulename": "practicuscore", "qualname": "WorkerConfig.service_type", "kind": "variable", "doc": "<p>The type of service this worker represents, typically \"cloud_worker\" or \"workspace\".\nIf omitted, defaults to \"cloud_worker\".</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.network_protocol": {"fullname": "practicuscore.WorkerConfig.network_protocol", "modulename": "practicuscore", "qualname": "WorkerConfig.network_protocol", "kind": "variable", "doc": "<p>The network protocol to use for this worker. Valid values are \"http\" or \"https\".\nIf omitted, the worker will choose a suitable default.</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.distributed_config": {"fullname": "practicuscore.WorkerConfig.distributed_config", "modulename": "practicuscore", "qualname": "WorkerConfig.distributed_config", "kind": "variable", "doc": "<p>Configuration for distributed jobs (e.g., Spark, Dask, Torch). </p>\n\n<p>If provided, it defines the parameters and ports for running a distributed cluster.</p>\n", "annotation": ": practicuscore.api_base.DistJobConfig | None"}, "practicuscore.WorkerConfig.image_config": {"fullname": "practicuscore.WorkerConfig.image_config", "modulename": "practicuscore", "qualname": "WorkerConfig.image_config", "kind": "variable", "doc": "<p>Configuration for using or building custom container images. Set this to an <code>ImageConfig</code> instance when you need \nto provide registry credentials or enable image-building capabilities.</p>\n", "annotation": ": practicuscore.api_base.ImageConfig | None"}, "practicuscore.WorkerConfig.startup_script": {"fullname": "practicuscore.WorkerConfig.startup_script", "modulename": "practicuscore", "qualname": "WorkerConfig.startup_script", "kind": "variable", "doc": "<p>An optional startup script (shell commands) to be run when the worker starts. \nThis should be a small script and should complete around ~5 minutes to avoid time-outs.\nFor scripts that need to run longer (e.g. for complex installations) please create a custom container image.</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.log_level": {"fullname": "practicuscore.WorkerConfig.log_level", "modulename": "practicuscore", "qualname": "WorkerConfig.log_level", "kind": "variable", "doc": "<p>The log level for the worker process itself. Examples: \"DEBUG\", \"INFO\", \"WARNING\", \"ERROR\".\nIf omitted, defaults to a region-level or system default.</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.modules_log_level": {"fullname": "practicuscore.WorkerConfig.modules_log_level", "modulename": "practicuscore", "qualname": "WorkerConfig.modules_log_level", "kind": "variable", "doc": "<p>A module-specific log level configuration, if you want certain modules to log at different levels.</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"fullname": "practicuscore.WorkerConfig.bypass_ssl_verification", "modulename": "practicuscore", "qualname": "WorkerConfig.bypass_ssl_verification", "kind": "variable", "doc": "<p>Set this to \"True\" if you need to bypass SSL certificate verification. \nGenerally not recommended unless working with trusted but self-signed certs.</p>\n", "annotation": ": bool | None"}, "practicuscore.WorkerConfig.interactive": {"fullname": "practicuscore.WorkerConfig.interactive", "modulename": "practicuscore", "qualname": "WorkerConfig.interactive", "kind": "variable", "doc": "<p>Indicates if the worker should be run in an interactive mode, e.g. allowing shell access or interactive sessions.</p>\n", "annotation": ": bool | None"}, "practicuscore.WorkerConfig.service_url": {"fullname": "practicuscore.WorkerConfig.service_url", "modulename": "practicuscore", "qualname": "WorkerConfig.service_url", "kind": "variable", "doc": "<p>An optional service URL. For special use-cases where the worker might need to connect to a particular endpoint \n(e.g., a custom model host), you can specify it here.</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.email": {"fullname": "practicuscore.WorkerConfig.email", "modulename": "practicuscore", "qualname": "WorkerConfig.email", "kind": "variable", "doc": "<p>An optional user email associated with this worker's configuration, if needed for authentication or logging.</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.refresh_token": {"fullname": "practicuscore.WorkerConfig.refresh_token", "modulename": "practicuscore", "qualname": "WorkerConfig.refresh_token", "kind": "variable", "doc": "<p>An optional refresh token for authentication against certain services.</p>\n\n<p>If provided, the worker might use it to obtain a fresh access token automatically.</p>\n", "annotation": ": str | None"}, "practicuscore.WorkerConfig.env_variables": {"fullname": "practicuscore.WorkerConfig.env_variables", "modulename": "practicuscore", "qualname": "WorkerConfig.env_variables", "kind": "variable", "doc": "<p>OS environment variables to pass to the worker.</p>\n", "annotation": ": dict | None"}, "practicuscore.WorkerConfig.personal_secrets": {"fullname": "practicuscore.WorkerConfig.personal_secrets", "modulename": "practicuscore", "qualname": "WorkerConfig.personal_secrets", "kind": "variable", "doc": "<p>List of personal secrets to pull from the vault.</p>\n", "annotation": ": list[str] | None"}, "practicuscore.WorkerConfig.shared_secrets": {"fullname": "practicuscore.WorkerConfig.shared_secrets", "modulename": "practicuscore", "qualname": "WorkerConfig.shared_secrets", "kind": "variable", "doc": "<p>Shared secrets saved by the admin in the vault.</p>\n", "annotation": ": list[str] | None"}, "practicuscore.WorkerConfig.git_configs": {"fullname": "practicuscore.WorkerConfig.git_configs", "modulename": "practicuscore", "qualname": "WorkerConfig.git_configs", "kind": "variable", "doc": "<p>List of GitConfig objects for auto-syncing (clone or pull) repositories.</p>\n", "annotation": ": list[practicuscore.api_base.GitConfig] | None"}, "practicuscore.WorkerConfig.validate_service_type": {"fullname": "practicuscore.WorkerConfig.validate_service_type", "modulename": "practicuscore", "qualname": "WorkerConfig.validate_service_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.WorkerConfig.validate_network_protocol": {"fullname": "practicuscore.WorkerConfig.validate_network_protocol", "modulename": "practicuscore", "qualname": "WorkerConfig.validate_network_protocol", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.WorkerConfig.validate_model": {"fullname": "practicuscore.WorkerConfig.validate_model", "modulename": "practicuscore", "qualname": "WorkerConfig.validate_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.WorkerConfig.model_config": {"fullname": "practicuscore.WorkerConfig.model_config", "modulename": "practicuscore", "qualname": "WorkerConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "default_value": "{&#x27;validate_assignment&#x27;: True}"}, "practicuscore.WorkerConfig.model_validate": {"fullname": "practicuscore.WorkerConfig.model_validate", "modulename": "practicuscore", "qualname": "WorkerConfig.model_validate", "kind": "function", "doc": "<p>Validate a pydantic model instance.</p>\n\n<p>Args:\n    obj: The object to validate.\n    strict: Whether to enforce types strictly.\n    from_attributes: Whether to extract data from object attributes.\n    context: Additional context to pass to the validator.</p>\n\n<p>Raises:\n    ValidationError: If the object could not be validated.</p>\n\n<p>Returns:\n    The validated model instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.WorkerConfig.model_validate_json": {"fullname": "practicuscore.WorkerConfig.model_validate_json", "modulename": "practicuscore", "qualname": "WorkerConfig.model_validate_json", "kind": "function", "doc": "<p>Validates and creates a WorkerConfig object from a JSON string.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>json_data: The JSON-encoded string, bytes, or bytearray containing the worker config data.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>WorkerConfig: A validated WorkerConfig instance.</li>\n</ul>\n\n<p><strong>Raises:</strong></p>\n\n<ul>\n<li>ValueError: If the JSON is invalid or required fields are missing.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">json_data</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">bytes</span> <span class=\"o\">|</span> <span class=\"nb\">bytearray</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.WorkerConfig.model_dump": {"fullname": "practicuscore.WorkerConfig.model_dump", "modulename": "practicuscore", "qualname": "WorkerConfig.model_dump", "kind": "function", "doc": "<p>Usage docs: <a href=\"https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump\">https://docs.pydantic.dev/2.10/concepts/serialization/#modelmodel_dump</a></p>\n\n<p>Generate a dictionary representation of the model, optionally specifying which fields to include or exclude.</p>\n\n<p>Args:\n    mode: The mode in which <code>to_python</code> should run.\n        If mode is 'json', the output will only contain JSON serializable types.\n        If mode is 'python', the output may contain non-JSON-serializable Python objects.\n    include: A set of fields to include in the output.\n    exclude: A set of fields to exclude from the output.\n    context: Additional context to pass to the serializer.\n    by_alias: Whether to use the field's alias in the dictionary key if defined.\n    exclude_unset: Whether to exclude fields that have not been explicitly set.\n    exclude_defaults: Whether to exclude fields that are set to their default value.\n    exclude_none: Whether to exclude fields that have a value of <code>None</code>.\n    round_trip: If True, dumped values should be valid as input for non-idempotent types such as Json[T].\n    warnings: How to handle serialization errors. False/\"none\" ignores them, True/\"warn\" logs errors,\n        \"error\" raises a [<code>PydanticSerializationError</code>][pydantic_core.PydanticSerializationError].\n    serialize_as_any: Whether to serialize fields with duck-typing serialization behavior.</p>\n\n<p>Returns:\n    A dictionary representation of the model.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.WorkerConfig.model_dump_json": {"fullname": "practicuscore.WorkerConfig.model_dump_json", "modulename": "practicuscore", "qualname": "WorkerConfig.model_dump_json", "kind": "function", "doc": "<p>Serializes the WorkerConfig to a JSON string, including any additional parameters.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>indent (int | None): Indentation for pretty-printing JSON. Defaults to 4 if not set.</li>\n<li>**kwargs: Additional arguments passed to <code>model_dump</code>.</li>\n</ul>\n\n<p><strong>Returns:</strong></p>\n\n<ul>\n<li>str: A JSON-encoded string of the WorkerConfig.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">indent</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.ImageConfig": {"fullname": "practicuscore.ImageConfig", "modulename": "practicuscore", "qualname": "ImageConfig", "kind": "class", "doc": "<p>ImageConfig is used within the Practicus AI platform to configure how\ncontainer images are built, pulled, and managed. This configuration\ncan be used to:</p>\n\n<ul>\n<li>Provide registry credentials (username/password or use an existing\nKubernetes secret).</li>\n<li>Control Kubernetes pull policies.</li>\n<li>Enable/disable container-building capabilities.</li>\n<li>Specify builder configuration (capacity, insecure registries, custom builder URL).</li>\n</ul>\n\n<p>For example, you might want to create an <code>ImageConfig</code> to build or pull\nimages from a private registry. You can set a username/password pair, or\nrefer to an existing <code>repo_secret_name</code> in your Kubernetes environment.\nIf you enable a builder (<code>builder=True</code>), you can fine-tune how much of\nthe Worker capacity is used for building images (<code>builder_capacity</code>) and\ndefine insecure registries or custom builder URLs.</p>\n", "bases": "pydantic.main.BaseModel"}, "practicuscore.ImageConfig.repo_username": {"fullname": "practicuscore.ImageConfig.repo_username", "modulename": "practicuscore", "qualname": "ImageConfig.repo_username", "kind": "variable", "doc": "<p>Username for the container registry. Leave blank if not needed or if using repo_secret_name.</p>\n", "annotation": ": str | None"}, "practicuscore.ImageConfig.repo_password": {"fullname": "practicuscore.ImageConfig.repo_password", "modulename": "practicuscore", "qualname": "ImageConfig.repo_password", "kind": "variable", "doc": "<p>Password or token for the container registry. Leave blank if not needed or if using repo_secret_name.</p>\n", "annotation": ": str | None"}, "practicuscore.ImageConfig.repo_secret_name": {"fullname": "practicuscore.ImageConfig.repo_secret_name", "modulename": "practicuscore", "qualname": "ImageConfig.repo_secret_name", "kind": "variable", "doc": "<p>Kubernetes secret name for the container registry.\nIf this is set, you must not set <code>repo_username</code> or <code>repo_password</code>.</p>\n", "annotation": ": str | None"}, "practicuscore.ImageConfig.pull_policy": {"fullname": "practicuscore.ImageConfig.pull_policy", "modulename": "practicuscore", "qualname": "ImageConfig.pull_policy", "kind": "variable", "doc": "<p>Kubernetes pull policy for the container. Valid values:</p>\n\n<ul>\n<li>Always</li>\n<li>IfNotPresent</li>\n<li>Never\nLeave empty to use the default setting.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.ImageConfig.builder": {"fullname": "practicuscore.ImageConfig.builder", "modulename": "practicuscore", "qualname": "ImageConfig.builder", "kind": "variable", "doc": "<p>If True, enables container-building functionality for custom images.\nMust be set to True in order to configure builder-specific fields.</p>\n", "annotation": ": bool | None"}, "practicuscore.ImageConfig.builder_capacity": {"fullname": "practicuscore.ImageConfig.builder_capacity", "modulename": "practicuscore", "qualname": "ImageConfig.builder_capacity", "kind": "variable", "doc": "<p>Defines the percentage (1\u201399) of Worker capacity allocated for building images.\nCan only be set if <code>builder=True</code>.</p>\n", "annotation": ": int | None"}, "practicuscore.ImageConfig.custom_builder_url": {"fullname": "practicuscore.ImageConfig.custom_builder_url", "modulename": "practicuscore", "qualname": "ImageConfig.custom_builder_url", "kind": "variable", "doc": "<p>Optional custom image builder URL that extends or inherits from:</p>\n\n<ul>\n<li>ghcr.io/practicusai/practicus-builder</li>\n<li>or ../practicus-builder-privileged\nCan only be set if <code>builder=True</code>.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.ImageConfig.validate_pull_policy": {"fullname": "practicuscore.ImageConfig.validate_pull_policy", "modulename": "practicuscore", "qualname": "ImageConfig.validate_pull_policy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.ImageConfig.validate_builder_capacity": {"fullname": "practicuscore.ImageConfig.validate_builder_capacity", "modulename": "practicuscore", "qualname": "ImageConfig.validate_builder_capacity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.ImageConfig.validate_model": {"fullname": "practicuscore.ImageConfig.validate_model", "modulename": "practicuscore", "qualname": "ImageConfig.validate_model", "kind": "function", "doc": "<p>Cross-field validation:</p>\n\n<ul>\n<li><code>builder_capacity</code>, and <code>custom_builder_url</code>\ncan only be set if <code>builder=True</code>.</li>\n<li>If <code>repo_secret_name</code> is set, neither <code>repo_username</code> nor <code>repo_password</code>\ncan be specified.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.ImageConfig.model_config": {"fullname": "practicuscore.ImageConfig.model_config", "modulename": "practicuscore", "qualname": "ImageConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "practicuscore.DistJobType": {"fullname": "practicuscore.DistJobType", "modulename": "practicuscore", "qualname": "DistJobType", "kind": "class", "doc": "<p>Represents the type of distributed job or cluster environment you want to create and manage.</p>\n\n<p>Different distributed frameworks have varying requirements and behaviors. By specifying a <code>DistJobType</code>,\nyou inform the Practicus AI platform how to set up, start, and manage the underlying distributed environment.</p>\n\n<p><strong>Types:</strong></p>\n\n<ul>\n<li><code>python</code>: A generic Python-based distributed job.</li>\n<li><code>torch</code>: A PyTorch-based distributed training job.</li>\n<li><code>deepspeed</code>: A DeepSpeed-based distributed training job.</li>\n<li><code>fairscale</code>: A FairScale-based distributed training job.</li>\n<li><code>horovod</code>: A Horovod-based distributed training job.</li>\n<li><code>spark</code>: A Spark-based distributed job or interactive cluster.</li>\n<li><code>dask</code>: A Dask-based distributed job or interactive cluster.</li>\n<li><code>ray</code>: A Ray-based distributed job or interactive cluster.</li>\n<li><code>custom</code>: A user-defined distributed job type with a custom adaptor.</li>\n</ul>\n", "bases": "builtins.str, enum.Enum"}, "practicuscore.DistJobType.python": {"fullname": "practicuscore.DistJobType.python", "modulename": "practicuscore", "qualname": "DistJobType.python", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.python: &#x27;python&#x27;&gt;"}, "practicuscore.DistJobType.torch": {"fullname": "practicuscore.DistJobType.torch", "modulename": "practicuscore", "qualname": "DistJobType.torch", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.torch: &#x27;torch&#x27;&gt;"}, "practicuscore.DistJobType.deepspeed": {"fullname": "practicuscore.DistJobType.deepspeed", "modulename": "practicuscore", "qualname": "DistJobType.deepspeed", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.deepspeed: &#x27;deepspeed&#x27;&gt;"}, "practicuscore.DistJobType.fairscale": {"fullname": "practicuscore.DistJobType.fairscale", "modulename": "practicuscore", "qualname": "DistJobType.fairscale", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.fairscale: &#x27;fairscale&#x27;&gt;"}, "practicuscore.DistJobType.horovod": {"fullname": "practicuscore.DistJobType.horovod", "modulename": "practicuscore", "qualname": "DistJobType.horovod", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.horovod: &#x27;horovod&#x27;&gt;"}, "practicuscore.DistJobType.spark": {"fullname": "practicuscore.DistJobType.spark", "modulename": "practicuscore", "qualname": "DistJobType.spark", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.spark: &#x27;spark&#x27;&gt;"}, "practicuscore.DistJobType.dask": {"fullname": "practicuscore.DistJobType.dask", "modulename": "practicuscore", "qualname": "DistJobType.dask", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.dask: &#x27;dask&#x27;&gt;"}, "practicuscore.DistJobType.ray": {"fullname": "practicuscore.DistJobType.ray", "modulename": "practicuscore", "qualname": "DistJobType.ray", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.ray: &#x27;ray&#x27;&gt;"}, "practicuscore.DistJobType.custom": {"fullname": "practicuscore.DistJobType.custom", "modulename": "practicuscore", "qualname": "DistJobType.custom", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;DistJobType.custom: &#x27;custom&#x27;&gt;"}, "practicuscore.DistJobType.from_value": {"fullname": "practicuscore.DistJobType.from_value", "modulename": "practicuscore", "qualname": "DistJobType.from_value", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">enum</span><span class=\"o\">.</span><span class=\"n\">Enum</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">DistJobType</span>:</span></span>", "funcdef": "def"}, "practicuscore.DistJobConfig": {"fullname": "practicuscore.DistJobConfig", "modulename": "practicuscore", "qualname": "DistJobConfig", "kind": "class", "doc": "<p>Configuration for distributed jobs in Practicus AI.</p>\n\n<p>A distributed job involves multiple worker nodes cooperating to run a large-scale task, such as Spark, Dask, or\nTorch-based training jobs. This configuration defines how the cluster is formed, how many workers, memory, and CPU\nresources to allocate, as well as additional parameters like job directories, Python files, and termination\nconditions.</p>\n\n<p><strong>Usage Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">dist_conf</span> <span class=\"o\">=</span> <span class=\"n\">DistJobConfig</span><span class=\"p\">(</span>\n    <span class=\"n\">job_type</span><span class=\"o\">=</span><span class=\"n\">DistJobType</span><span class=\"o\">.</span><span class=\"n\">deepspeed</span><span class=\"p\">,</span>\n    <span class=\"n\">job_dir</span><span class=\"o\">=</span><span class=\"s2\">&quot;/path/to/job_dir&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">worker_count</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"n\">py_file</span><span class=\"o\">=</span><span class=\"s2\">&quot;job.py&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "bases": "pydantic.main.BaseModel"}, "practicuscore.DistJobConfig.__init__": {"fullname": "practicuscore.DistJobConfig.__init__", "modulename": "practicuscore", "qualname": "DistJobConfig.__init__", "kind": "function", "doc": "<p>Create a new model by parsing and validating input data from keyword arguments.</p>\n\n<p>Raises [<code>ValidationError</code>][pydantic_core.ValidationError] if the input data cannot be\nvalidated to form a valid model.</p>\n\n<p><code>self</code> is explicitly positional-only to allow <code>self</code> as a field name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">**</span><span class=\"n\">data</span></span>)</span>"}, "practicuscore.DistJobConfig.job_type": {"fullname": "practicuscore.DistJobConfig.job_type", "modulename": "practicuscore", "qualname": "DistJobConfig.job_type", "kind": "variable", "doc": "<p>Specifies the type of distributed job (e.g., Spark, Dask, Torch, Python).</p>\n", "annotation": ": practicuscore.api_base.DistJobType"}, "practicuscore.DistJobConfig.job_dir": {"fullname": "practicuscore.DistJobConfig.job_dir", "modulename": "practicuscore", "qualname": "DistJobConfig.job_dir", "kind": "variable", "doc": "<p>Directory containing job code and related files. For non-auto-distributed Spark and Dask jobs, and for all other \njob types, this must be provided.</p>\n", "annotation": ": str | None"}, "practicuscore.DistJobConfig.auto_distributed": {"fullname": "practicuscore.DistJobConfig.auto_distributed", "modulename": "practicuscore", "qualname": "DistJobConfig.auto_distributed", "kind": "variable", "doc": "<p>If True and <code>job_type</code> is Spark, the cluster is managed automatically (auto-scaling, etc.). Currently only supported \nfor Spark.</p>\n", "annotation": ": bool | None"}, "practicuscore.DistJobConfig.worker_count": {"fullname": "practicuscore.DistJobConfig.worker_count", "modulename": "practicuscore", "qualname": "DistJobConfig.worker_count", "kind": "variable", "doc": "<p>(alias) Sets <code>initial_count</code> and <code>max_count</code> to the same value, resulting in a fixed cluster size. \nUse <code>worker_count</code> if you are not auto-scaling.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.initial_count": {"fullname": "practicuscore.DistJobConfig.initial_count", "modulename": "practicuscore", "qualname": "DistJobConfig.initial_count", "kind": "variable", "doc": "<p>Set the initial number of workers. If not using <code>worker_count</code>, you must specify both <code>initial_count</code> and \n<code>max_count</code>.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.max_count": {"fullname": "practicuscore.DistJobConfig.max_count", "modulename": "practicuscore", "qualname": "DistJobConfig.max_count", "kind": "variable", "doc": "<p>Set the maximum number of workers. If not using <code>worker_count</code>, must be set along with <code>initial_count</code>.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.coordinator_port": {"fullname": "practicuscore.DistJobConfig.coordinator_port", "modulename": "practicuscore", "qualname": "DistJobConfig.coordinator_port", "kind": "variable", "doc": "<p>The coordinator (master) port. If left empty, a suitable default is used based on <code>job_type</code>.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.additional_ports": {"fullname": "practicuscore.DistJobConfig.additional_ports", "modulename": "practicuscore", "qualname": "DistJobConfig.additional_ports", "kind": "variable", "doc": "<p>List of extra ports for worker communication. Leave empty to use defaults. Most job types do not need these.</p>\n", "annotation": ": list[int] | None"}, "practicuscore.DistJobConfig.custom_adaptor": {"fullname": "practicuscore.DistJobConfig.custom_adaptor", "modulename": "practicuscore", "qualname": "DistJobConfig.custom_adaptor", "kind": "variable", "doc": "<p>Specifies a custom Python class (adaptor) extending job handling logic. Must refer to a class accessible at runtime.</p>\n", "annotation": ": str | None"}, "practicuscore.DistJobConfig.terminate_on_completion": {"fullname": "practicuscore.DistJobConfig.terminate_on_completion", "modulename": "practicuscore", "qualname": "DistJobConfig.terminate_on_completion", "kind": "variable", "doc": "<p>If True, terminates all workers after job completion. Set to False to keep the cluster alive for further \nexploration, experiments, or debugging.</p>\n", "annotation": ": bool | None"}, "practicuscore.DistJobConfig.capture_script_output": {"fullname": "practicuscore.DistJobConfig.capture_script_output", "modulename": "practicuscore", "qualname": "DistJobConfig.capture_script_output", "kind": "variable", "doc": "<p>If True, captures and logs stdout/stderr of job scripts (e.g. .py, .sh). Disable if already logging to avoid duplicates.</p>\n", "annotation": ": bool | None"}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"fullname": "practicuscore.DistJobConfig.service_mesh_sidecar", "modulename": "practicuscore", "qualname": "DistJobConfig.service_mesh_sidecar", "kind": "variable", "doc": "<p>By default disabled for performance. If True, enables service mesh sidecars for encrypted traffic between workers.</p>\n", "annotation": ": bool | None"}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"fullname": "practicuscore.DistJobConfig.job_start_timeout_seconds", "modulename": "practicuscore", "qualname": "DistJobConfig.job_start_timeout_seconds", "kind": "variable", "doc": "<p>Time in seconds to wait for the cluster to fully start before timing out.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.retries": {"fullname": "practicuscore.DistJobConfig.retries", "modulename": "practicuscore", "qualname": "DistJobConfig.retries", "kind": "variable", "doc": "<p>Number of retries if the job fails, useful for transient failures.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.sleep_between_retries": {"fullname": "practicuscore.DistJobConfig.sleep_between_retries", "modulename": "practicuscore", "qualname": "DistJobConfig.sleep_between_retries", "kind": "variable", "doc": "<p>Seconds to wait between retries.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.py_file": {"fullname": "practicuscore.DistJobConfig.py_file", "modulename": "practicuscore", "qualname": "DistJobConfig.py_file", "kind": "variable", "doc": "<p>The Python file to run. If empty, defaults may apply (e.g. <code>job.py</code> or <code>train.py</code>).</p>\n", "annotation": ": str | None"}, "practicuscore.DistJobConfig.py_venv_name": {"fullname": "practicuscore.DistJobConfig.py_venv_name", "modulename": "practicuscore", "qualname": "DistJobConfig.py_venv_name", "kind": "variable", "doc": "<p>The name of a Python virtual environment (under ~/.venv/) to use. Leave empty for the default venv.</p>\n", "annotation": ": str | None"}, "practicuscore.DistJobConfig.log_in_run_dir": {"fullname": "practicuscore.DistJobConfig.log_in_run_dir", "modulename": "practicuscore", "qualname": "DistJobConfig.log_in_run_dir", "kind": "variable", "doc": "<p>If True, places logs and artifacts in the run directory. Leave empty for defaults.</p>\n", "annotation": ": bool | None"}, "practicuscore.DistJobConfig.measure_utilization": {"fullname": "practicuscore.DistJobConfig.measure_utilization", "modulename": "practicuscore", "qualname": "DistJobConfig.measure_utilization", "kind": "variable", "doc": "<p>If True, measures system and GPU utilization periodically.</p>\n", "annotation": ": bool | None"}, "practicuscore.DistJobConfig.measure_utilization_interval": {"fullname": "practicuscore.DistJobConfig.measure_utilization_interval", "modulename": "practicuscore", "qualname": "DistJobConfig.measure_utilization_interval", "kind": "variable", "doc": "<p>Interval in seconds for measuring system and GPU usage if <code>measure_utilization</code> is True.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.coordinator_is_worker": {"fullname": "practicuscore.DistJobConfig.coordinator_is_worker", "modulename": "practicuscore", "qualname": "DistJobConfig.coordinator_is_worker", "kind": "variable", "doc": "<p>If True, coordinator also acts as a worker. Default True if unset. If False, coordinator doesn't run tasks, freeing resources.</p>\n", "annotation": ": bool | None"}, "practicuscore.DistJobConfig.processes": {"fullname": "practicuscore.DistJobConfig.processes", "modulename": "practicuscore", "qualname": "DistJobConfig.processes", "kind": "variable", "doc": "<p>Number of processes/executors per worker node. For Spark, this is the executor count per node; for Dask, the worker count.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.threads": {"fullname": "practicuscore.DistJobConfig.threads", "modulename": "practicuscore", "qualname": "DistJobConfig.threads", "kind": "variable", "doc": "<p>Number of threads per executor/process. In Spark, corresponds to executor cores; in Dask, <code>--nthreads</code> per worker.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.memory_gb": {"fullname": "practicuscore.DistJobConfig.memory_gb", "modulename": "practicuscore", "qualname": "DistJobConfig.memory_gb", "kind": "variable", "doc": "<p>Memory limit per executor/process in GB. For Spark, maps to executor/driver memory; for Dask, <code>--memory-limit</code>.</p>\n", "annotation": ": int | None"}, "practicuscore.DistJobConfig.executors": {"fullname": "practicuscore.DistJobConfig.executors", "modulename": "practicuscore", "qualname": "DistJobConfig.executors", "kind": "variable", "doc": "<p>(Read-only) A list of executor definitions, set by the system after cluster creation.</p>\n", "annotation": ": list[practicuscore.api_base.DistJobExecutor] | None"}, "practicuscore.DistJobConfig.validate_model": {"fullname": "practicuscore.DistJobConfig.validate_model", "modulename": "practicuscore", "qualname": "DistJobConfig.validate_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.DistJobConfig.model_config": {"fullname": "practicuscore.DistJobConfig.model_config", "modulename": "practicuscore", "qualname": "DistJobConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "default_value": "{&#x27;validate_assignment&#x27;: True}"}, "practicuscore.GitConfig": {"fullname": "practicuscore.GitConfig", "modulename": "practicuscore", "qualname": "GitConfig", "kind": "class", "doc": "<p>Configuration details for interacting with a Git repository.</p>\n", "bases": "pydantic.main.BaseModel"}, "practicuscore.GitConfig.remote_url": {"fullname": "practicuscore.GitConfig.remote_url", "modulename": "practicuscore", "qualname": "GitConfig.remote_url", "kind": "variable", "doc": "<p>The URL of the remote Git repository.</p>\n", "annotation": ": str"}, "practicuscore.GitConfig.secret_name": {"fullname": "practicuscore.GitConfig.secret_name", "modulename": "practicuscore", "qualname": "GitConfig.secret_name", "kind": "variable", "doc": "<p>Name of the secret (credentials/token) to authenticate with the Git repository.</p>\n", "annotation": ": str"}, "practicuscore.GitConfig.save_secret": {"fullname": "practicuscore.GitConfig.save_secret", "modulename": "practicuscore", "qualname": "GitConfig.save_secret", "kind": "variable", "doc": "<p>Whether to persist the secret after retrieval (default: None, persists).</p>\n", "annotation": ": bool | None"}, "practicuscore.GitConfig.username": {"fullname": "practicuscore.GitConfig.username", "modulename": "practicuscore", "qualname": "GitConfig.username", "kind": "variable", "doc": "<p>Optional username for repository authentication (default: None).</p>\n", "annotation": ": str | None"}, "practicuscore.GitConfig.local_path": {"fullname": "practicuscore.GitConfig.local_path", "modulename": "practicuscore", "qualname": "GitConfig.local_path", "kind": "variable", "doc": "<p>Local path for cloning or checking out the repository (default: None, uses ~/my/projects or ~/projects if no ~/my folder is present).</p>\n", "annotation": ": str | None"}, "practicuscore.GitConfig.branch": {"fullname": "practicuscore.GitConfig.branch", "modulename": "practicuscore", "qualname": "GitConfig.branch", "kind": "variable", "doc": "<p>Git branch to check out. If None, the default branch is used (default: None).</p>\n", "annotation": ": str | None"}, "practicuscore.GitConfig.sparse_checkout_folders": {"fullname": "practicuscore.GitConfig.sparse_checkout_folders", "modulename": "practicuscore", "qualname": "GitConfig.sparse_checkout_folders", "kind": "variable", "doc": "<p>List of folders for sparse checkout. If None, all files and folders are checked out (default: None).</p>\n", "annotation": ": list[str] | None"}, "practicuscore.GitConfig.fetch_depth": {"fullname": "practicuscore.GitConfig.fetch_depth", "modulename": "practicuscore", "qualname": "GitConfig.fetch_depth", "kind": "variable", "doc": "<p>Shallow clone depth. If None, fetches the full commit history (default: None).</p>\n", "annotation": ": int | None"}, "practicuscore.GitConfig.model_config": {"fullname": "practicuscore.GitConfig.model_config", "modulename": "practicuscore", "qualname": "GitConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "practicuscore.MQConfig": {"fullname": "practicuscore.MQConfig", "modulename": "practicuscore", "qualname": "MQConfig", "kind": "class", "doc": "<p>MQConfig is a unified configuration model for both RabbitMQ publishers and consumers (subscribers).\nIt encapsulates all necessary parameters for connecting to a RabbitMQ broker and configuring\nmessage publishing and consumption (subscription). Adjust these parameters to fine-tune your publishers\nand consumers (subscribers).</p>\n\n<p>In production, ensure that the topology (exchanges, queues, bindings) is already configured.\nAlternatively, if you have configure privileges, call <code>mq.apply_topology(...)</code> to create\nthe necessary artifacts, or <code>mq.export_topology(...)</code> to export artifacts and let an admin\ncreate the topology resources.</p>\n", "bases": "pydantic.main.BaseModel"}, "practicuscore.MQConfig.conn_str": {"fullname": "practicuscore.MQConfig.conn_str", "modulename": "practicuscore", "qualname": "MQConfig.conn_str", "kind": "variable", "doc": "<p>AMQP URL (e.g. \"amqp://user:pass@host/vhost\").</p>\n", "annotation": ": str"}, "practicuscore.MQConfig.queue": {"fullname": "practicuscore.MQConfig.queue", "modulename": "practicuscore", "qualname": "MQConfig.queue", "kind": "variable", "doc": "<p>Queue name.</p>\n\n<ul>\n<li>Required for consumers (subscribers).</li>\n<li>For publishers, required if <code>exchange</code> is None (i.e., for direct-to-queue publishing).</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.MQConfig.exchange": {"fullname": "practicuscore.MQConfig.exchange", "modulename": "practicuscore", "qualname": "MQConfig.exchange", "kind": "variable", "doc": "<p>Exchange name.</p>\n\n<ul>\n<li>If omitted, publishers use the channel\u2019s default exchange.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.MQConfig.exchange_type": {"fullname": "practicuscore.MQConfig.exchange_type", "modulename": "practicuscore", "qualname": "MQConfig.exchange_type", "kind": "variable", "doc": "<p>Exchange type (\"direct\", \"fanout\", \"topic\", \"headers\"). Defaults to \"direct\" if omitted.</p>\n\n<ul>\n<li>Ignored when publishing directly to a queue.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.MQConfig.queue_ttl": {"fullname": "practicuscore.MQConfig.queue_ttl", "modulename": "practicuscore", "qualname": "MQConfig.queue_ttl", "kind": "variable", "doc": "<p>Consumers (Subscribers) only:</p>\n\n<ul>\n<li>Message TTL in milliseconds (e.g. 60000).</li>\n<li>If omitted, no TTL is set.</li>\n</ul>\n", "annotation": ": int | None"}, "practicuscore.MQConfig.routing_key": {"fullname": "practicuscore.MQConfig.routing_key", "modulename": "practicuscore", "qualname": "MQConfig.routing_key", "kind": "variable", "doc": "<p>Routing key for publishing.</p>\n\n<ul>\n<li>For direct-to-queue publishing, defaults to the queue name if not provided.</li>\n<li>Otherwise defaults to an empty string.</li>\n</ul>\n", "annotation": ": str | None"}, "practicuscore.MQConfig.max_retries": {"fullname": "practicuscore.MQConfig.max_retries", "modulename": "practicuscore", "qualname": "MQConfig.max_retries", "kind": "variable", "doc": "<p>Maximum number of times a message is retried (based on x-death).</p>\n\n<ul>\n<li>Defaults to 5.</li>\n</ul>\n", "annotation": ": int | None"}, "practicuscore.MQConfig.dead_letter_exchange": {"fullname": "practicuscore.MQConfig.dead_letter_exchange", "modulename": "practicuscore", "qualname": "MQConfig.dead_letter_exchange", "kind": "variable", "doc": "<p>Dead-letter exchange name.</p>\n", "annotation": ": str | None"}, "practicuscore.MQConfig.dead_letter_routing_key": {"fullname": "practicuscore.MQConfig.dead_letter_routing_key", "modulename": "practicuscore", "qualname": "MQConfig.dead_letter_routing_key", "kind": "variable", "doc": "<p>Routing key for dead-lettering. Defaults to an empty string.</p>\n", "annotation": ": str | None"}, "practicuscore.MQConfig.headers": {"fullname": "practicuscore.MQConfig.headers", "modulename": "practicuscore", "qualname": "MQConfig.headers", "kind": "variable", "doc": "<p>For headers exchanges:</p>\n\n<ul>\n<li>Attached to the message when publishing and used as binding arguments when consuming (subscribing).</li>\n</ul>\n", "annotation": ": dict | None"}, "practicuscore.MQConfig.verify_delivery": {"fullname": "practicuscore.MQConfig.verify_delivery", "modulename": "practicuscore", "qualname": "MQConfig.verify_delivery", "kind": "variable", "doc": "<p>If True, sets the broker's <code>mandatory</code> flag during publishing.</p>\n\n<ul>\n<li>In principle, unroutable messages would be returned by the broker.</li>\n<li>However, the current code does NOT attach a return-listener callback, so it may\nnot fully handle the \u201cunroutable\u201d scenario. General publish failures are retried.</li>\n</ul>\n", "annotation": ": bool"}, "practicuscore.MQConfig.prefetch_count": {"fullname": "practicuscore.MQConfig.prefetch_count", "modulename": "practicuscore", "qualname": "MQConfig.prefetch_count", "kind": "variable", "doc": "<p>Consumers (Subscribers) only:</p>\n\n<ul>\n<li>Configures channel prefetch (QoS) if set.</li>\n</ul>\n", "annotation": ": int | None"}, "practicuscore.MQConfig.user_name": {"fullname": "practicuscore.MQConfig.user_name", "modulename": "practicuscore", "qualname": "MQConfig.user_name", "kind": "variable", "doc": "<p>Returns the user name extracted from conn_str.</p>\n", "annotation": ": str"}, "practicuscore.MQConfig.password": {"fullname": "practicuscore.MQConfig.password", "modulename": "practicuscore", "qualname": "MQConfig.password", "kind": "variable", "doc": "<p>Returns the password extracted from conn_str.</p>\n", "annotation": ": str"}, "practicuscore.MQConfig.host": {"fullname": "practicuscore.MQConfig.host", "modulename": "practicuscore", "qualname": "MQConfig.host", "kind": "variable", "doc": "<p>Returns the host extracted from conn_str.</p>\n", "annotation": ": str"}, "practicuscore.MQConfig.vhost": {"fullname": "practicuscore.MQConfig.vhost", "modulename": "practicuscore", "qualname": "MQConfig.vhost", "kind": "variable", "doc": "<p>Returns the virtual host (vhost) extracted from conn_str.\nThe vhost is taken from the path component (excluding the leading '/').</p>\n", "annotation": ": str"}, "practicuscore.MQConfig.model_config": {"fullname": "practicuscore.MQConfig.model_config", "modulename": "practicuscore", "qualname": "MQConfig.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "annotation": ": ClassVar[pydantic.config.ConfigDict]", "default_value": "{}"}, "practicuscore.PrtList": {"fullname": "practicuscore.PrtList", "modulename": "practicuscore", "qualname": "PrtList", "kind": "class", "doc": "<p>A specialized list that can be toggled as read-only.\nIt also provides utilities for converting its items into CSV,\npandas DataFrames, and JSON formats.</p>\n\n<p><strong>Key Features</strong>:</p>\n\n<ul>\n<li>Inherits all behavior from the built-in <code>list</code>, but adds a read-only flag.</li>\n<li>If <code>read_only</code> is set to <code>True</code>, any attempt to modify the list\nwill raise a <code>ValueError</code>.</li>\n<li>Supports easy data exporting to CSV (via <code>__str__</code>), pandas DataFrame\n(via <code>to_pandas</code>), and JSON (via <code>to_json</code>).</li>\n<li>Can convert its contents into a list of dictionaries (via <code>to_dict_list</code>),\nmaking it easier to manipulate or serialize.</li>\n</ul>\n", "bases": "list[~T], typing.Generic[~T]"}, "practicuscore.PrtList.read_only": {"fullname": "practicuscore.PrtList.read_only", "modulename": "practicuscore", "qualname": "PrtList.read_only", "kind": "variable", "doc": "<p>Check if the list is currently read-only.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p><code>True</code> if read-only, <code>False</code> otherwise.</p>\n</blockquote>\n", "annotation": ": bool"}, "practicuscore.PrtList.to_pandas": {"fullname": "practicuscore.PrtList.to_pandas", "modulename": "practicuscore", "qualname": "PrtList.to_pandas", "kind": "function", "doc": "<p>Convert the list to a pandas DataFrame by reading the CSV representation.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>pandas.DataFrame</code> containing the list's data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.PrtList.to_json": {"fullname": "practicuscore.PrtList.to_json", "modulename": "practicuscore", "qualname": "PrtList.to_json", "kind": "function", "doc": "<p>Convert the list to a JSON string, using the CSV data as the source.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prettify</strong>:  If <code>True</code>, the JSON is formatted with indentation.\nIf <code>False</code>, the JSON is compact.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A JSON string of the list's data.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prettify</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "practicuscore.PrtList.to_dict_list": {"fullname": "practicuscore.PrtList.to_dict_list", "modulename": "practicuscore", "qualname": "PrtList.to_dict_list", "kind": "function", "doc": "<p>Convert the list to a list of dictionaries by parsing the CSV representation.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A list of dictionaries representing each row/item in the list.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.APIExecutionTarget": {"fullname": "practicuscore.APIExecutionTarget", "modulename": "practicuscore", "qualname": "APIExecutionTarget", "kind": "class", "doc": "<p>Defines where the primary work initiated by the API call to the Practicus AI App is performed.</p>\n", "bases": "builtins.str, enum.Enum"}, "practicuscore.APIExecutionTarget.DirectExecution": {"fullname": "practicuscore.APIExecutionTarget.DirectExecution", "modulename": "practicuscore", "qualname": "APIExecutionTarget.DirectExecution", "kind": "variable", "doc": "<p>Executes standard application logic directly, without involving AI agents, humans, or external automation.</p>\n", "default_value": "DirectExecution"}, "practicuscore.APIExecutionTarget.AIAgent": {"fullname": "practicuscore.APIExecutionTarget.AIAgent", "modulename": "practicuscore", "qualname": "APIExecutionTarget.AIAgent", "kind": "variable", "doc": "<p>Execution delegated to a specialized AI agent.</p>\n", "default_value": "AIAgent"}, "practicuscore.APIExecutionTarget.HumanWorker": {"fullname": "practicuscore.APIExecutionTarget.HumanWorker", "modulename": "practicuscore", "qualname": "APIExecutionTarget.HumanWorker", "kind": "variable", "doc": "<p>Execution delegated to a human worker (Human-in-the-Loop).</p>\n", "default_value": "HumanWorker"}, "practicuscore.APIExecutionTarget.RPABot": {"fullname": "practicuscore.APIExecutionTarget.RPABot", "modulename": "practicuscore", "qualname": "APIExecutionTarget.RPABot", "kind": "variable", "doc": "<p>Execution delegated to a Robotic Process Automation bot.</p>\n", "default_value": "RPABot"}, "practicuscore.APIExecutionTarget.RemoteService": {"fullname": "practicuscore.APIExecutionTarget.RemoteService", "modulename": "practicuscore", "qualname": "APIExecutionTarget.RemoteService", "kind": "variable", "doc": "<p>Execution involves calling another distinct internal or external service/API.</p>\n", "default_value": "RemoteService"}, "practicuscore.APIRiskProfile": {"fullname": "practicuscore.APIRiskProfile", "modulename": "practicuscore", "qualname": "APIRiskProfile", "kind": "class", "doc": "<p>Represents the assessed potential risk associated with the Practicus AI App API endpoint.</p>\n", "bases": "builtins.str, enum.Enum"}, "practicuscore.APIRiskProfile.Low": {"fullname": "practicuscore.APIRiskProfile.Low", "modulename": "practicuscore", "qualname": "APIRiskProfile.Low", "kind": "variable", "doc": "<p>Low risk if misused or if it fails. Minimal to no compliance, security, financial, or legal concerns.</p>\n", "default_value": "Low"}, "practicuscore.APIRiskProfile.Medium": {"fullname": "practicuscore.APIRiskProfile.Medium", "modulename": "practicuscore", "qualname": "APIRiskProfile.Medium", "kind": "variable", "doc": "<p>Moderate risk if misused or if it fails. Potential compliance, security, financial, or legal concerns.</p>\n", "default_value": "Medium"}, "practicuscore.APIRiskProfile.High": {"fullname": "practicuscore.APIRiskProfile.High", "modulename": "practicuscore", "qualname": "APIRiskProfile.High", "kind": "variable", "doc": "<p>High risk if misused or if it fails. Significant compliance, security, financial, or legal concerns.</p>\n", "default_value": "High"}, "practicuscore.APIScope": {"fullname": "practicuscore.APIScope", "modulename": "practicuscore", "qualname": "APIScope", "kind": "class", "doc": "<p>Defines the access scope of the Practicus AI App API endpoint.</p>\n", "bases": "builtins.str, enum.Enum"}, "practicuscore.APIScope.AppOnly": {"fullname": "practicuscore.APIScope.AppOnly", "modulename": "practicuscore", "qualname": "APIScope.AppOnly", "kind": "variable", "doc": "<p>Accesses resources limited to this Practicus AI App.</p>\n", "default_value": "AppOnly"}, "practicuscore.APIScope.TeamWide": {"fullname": "practicuscore.APIScope.TeamWide", "modulename": "practicuscore", "qualname": "APIScope.TeamWide", "kind": "variable", "doc": "<p>Accesses resources across systems managed by this app's development team.</p>\n", "default_value": "TeamWide"}, "practicuscore.APIScope.CompanyWide": {"fullname": "practicuscore.APIScope.CompanyWide", "modulename": "practicuscore", "qualname": "APIScope.CompanyWide", "kind": "variable", "doc": "<p>Accesses internal resources across different teams and systems within the company.</p>\n", "default_value": "CompanyWide"}, "practicuscore.APIScope.PartnerExternal": {"fullname": "practicuscore.APIScope.PartnerExternal", "modulename": "practicuscore", "qualname": "APIScope.PartnerExternal", "kind": "variable", "doc": "<p>Accesses resources hosted externally by verified third-party partners.</p>\n", "default_value": "PartnerExternal"}, "practicuscore.APIScope.Public": {"fullname": "practicuscore.APIScope.Public", "modulename": "practicuscore", "qualname": "APIScope.Public", "kind": "variable", "doc": "<p>Accesses resources publicly available on the internet.</p>\n", "default_value": "Public"}, "practicuscore.APISpec": {"fullname": "practicuscore.APISpec", "modulename": "practicuscore", "qualname": "APISpec", "kind": "class", "doc": "<p>Defines the characteristics and behavior of a Practicus AI App API endpoint,\nfocusing on its execution pattern, operational properties, and context.</p>\n", "bases": "pydantic.main.BaseModel"}, "practicuscore.APISpec.execution_target": {"fullname": "practicuscore.APISpec.execution_target", "modulename": "practicuscore", "qualname": "APISpec.execution_target", "kind": "variable", "doc": "<p>Specifies where the primary work initiated by the API call is performed.</p>\n", "annotation": ": practicuscore.api_base.APIExecutionTarget | None"}, "practicuscore.APISpec.read_only": {"fullname": "practicuscore.APISpec.read_only", "modulename": "practicuscore", "qualname": "APISpec.read_only", "kind": "variable", "doc": "<p>Indicates if the endpoint only reads data (True, Informational) or if it modifies data/state (False, Operational).</p>\n", "annotation": ": bool | None"}, "practicuscore.APISpec.scope": {"fullname": "practicuscore.APISpec.scope", "modulename": "practicuscore", "qualname": "APISpec.scope", "kind": "variable", "doc": "<p>Defines the intended audience or network reach of the API endpoint.</p>\n", "annotation": ": practicuscore.api_base.APIScope | None"}, "practicuscore.APISpec.risk_profile": {"fullname": "practicuscore.APISpec.risk_profile", "modulename": "practicuscore", "qualname": "APISpec.risk_profile", "kind": "variable", "doc": "<p>Assesses the potential risk associated with the API endpoint's usage or failure.</p>\n", "annotation": ": practicuscore.api_base.APIRiskProfile | None"}, "practicuscore.APISpec.human_gated": {"fullname": "practicuscore.APISpec.human_gated", "modulename": "practicuscore", "qualname": "APISpec.human_gated", "kind": "variable", "doc": "<p>Indicates if an otherwise operational task will go through human review or approval before final execution.</p>\n", "annotation": ": bool | None"}, "practicuscore.APISpec.deterministic": {"fullname": "practicuscore.APISpec.deterministic", "modulename": "practicuscore", "qualname": "APISpec.deterministic", "kind": "variable", "doc": "<p>Indicates if the endpoint's logic is Deterministic (consistent output for identical inputs), or Non-deterministic (output may vary even for identical inputs).</p>\n", "annotation": ": bool | None"}, "practicuscore.APISpec.idempotent": {"fullname": "practicuscore.APISpec.idempotent", "modulename": "practicuscore", "qualname": "APISpec.idempotent", "kind": "variable", "doc": "<p>Indicates if calling the endpoint multiple times with the same input has the same net effect as calling it once. Only relevant for non-read-only endpoints.</p>\n", "annotation": ": bool | None"}, "practicuscore.APISpec.stateful": {"fullname": "practicuscore.APISpec.stateful", "modulename": "practicuscore", "qualname": "APISpec.stateful", "kind": "variable", "doc": "<p>Indicates if the endpoint maintains state across multiple calls from the same client (True) or if each call is independent (False).</p>\n", "annotation": ": bool | None"}, "practicuscore.APISpec.asynchronous": {"fullname": "practicuscore.APISpec.asynchronous", "modulename": "practicuscore", "qualname": "APISpec.asynchronous", "kind": "variable", "doc": "<p>Indicates if the endpoint completes its work immediately and returns the result (False, Sync) or if it acknowledges the request and completes the work later (True, Async).</p>\n", "annotation": ": bool | None"}, "practicuscore.APISpec.maturity_level": {"fullname": "practicuscore.APISpec.maturity_level", "modulename": "practicuscore", "qualname": "APISpec.maturity_level", "kind": "variable", "doc": "<p>Represents the intrinsic stability and readiness of the API. Default Categories are:\n1: POC, 2: Experimental, 3: Beta, 4: Stable, 5: Critical/Foundational.</p>\n", "annotation": ": int | None"}, "practicuscore.APISpec.disable_authentication": {"fullname": "practicuscore.APISpec.disable_authentication", "modulename": "practicuscore", "qualname": "APISpec.disable_authentication", "kind": "variable", "doc": "<p>(Use with Caution) If True, disables standard API authentication, making the endpoint publicly accessible or accessible without tokens. Defaults to False (authentication enabled) if None.</p>\n", "annotation": ": bool | None"}, "practicuscore.APISpec.custom_attributes": {"fullname": "practicuscore.APISpec.custom_attributes", "modulename": "practicuscore", "qualname": "APISpec.custom_attributes", "kind": "variable", "doc": "<p>Allows defining arbitrary key-value pairs for custom attributes, tagging, or extensions specific to this endpoint.</p>\n\n<p>Provide a dictionary where keys are strings (e.g., 'my-tag') and values should be JSON-serializable \n(e.g., string, number, boolean). These pairs are exposed as OpenAPI specification \nextensions, automatically prefixed with 'x-prt-'. </p>\n\n<p>Example: \n  Input:  {'my-tag': 'tag-value', 'experimental': True}\n  OpenAPI Output: 'x-prt-my-tag': 'tag-value', 'x-prt-experimental': True</p>\n\n<p>This metadata is also typically displayed in generated API documentation views like ReDoc.</p>\n", "annotation": ": dict[str, str | int | float | bool] | None"}, "practicuscore.APISpec.validate_custom_attributes": {"fullname": "practicuscore.APISpec.validate_custom_attributes", "modulename": "practicuscore", "qualname": "APISpec.validate_custom_attributes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "practicuscore.APISpec.validate_model": {"fullname": "practicuscore.APISpec.validate_model", "modulename": "practicuscore", "qualname": "APISpec.validate_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">values</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "practicuscore.APISpec.model_config": {"fullname": "practicuscore.APISpec.model_config", "modulename": "practicuscore", "qualname": "APISpec.model_config", "kind": "variable", "doc": "<p>Configuration for the model, should be a dictionary conforming to [<code>ConfigDict</code>][pydantic.config.ConfigDict].</p>\n", "default_value": "{&#x27;validate_assignment&#x27;: True}"}, "practicuscore.get_default_region": {"fullname": "practicuscore.get_default_region", "modulename": "practicuscore", "qualname": "get_default_region", "kind": "function", "doc": "<p>Retrieves the default Practicus AI region. The default region is typically the one last logged-in to\nor explicitly set using <code>set_default_region</code>.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>The default <code>Region</code> instance.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.create_worker": {"fullname": "practicuscore.create_worker", "modulename": "practicuscore", "qualname": "create_worker", "kind": "function", "doc": "<p>Creates a new remote Practicus AI Worker in the current or specified region.</p>\n\n<p>A worker is a computational pod that can run code, host Jupyter notebooks, build models etc.\nBy default, it uses the current region unless <code>worker_config</code> points to another region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): Optional configuration for the worker. Accepts\na JSON path, a dict, or a <code>WorkerConfig</code> object. If None, uses the default configuration.</li>\n<li>wait_until_ready (bool | None): If True, the method waits until the worker is fully provisioned and ready.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Worker</code> instance representing the newly created remote pod.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">wait_until_ready</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.current_region": {"fullname": "practicuscore.current_region", "modulename": "practicuscore", "qualname": "current_region", "kind": "function", "doc": "<p>Returns the currently active Practicus AI region. If the code is running inside a worker, this is\nthe region associated with that worker. Otherwise, this returns the default configured region.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Region</code> object for the current environment.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.get_local_worker": {"fullname": "practicuscore.get_local_worker", "modulename": "practicuscore", "qualname": "get_local_worker", "kind": "function", "doc": "<p>Retrieves the <code>Worker</code> instance representing the current environment if the code is running inside a worker pod.</p>\n\n<p><strong>Returns:</strong>\nA <code>Worker</code> instance associated with the local environment.</p>\n\n<p><strong>Note:</strong> If not running inside a worker, this will raise an error.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.get_or_create_worker": {"fullname": "practicuscore.get_or_create_worker", "modulename": "practicuscore", "qualname": "get_or_create_worker", "kind": "function", "doc": "<p>Attempts to retrieve an existing worker (if it matches the provided configuration) or creates one if not found.</p>\n\n<p>This is useful for idempotent deployments where you do not want to create duplicates if the worker\nalready exists.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): The configuration to check against existing workers.\nIf not provided, defaults are used.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Worker</code> instance, either existing or newly created.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.running_on_a_worker": {"fullname": "practicuscore.running_on_a_worker", "modulename": "practicuscore", "qualname": "running_on_a_worker", "kind": "function", "doc": "<p>Checks if the current code is executing inside a Practicus AI Worker.</p>\n\n<p>This is useful for conditional logic that depends on whether the code runs locally or on a remote\nPracticus AI-managed environment.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if this code is running inside a Practicus AI Worker pod; False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.get_region": {"fullname": "practicuscore.get_region", "modulename": "practicuscore", "qualname": "get_region", "kind": "function", "doc": "<p>Retrieves a specific Practicus AI region based on the provided region key or returns the default region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>region_key (str | None): A region identifier in either <code>username@region_address</code> or <code>region_address</code> format.\nIf not provided, the default region is returned.</li>\n</ul>\n\n<p><strong>Returns:</strong>\nA <code>Region</code> object.</p>\n\n<p><strong>Example:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># If multiple regions are available:</span>\n<span class=\"n\">region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"o\">.</span><span class=\"n\">get_region</span><span class=\"p\">(</span><span class=\"s2\">&quot;alice@my-practicus-region.example.com&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># If none provided, defaults to last used or configured default:</span>\n<span class=\"n\">default_region</span> <span class=\"o\">=</span> <span class=\"n\">prt</span><span class=\"o\">.</span><span class=\"n\">regions</span><span class=\"o\">.</span><span class=\"n\">get_region</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">region_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.get_region_list": {"fullname": "practicuscore.get_region_list", "modulename": "practicuscore", "qualname": "get_region_list", "kind": "function", "doc": "<p>Retrieves a list of all configured and logged-in Practicus AI regions.</p>\n\n<p>Each entry in the returned list is a <code>Region</code> instance containing connection and authentication info.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A read-only <code>PrtList</code> of <code>Region</code> objects.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">util</span><span class=\"o\">.</span><span class=\"n\">PrtList</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.region_factory": {"fullname": "practicuscore.region_factory", "modulename": "practicuscore", "qualname": "region_factory", "kind": "function", "doc": "<p>Creates or retrieves a <code>Region</code> instance based on a provided worker configuration or returns the\ncurrent/default region if none is provided.</p>\n\n<p>This is useful in contexts where you may have a serialized or external configuration that specifies a region.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): A configuration object or JSON path/dict\nthat may contain region connection details. If None, returns the current region.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Region</code> instance determined by the provided configuration or the current region.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">region_manager</span><span class=\"o\">.</span><span class=\"n\">Region</span>:</span></span>", "funcdef": "def"}, "practicuscore.set_default_region": {"fullname": "practicuscore.set_default_region", "modulename": "practicuscore", "qualname": "set_default_region", "kind": "function", "doc": "<p>Sets the default Practicus AI region. Subsequent operations that do not explicitly specify a region\nwill use this default.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>region_key (str): The region identifier, e.g. <code>username@my-region.example.com</code> or just <code>my-region.example.com</code>\nif only one user is associated with it.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>True if the region is successfully set as default; False otherwise.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">region_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "practicuscore.create_workspace": {"fullname": "practicuscore.create_workspace", "modulename": "practicuscore", "qualname": "create_workspace", "kind": "function", "doc": "<p>Creates a new Practicus AI Workspace (a special type of Worker) in the selected region.</p>\n\n<p>A workspace is a worker configured for interactive development and includes Practicus AI Studio,\noffice tools and more.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>worker_config (WorkerConfig | str | dict | None): Configuration for the workspace. Accepts a JSON path,\na dict, or <code>WorkerConfig</code>. If None, uses the default configuration.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A <code>Worker</code> instance configured as a workspace.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span>:</span></span>", "funcdef": "def"}, "practicuscore.run_task": {"fullname": "practicuscore.run_task", "modulename": "practicuscore", "qualname": "run_task", "kind": "function", "doc": "<p>Runs a specified script (Python or shell) as a \"task\" on a newly created remote worker.</p>\n\n<p>Common uses include running batch jobs, scheduled tasks, or CI/CD pipeline steps in a controlled environment.</p>\n\n<p><strong>Parameters:</strong></p>\n\n<ul>\n<li>file_name (str | None): The Python (.py) or shell (.sh) script to run after files are uploaded.</li>\n<li>files_path (str | None): Directory containing files to upload. Defaults to current directory.</li>\n<li>upload_files (bool): Default is True. Uploads files defined by files_path, or current dir if files_path is not defined.\nIf False, you must upload files separately e.g. using automated git sync,\nor run a file already in ~/my or ~/shared folder and set file_path_on_worker param.</li>\n<li>file_path_on_worker (str | None): If you are not uploading files, you must set file_path_on_worker param\nto the <em>full path</em> of the Python (.py) or shell (.sh) script to run. E.g. ~/my/projects/repo/task.py\nThis file must already be present on the Worker e.g. by using automated git sync, or a file already in ~/my or ~/shared folders.</li>\n<li>worker_config (WorkerConfig | str | dict | None): Configuration for the remote worker.</li>\n<li>terminate_on_completion (bool): If True, terminates the worker after completion.</li>\n<li>capture_task_output (bool): If True, captures and logs the script's stdout and stderr.</li>\n<li>python_venv_name (str | None): Name of a Python virtual environment to use on the worker.</li>\n<li>max_files_to_upload (int): Max number of files to upload.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<blockquote>\n  <p>A tuple of <code>(Worker, bool)</code> where Worker is the worker used or created for this task,\n           and bool indicates if the task succeeded.</p>\n</blockquote>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">file_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">files_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">upload_files</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">file_path_on_worker</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">worker_config</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">WorkerConfig</span> <span class=\"o\">|</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">terminate_on_completion</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">capture_task_output</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">python_venv_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">max_files_to_upload</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">250</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">worker_manager</span><span class=\"o\">.</span><span class=\"n\">Worker</span> <span class=\"o\">|</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "practicuscore.api": {"fullname": "practicuscore.api", "modulename": "practicuscore", "qualname": "api", "kind": "function", "doc": "<p>Decorator for Practicus AI Application APIs.</p>\n\n<p>Args:\n    path (str): The API endpoint path.\n    spec (APISpec | None): Defines the characteristics and behavior of a Practicus AI App API endpoint,\n        focusing on its execution pattern, operational properties, and context.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">spec</span><span class=\"p\">:</span> <span class=\"n\">practicuscore</span><span class=\"o\">.</span><span class=\"n\">api_base</span><span class=\"o\">.</span><span class=\"n\">APISpec</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"practicuscore": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 1181}, "practicuscore.regions": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 342}, "practicuscore.regions.running_on_a_worker": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 64}, "practicuscore.regions.login": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 246, "bases": 0, "doc": 442}, "practicuscore.regions.logout": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 93}, "practicuscore.regions.get_region_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 56}, "practicuscore.regions.get_region": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 171}, "practicuscore.regions.get_default_region": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 45}, "practicuscore.regions.current_region": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 52}, "practicuscore.regions.region_factory": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 111}, "practicuscore.regions.set_default_region": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 86}, "practicuscore.regions.get_local_worker": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 55}, "practicuscore.regions.create_worker": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 140}, "practicuscore.regions.create_workspace": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 100}, "practicuscore.regions.get_or_create_worker": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 98}, "practicuscore.regions.run_task": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 285, "bases": 0, "doc": 337}, "practicuscore.regions.auto_login": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 60}, "practicuscore.regions.change_password": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 45}, "practicuscore.regions.get_access_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 35}, "practicuscore.regions.get_refresh_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 35}, "practicuscore.regions.get_refresh_and_access_token": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 38}, "practicuscore.regions.get_workspace_credentials": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 90}, "practicuscore.models": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 285}, "practicuscore.models.ModelConfig": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 309}, "practicuscore.models.deploy": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 304}, "practicuscore.models.get_session_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 230}, "practicuscore.models.load_config": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 173}, "practicuscore.models.get_mlflow_data_type": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 67, "bases": 0, "doc": 173}, "practicuscore.models.get_model_signature": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 79, "bases": 0, "doc": 204}, "practicuscore.models.get_model_signature_json": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 150}, "practicuscore.models.create_model_config": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 210, "bases": 0, "doc": 303}, "practicuscore.models.zip": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 190}, "practicuscore.models.unzip": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 116}, "practicuscore.models.get_list": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 118}, "practicuscore.models.get_deployment_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 118}, "practicuscore.models.get_prefix_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 110}, "practicuscore.apps": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 587}, "practicuscore.apps.api": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 46}, "practicuscore.apps.deploy": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 283, "bases": 0, "doc": 520}, "practicuscore.apps.get_session_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 217}, "practicuscore.apps.test_app": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 49, "bases": 0, "doc": 180}, "practicuscore.apps.delete": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 213}, "practicuscore.apps.delete_version": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 97, "bases": 0, "doc": 250}, "practicuscore.apps.get_list": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 119}, "practicuscore.apps.get_prefix_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 102}, "practicuscore.apps.get_deployment_setting_list": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 123}, "practicuscore.apps.test_api": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 127}, "practicuscore.apps.prepare_db": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 149}, "practicuscore.apps.remove_db": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 156}, "practicuscore.apps.secure_page": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 280, "bases": 0, "doc": 247}, "practicuscore.apps.get_user_id": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 191}, "practicuscore.apps.get_username": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 160}, "practicuscore.apps.get_user_email": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 153}, "practicuscore.apps.get_user_groups": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 203}, "practicuscore.apps.user_is_admin": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 123}, "practicuscore.apps.get_app_id": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 108}, "practicuscore.apps.get_app_prefix": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 99}, "practicuscore.apps.get_app_name": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 99}, "practicuscore.apps.get_app_version": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 99}, "practicuscore.apps.development_mode": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 129}, "practicuscore.apps.set_cookie": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 132}, "practicuscore.apps.get_cookie": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 170}, "practicuscore.apps.delete_cookie": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 101}, "practicuscore.workflows": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 498}, "practicuscore.workflows.deploy": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 222}, "practicuscore.workflows.get_airflow_params": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 117}, "practicuscore.workflows.run_airflow_task": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 100}, "practicuscore.workflows.get_dag_info": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 165}, "practicuscore.workflows.generate_files": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 308, "bases": 0, "doc": 446}, "practicuscore.workflows.test_tasks": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 262, "bases": 0, "doc": 338}, "practicuscore.connections": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 567}, "practicuscore.connections.UploadS3Conf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 185}, "practicuscore.connections.ConnConfFactory": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "practicuscore.connections.ConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 6}, "practicuscore.connections.S3ConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 17}, "practicuscore.connections.SqLiteConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.MYSQLConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.PostgreSQLConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.RedshiftConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 6}, "practicuscore.connections.SnowflakeConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.MSSQLConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 7}, "practicuscore.connections.OracleConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 8}, "practicuscore.connections.HiveConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.ClouderaConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.AthenaConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 6}, "practicuscore.connections.ElasticSearchConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.OpenSearchConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.TrinoConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.DremioConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.HanaConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 6}, "practicuscore.connections.TeradataConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.Db2ConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 6}, "practicuscore.connections.DynamoDBConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 6}, "practicuscore.connections.CockroachDBConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 5}, "practicuscore.connections.CustomDBConnConf": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 7}, "practicuscore.connections.upload_to_s3": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 129}, "practicuscore.connections.get_all": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 180}, "practicuscore.connections.get": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 240}, "practicuscore.connections.create": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 324}, "practicuscore.connections.update": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 89, "bases": 0, "doc": 313}, "practicuscore.distributed": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 391}, "practicuscore.distributed.JobType": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 8, "signature": 0, "bases": 0, "doc": 16}, "practicuscore.distributed.JobConfig": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 10}, "practicuscore.distributed.wait_for_start": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 106, "bases": 0, "doc": 183}, "practicuscore.distributed.wait_for_running": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 165}, "practicuscore.distributed.live_view": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 153}, "practicuscore.distributed.view_log": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 150}, "practicuscore.distributed.get_client": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 117, "bases": 0, "doc": 201}, "practicuscore.distributed.open_dashboard": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 72, "bases": 0, "doc": 202}, "practicuscore.distributed.get_job_id": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 166}, "practicuscore.distributed.get_job_rank": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 225}, "practicuscore.distributed.get_gpu_count": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 106}, "practicuscore.distributed.running_on_a_cluster": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 126}, "practicuscore.distributed.is_coordinator": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 128}, "practicuscore.distributed.is_agent": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 111}, "practicuscore.distributed.validate_job_dir": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 168}, "practicuscore.auth": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 356}, "practicuscore.auth.set_default_region": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 86}, "practicuscore.auth.login": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 246, "bases": 0, "doc": 442}, "practicuscore.auth.logout": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 93}, "practicuscore.auth.auto_login": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 60}, "practicuscore.auth.change_password": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 45}, "practicuscore.auth.get_workspace_credentials": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 90}, "practicuscore.auth.get_access_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 35}, "practicuscore.auth.get_refresh_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 35}, "practicuscore.auth.get_refresh_and_access_token": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 38}, "practicuscore.engines": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 338}, "practicuscore.engines.get_spark_session": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 290}, "practicuscore.engines.delete_spark_session": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 106}, "practicuscore.experiments": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 344}, "practicuscore.experiments.configure": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 81, "bases": 0, "doc": 461}, "practicuscore.notebooks": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 412}, "practicuscore.notebooks.default_output_folder": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.notebooks.default_failed_output_folder": {"qualname": 5, "fullname": 6, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.notebooks.successful_notebooks": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.notebooks.failed_notebooks": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 1, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.notebooks.configure": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 258}, "practicuscore.notebooks.reset_history": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 68}, "practicuscore.notebooks.view_history": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 98}, "practicuscore.notebooks.validate_history": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 97}, "practicuscore.notebooks.get_venv_name": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 107}, "practicuscore.notebooks.validate_venv": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 123}, "practicuscore.notebooks.execute_notebook": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 153, "bases": 0, "doc": 395}, "practicuscore.notebooks.find_notebooks": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 123}, "practicuscore.notebooks.execute_notebooks": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 315}, "practicuscore.quality": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 238}, "practicuscore.quality.check": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 142, "bases": 0, "doc": 223}, "practicuscore.quality.format": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 121, "bases": 0, "doc": 167}, "practicuscore.containers": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 225}, "practicuscore.containers.build_image": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 205, "bases": 0, "doc": 532}, "practicuscore.containers.update_build_config": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 388}, "practicuscore.vault": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 216}, "practicuscore.vault.create_or_update_secret": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 58}, "practicuscore.vault.get_secret": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 211}, "practicuscore.vault.delete_secret": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 44}, "practicuscore.git": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 132}, "practicuscore.git.sync_repo": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 47}, "practicuscore.git.clone_repo": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 37}, "practicuscore.git.pull_repo": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 26}, "practicuscore.mq": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 452}, "practicuscore.mq.consumer": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 131}, "practicuscore.mq.connect": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 9}, "practicuscore.mq.publish": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 10}, "practicuscore.mq.analyze": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 33}, "practicuscore.mq.test_consumer": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 112}, "practicuscore.mq.apply_topology": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 47}, "practicuscore.mq.export_topology": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 179, "bases": 0, "doc": 166}, "practicuscore.notify": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "practicuscore.notify.Notification": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 14}, "practicuscore.notify.send": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 342, "bases": 0, "doc": 466}, "practicuscore.db": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 128}, "practicuscore.db.init": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 273}, "practicuscore.db.revision": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 82}, "practicuscore.db.upgrade": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 115}, "practicuscore.db.upsert_static_data": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 91}, "practicuscore.addons": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "practicuscore.addons.get_session_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 219}, "practicuscore.addons.get_list": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 116}, "practicuscore.Region": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 556}, "practicuscore.Region.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 113, "bases": 0, "doc": 99}, "practicuscore.Region.logger": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 9}, "practicuscore.Region.url": {"qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "practicuscore.Region.email": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "practicuscore.Region.username": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.Region.refresh_token": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.Region.get_csv_header": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "practicuscore.Region.host_dns": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 71}, "practicuscore.Region.key": {"qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 75}, "practicuscore.Region.is_default": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 84}, "practicuscore.Region.console_client": {"qualname": 3, "fullname": 4, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "practicuscore.Region.worker_list": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 119}, "practicuscore.Region.reload_worker_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 98}, "practicuscore.Region.get_default_worker_size": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 96}, "practicuscore.Region.get_default_worker_image": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 119}, "practicuscore.Region.create_worker": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 185}, "practicuscore.Region.create_workspace": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 82, "bases": 0, "doc": 137}, "practicuscore.Region.get_local_worker": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 119}, "practicuscore.Region.get_or_create_worker": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 114, "bases": 0, "doc": 160}, "practicuscore.Region.model_prefix_list": {"qualname": 4, "fullname": 5, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 110}, "practicuscore.Region.model_list": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 118}, "practicuscore.Region.app_list": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 119}, "practicuscore.Region.app_prefix_list": {"qualname": 4, "fullname": 5, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 102}, "practicuscore.Region.reload_model_prefix_list": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 62}, "practicuscore.Region.reload_model_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 55}, "practicuscore.Region.reload_app_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 54}, "practicuscore.Region.reload_app_prefix_list": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 44}, "practicuscore.Region.model_deployment_list": {"qualname": 4, "fullname": 5, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 118}, "practicuscore.Region.app_deployment_setting_list": {"qualname": 5, "fullname": 6, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 123}, "practicuscore.Region.reload_model_deployment_list": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 56}, "practicuscore.Region.reload_app_deployment_setting_list": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 46}, "practicuscore.Region.deploy_model": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 93, "bases": 0, "doc": 180}, "practicuscore.Region.deploy_app": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 273, "bases": 0, "doc": 259}, "practicuscore.Region.delete_app": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 137}, "practicuscore.Region.delete_app_version": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 150}, "practicuscore.Region.prepare_app_db": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 175}, "practicuscore.Region.remove_app_db": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 153}, "practicuscore.Region.deploy_workflow": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 98, "bases": 0, "doc": 166}, "practicuscore.Region.logout": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 57}, "practicuscore.Region.set_default": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 67}, "practicuscore.Region.run_task": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 291, "bases": 0, "doc": 420}, "practicuscore.Region.get_model_api_session_token": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 180}, "practicuscore.Region.get_app_api_session_token": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 94, "bases": 0, "doc": 196}, "practicuscore.Region.addon_list": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 116}, "practicuscore.Region.reload_addon_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 58}, "practicuscore.Region.get_addon": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 160}, "practicuscore.Region.open_addon": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 80}, "practicuscore.Region.get_addon_session_token": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 219}, "practicuscore.Region.get_worker": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 100}, "practicuscore.Region.get_connection": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 43, "bases": 0, "doc": 154}, "practicuscore.Region.remove_worker_from_cache": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 100}, "practicuscore.Region.terminate_worker": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 187}, "practicuscore.Region.get_groups": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 88}, "practicuscore.Region.terminate_all_workers": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 62}, "practicuscore.Region.connection_list": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 115}, "practicuscore.Region.reload_connection_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 54}, "practicuscore.Region.create_connection": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 309}, "practicuscore.Region.update_connection": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 95, "bases": 0, "doc": 300}, "practicuscore.Region.create_or_update_secret": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 58}, "practicuscore.Region.get_secret": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 211}, "practicuscore.Region.delete_secret": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 44}, "practicuscore.Region.worker_size_list": {"qualname": 4, "fullname": 5, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 112}, "practicuscore.Region.reload_worker_size_list": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 59}, "practicuscore.Region.worker_image_list": {"qualname": 4, "fullname": 5, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 119}, "practicuscore.Region.reload_worker_image_list": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 59}, "practicuscore.Region.get_access_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 89}, "practicuscore.Region.get_refresh_token": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 89}, "practicuscore.Region.get_refresh_and_access_token": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 80}, "practicuscore.Region.get_workspace_credentials": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 130}, "practicuscore.Region.recreate_model_deployment": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 87}, "practicuscore.Region.change_password": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 121}, "practicuscore.Region.get_ai_assistants": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 60}, "practicuscore.Worker": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 302}, "practicuscore.Worker.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 71}, "practicuscore.Worker.logger": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 9}, "practicuscore.Worker.region": {"qualname": 2, "fullname": 3, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "practicuscore.Worker.create_model_response": {"qualname": 4, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "practicuscore.Worker.async_op_issue_list": {"qualname": 5, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "practicuscore.Worker.async_op_issue_history_list": {"qualname": 6, "fullname": 7, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "practicuscore.Worker.get_csv_header": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "practicuscore.Worker.service_type": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "practicuscore.Worker.instance_id": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "practicuscore.Worker.server_name": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 38}, "practicuscore.Worker.server_addr": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 38}, "practicuscore.Worker.server_addr_fqdn": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 42}, "practicuscore.Worker.image": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "practicuscore.Worker.image_id": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 37}, "practicuscore.Worker.creation_time": {"qualname": 3, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "practicuscore.Worker.name": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "practicuscore.Worker.size": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "practicuscore.Worker.total_mem_gb": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "practicuscore.Worker.cpu": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "practicuscore.Worker.gpu": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "practicuscore.Worker.status": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "practicuscore.Worker.ready": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 42}, "practicuscore.Worker.job_id": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 40}, "practicuscore.Worker.terminating": {"qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 40}, "practicuscore.Worker.assign_node": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 32, "bases": 0, "doc": 59}, "practicuscore.Worker.local_worker_factory": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 65, "bases": 0, "doc": 84}, "practicuscore.Worker.terminate": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 60}, "practicuscore.Worker.load": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 103}, "practicuscore.Worker.upload_files": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 71, "bases": 0, "doc": 169}, "practicuscore.Worker.download_files": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 102}, "practicuscore.Worker.run_task": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 74, "bases": 0, "doc": 161}, "practicuscore.Worker.check_task": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 141}, "practicuscore.Worker.proc_list": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "practicuscore.Worker.remove_proc_from_cache": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 64}, "practicuscore.Worker.kill_proc": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 73}, "practicuscore.Worker.kill_all_procs": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 39}, "practicuscore.Worker.open_notebook": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 152}, "practicuscore.Worker.open_vscode": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 192}, "practicuscore.Worker.open_workspace": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 129}, "practicuscore.Worker.get_workspace_credentials": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 97}, "practicuscore.Worker.ping": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 136}, "practicuscore.Worker.wait_until_ready": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 144}, "practicuscore.Worker.get_logs": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 39, "bases": 0, "doc": 140}, "practicuscore.Worker.view_logs": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 82}, "practicuscore.Process": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 363}, "practicuscore.Process.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 48, "bases": 0, "doc": 53}, "practicuscore.Process.logger": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 5}, "practicuscore.Process.worker": {"qualname": 2, "fullname": 3, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "practicuscore.Process.ws": {"qualname": 2, "fullname": 3, "annotation": 6, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.Process.wsm": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "practicuscore.Process.async_op_issue_list": {"qualname": 5, "fullname": 6, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.Process.alive": {"qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.Process.get_csv_header": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 40}, "practicuscore.Process.proc_id": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 32}, "practicuscore.Process.os_pid": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "practicuscore.Process.conn_conf": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "practicuscore.Process.conn_info": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 37}, "practicuscore.Process.worker_name": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "practicuscore.Process.run_step": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 57}, "practicuscore.Process.get_eng": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 8}, "practicuscore.Process.show_recorded_steps": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 13}, "practicuscore.Process.delete_recorded_steps": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 17}, "practicuscore.Process.reset_recorded_steps": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 11}, "practicuscore.Process.run_recorded_steps": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 10}, "practicuscore.Process.save_ws": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 18}, "practicuscore.Process.get_ws_activity_log": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 14}, "practicuscore.Process.show_logs": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 41}, "practicuscore.Process.show_issues": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 39}, "practicuscore.Process.is_local_practicus_svc_active": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 11}, "practicuscore.Process.my_k8s_worker": {"qualname": 4, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "practicuscore.Process.my_k8s_region": {"qualname": 4, "fullname": 5, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "practicuscore.Process.get_model_api_session_token": {"qualname": 6, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 15}, "practicuscore.Process.get_file_path_in_caller_stack": {"qualname": 7, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 15}, "practicuscore.Process.show_head": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 38}, "practicuscore.Process.load": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 60}, "practicuscore.Process.save": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 38, "bases": 0, "doc": 54}, "practicuscore.Process.delete_columns": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 9}, "practicuscore.Process.rename_column": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 12}, "practicuscore.Process.rename_columns": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 17}, "practicuscore.Process.change_column_type": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 11}, "practicuscore.Process.filter": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 13}, "practicuscore.Process.one_hot": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 13}, "practicuscore.Process.categorical_map": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 15}, "practicuscore.Process.split_column": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 16}, "practicuscore.Process.handle_missing": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 18}, "practicuscore.Process.sort_column": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 14}, "practicuscore.Process.group_by_column": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 13}, "practicuscore.Process.time_sample": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 59, "bases": 0, "doc": 19}, "practicuscore.Process.update_values": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 17}, "practicuscore.Process.run_formula": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 15}, "practicuscore.Process.run_custom_code": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 17, "bases": 0, "doc": 37}, "practicuscore.Process.run_snippet": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 53}, "practicuscore.Process.run_custom_sql": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 21}, "practicuscore.Process.build_model": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 80}, "practicuscore.Process.register_model": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 18}, "practicuscore.Process.find_model": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 58}, "practicuscore.Process.predict": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 207, "bases": 0, "doc": 152}, "practicuscore.Process.predict_with_offline_model": {"qualname": 5, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 196, "bases": 0, "doc": 132}, "practicuscore.Process.join": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 116, "bases": 0, "doc": 132}, "practicuscore.Process.wait_until_done": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 43}, "practicuscore.Process.get_df_copy": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 65}, "practicuscore.Process.kill": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 60}, "practicuscore.get_logger": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 190}, "practicuscore.Log": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 20}, "practicuscore.Log.CORE": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.SDK": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.REGION": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.WORKER": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.PROCESS": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.CLI": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.WEB_SOCKET": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 12, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.ENGINES": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.AIRFLOW": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.APPS": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.GEN_AI": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 13, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.TEST": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.NOTEBOOKS": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.DISTRIBUTED": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.CONTAINERS": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.GIT": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.MQ": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.NOTIFY": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.DB": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.Log.ADDONS": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 11, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.set_logging_level": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 326}, "practicuscore.WorkerConfig": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 79}, "practicuscore.WorkerConfig.worker_image": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 85}, "practicuscore.WorkerConfig.worker_size": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "practicuscore.WorkerConfig.service_type": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "practicuscore.WorkerConfig.network_protocol": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "practicuscore.WorkerConfig.distributed_config": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "practicuscore.WorkerConfig.image_config": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "practicuscore.WorkerConfig.startup_script": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 50}, "practicuscore.WorkerConfig.log_level": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "practicuscore.WorkerConfig.modules_log_level": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "practicuscore.WorkerConfig.interactive": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "practicuscore.WorkerConfig.service_url": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 33}, "practicuscore.WorkerConfig.email": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "practicuscore.WorkerConfig.refresh_token": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "practicuscore.WorkerConfig.env_variables": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "practicuscore.WorkerConfig.personal_secrets": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "practicuscore.WorkerConfig.shared_secrets": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 12}, "practicuscore.WorkerConfig.git_configs": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.WorkerConfig.validate_service_type": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "practicuscore.WorkerConfig.validate_network_protocol": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "practicuscore.WorkerConfig.validate_model": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "practicuscore.WorkerConfig.model_config": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.WorkerConfig.model_validate": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 60}, "practicuscore.WorkerConfig.model_validate_json": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 79}, "practicuscore.WorkerConfig.model_dump": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 213}, "practicuscore.WorkerConfig.model_dump_json": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 41, "bases": 0, "doc": 74}, "practicuscore.ImageConfig": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 148}, "practicuscore.ImageConfig.repo_username": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "practicuscore.ImageConfig.repo_password": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "practicuscore.ImageConfig.repo_secret_name": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 27}, "practicuscore.ImageConfig.pull_policy": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "practicuscore.ImageConfig.builder": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "practicuscore.ImageConfig.builder_capacity": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "practicuscore.ImageConfig.custom_builder_url": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 37}, "practicuscore.ImageConfig.validate_pull_policy": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "practicuscore.ImageConfig.validate_builder_capacity": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 3}, "practicuscore.ImageConfig.validate_model": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 55}, "practicuscore.ImageConfig.model_config": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.DistJobType": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 179}, "practicuscore.DistJobType.python": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.torch": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.deepspeed": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.fairscale": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.horovod": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.spark": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.dask": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.ray": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.custom": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "practicuscore.DistJobType.from_value": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 3}, "practicuscore.DistJobConfig": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 161}, "practicuscore.DistJobConfig.__init__": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 56}, "practicuscore.DistJobConfig.job_type": {"qualname": 3, "fullname": 4, "annotation": 5, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "practicuscore.DistJobConfig.job_dir": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "practicuscore.DistJobConfig.auto_distributed": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "practicuscore.DistJobConfig.worker_count": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "practicuscore.DistJobConfig.initial_count": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "practicuscore.DistJobConfig.max_count": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "practicuscore.DistJobConfig.coordinator_port": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "practicuscore.DistJobConfig.additional_ports": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "practicuscore.DistJobConfig.custom_adaptor": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "practicuscore.DistJobConfig.terminate_on_completion": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "practicuscore.DistJobConfig.capture_script_output": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"qualname": 5, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "practicuscore.DistJobConfig.retries": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.DistJobConfig.sleep_between_retries": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "practicuscore.DistJobConfig.py_file": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "practicuscore.DistJobConfig.py_venv_name": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 21}, "practicuscore.DistJobConfig.log_in_run_dir": {"qualname": 5, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "practicuscore.DistJobConfig.measure_utilization": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "practicuscore.DistJobConfig.measure_utilization_interval": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "practicuscore.DistJobConfig.coordinator_is_worker": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "practicuscore.DistJobConfig.processes": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 23}, "practicuscore.DistJobConfig.threads": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "practicuscore.DistJobConfig.memory_gb": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 22}, "practicuscore.DistJobConfig.executors": {"qualname": 2, "fullname": 3, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.DistJobConfig.validate_model": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "practicuscore.DistJobConfig.model_config": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.GitConfig": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 11}, "practicuscore.GitConfig.remote_url": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "practicuscore.GitConfig.secret_name": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.GitConfig.save_secret": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "practicuscore.GitConfig.username": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "practicuscore.GitConfig.local_path": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "practicuscore.GitConfig.branch": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 17}, "practicuscore.GitConfig.sparse_checkout_folders": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "practicuscore.GitConfig.fetch_depth": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "practicuscore.GitConfig.model_config": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.MQConfig": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 96}, "practicuscore.MQConfig.conn_str": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "practicuscore.MQConfig.queue": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "practicuscore.MQConfig.exchange": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 20}, "practicuscore.MQConfig.exchange_type": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "practicuscore.MQConfig.queue_ttl": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 28}, "practicuscore.MQConfig.routing_key": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 36}, "practicuscore.MQConfig.max_retries": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "practicuscore.MQConfig.dead_letter_exchange": {"qualname": 4, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "practicuscore.MQConfig.dead_letter_routing_key": {"qualname": 5, "fullname": 6, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "practicuscore.MQConfig.headers": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "practicuscore.MQConfig.verify_delivery": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 60}, "practicuscore.MQConfig.prefetch_count": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.MQConfig.user_name": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "practicuscore.MQConfig.password": {"qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "practicuscore.MQConfig.host": {"qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "practicuscore.MQConfig.vhost": {"qualname": 2, "fullname": 3, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "practicuscore.MQConfig.model_config": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.PrtList": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 137}, "practicuscore.PrtList.read_only": {"qualname": 3, "fullname": 4, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "practicuscore.PrtList.to_pandas": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 35}, "practicuscore.PrtList.to_json": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 66}, "practicuscore.PrtList.to_dict_list": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 36}, "practicuscore.APIExecutionTarget": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 20}, "practicuscore.APIExecutionTarget.DirectExecution": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 16}, "practicuscore.APIExecutionTarget.AIAgent": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 10}, "practicuscore.APIExecutionTarget.HumanWorker": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 13}, "practicuscore.APIExecutionTarget.RPABot": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 11}, "practicuscore.APIExecutionTarget.RemoteService": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 12}, "practicuscore.APIRiskProfile": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 16}, "practicuscore.APIRiskProfile.Low": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 20}, "practicuscore.APIRiskProfile.Medium": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.APIRiskProfile.High": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.APIScope": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 14}, "practicuscore.APIScope.AppOnly": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 11}, "practicuscore.APIScope.TeamWide": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.APIScope.CompanyWide": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.APIScope.PartnerExternal": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 12}, "practicuscore.APIScope.Public": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 1, "signature": 0, "bases": 0, "doc": 10}, "practicuscore.APISpec": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 24}, "practicuscore.APISpec.execution_target": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "practicuscore.APISpec.read_only": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "practicuscore.APISpec.scope": {"qualname": 2, "fullname": 3, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 14}, "practicuscore.APISpec.risk_profile": {"qualname": 3, "fullname": 4, "annotation": 7, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "practicuscore.APISpec.human_gated": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 19}, "practicuscore.APISpec.deterministic": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "practicuscore.APISpec.idempotent": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "practicuscore.APISpec.stateful": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 24}, "practicuscore.APISpec.asynchronous": {"qualname": 2, "fullname": 3, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "practicuscore.APISpec.maturity_level": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "practicuscore.APISpec.disable_authentication": {"qualname": 3, "fullname": 4, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 29}, "practicuscore.APISpec.custom_attributes": {"qualname": 3, "fullname": 4, "annotation": 11, "default_value": 0, "signature": 0, "bases": 0, "doc": 100}, "practicuscore.APISpec.validate_custom_attributes": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "practicuscore.APISpec.validate_model": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 3}, "practicuscore.APISpec.model_config": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 7, "signature": 0, "bases": 0, "doc": 18}, "practicuscore.get_default_region": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 45}, "practicuscore.create_worker": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 140}, "practicuscore.current_region": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 52}, "practicuscore.get_local_worker": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 55}, "practicuscore.get_or_create_worker": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 98}, "practicuscore.running_on_a_worker": {"qualname": 4, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 64}, "practicuscore.get_region": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 61, "bases": 0, "doc": 171}, "practicuscore.get_region_list": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 56}, "practicuscore.region_factory": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 68, "bases": 0, "doc": 111}, "practicuscore.set_default_region": {"qualname": 3, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 86}, "practicuscore.create_workspace": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 100}, "practicuscore.run_task": {"qualname": 2, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 285, "bases": 0, "doc": 337}, "practicuscore.api": {"qualname": 1, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 46}}, "length": 534, "save": true}, "index": {"qualname": {"root": {"docs": {"practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 89, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}}, "df": 21}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.register_model": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 8}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.GitConfig.remote_url": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.RedshiftConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.create_model_response": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}}, "df": 6}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.db.revision": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}}, "df": 11}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}}, "df": 2, "y": {"docs": {"practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 12, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.distributed.get_job_rank": {"tf": 1}}, "df": 1}}, "y": {"docs": {"practicuscore.DistJobType.ray": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget.RPABot": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 4, "e": {"docs": {"practicuscore.Process.one_hot": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.OracleConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.OpenSearchConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {"practicuscore.Process.os_pid": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}}, "df": 3}, "h": {"docs": {"practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Process.get_ws_activity_log": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq.analyze": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 17, "s": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}}, "df": 28}, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APIScope.AppOnly": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 4}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIScope": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}, "practicuscore.APIScope.PartnerExternal": {"tf": 1}, "practicuscore.APIScope.Public": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 16}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.user_is_admin": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.addons": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}}, "df": 4}}}, "r": {"docs": {"practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.AthenaConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.connections.get_all": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.alive": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.is_agent": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.get_ai_assistants": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.APISpec.asynchronous": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 75, "s": {"docs": {"practicuscore.Region.terminate_all_workers": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 27}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 8}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.Region.deploy_workflow": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 7}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}}, "df": 3, "m": {"docs": {"practicuscore.Process.wsm": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.Log.WEB_SOCKET": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.Log.CORE": {"tf": 1}, "practicuscore.Log.SDK": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}, "practicuscore.Log.CLI": {"tf": 1}, "practicuscore.Log.WEB_SOCKET": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}}, "df": 26, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.load_config": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}}, "df": 3}}, "w": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 36}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 79}, "n": {"docs": {"practicuscore.Log.GEN_AI": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.group_by_column": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}}, "df": 10}}}}}}}}, "b": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 11}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}}, "df": 6, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 7}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.development_mode": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobType.deepspeed": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APISpec.deterministic": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 2}}, "g": {"docs": {"practicuscore.workflows.get_dag_info": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed.open_dashboard": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {"practicuscore.DistJobType.dask": {"tf": 1}}, "df": 1}}}, "b": {"2": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.Db2ConnConf": {"tf": 1}}, "df": 1}}}}}}}}}, "docs": {"practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}}, "df": 10}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.DremioConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.DynamoDBConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}}, "df": 19}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobType.python": {"tf": 1}, "practicuscore.DistJobType.torch": {"tf": 1}, "practicuscore.DistJobType.deepspeed": {"tf": 1}, "practicuscore.DistJobType.fairscale": {"tf": 1}, "practicuscore.DistJobType.horovod": {"tf": 1}, "practicuscore.DistJobType.spark": {"tf": 1}, "practicuscore.DistJobType.dask": {"tf": 1}, "practicuscore.DistJobType.ray": {"tf": 1}, "practicuscore.DistJobType.custom": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}}, "df": 11}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}}, "df": 29}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.host_dns": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Worker.download_files": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.wait_until_done": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.current_region": {"tf": 1}, "practicuscore.current_region": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.DistJobType.custom": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.CustomDBConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 15}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.creation_time": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}}, "df": 4}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.change_password": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.quality.check": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.Process.conn_conf": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 11, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.WorkerConfig.git_configs": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.connect": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}}, "df": 30}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.ConnConf": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections.ConnConfFactory": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.console_client": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.CockroachDBConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.run_custom_code": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Log.CORE": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.ClouderaConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.git.clone_repo": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"practicuscore.Log.CLI": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.running_on_a_cluster": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Process.categorical_map": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore.Worker.cpu": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.notebooks.failed_notebooks": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType.fairscale": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.filter": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.quality.format": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.Process.run_formula": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}}, "df": 3}}}, "q": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.server_addr_fqdn": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 1}}}}}, "s": {"3": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.S3ConnConf": {"tf": 1}}, "df": 1}}}}}}}}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}}, "df": 9}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}}, "df": 9, "s": {"docs": {"practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}}, "df": 2}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Process.run_custom_sql": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.SqLiteConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.SnowflakeConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.run_snippet": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Worker.status": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APISpec.stateful": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.run_step": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}}, "df": 4}}}, "r": {"docs": {"practicuscore.MQConfig.conn_str": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.DistJobType.spark": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.split_column": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.notebooks.successful_notebooks": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.shared_secrets": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.time_sample": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.sort_column": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Log.WEB_SOCKET": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.Log.SDK": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.scope": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 6, "s": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APISpec.execution_target": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 4, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 18}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.DistJobType.torch": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.TeradataConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.terminating": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIScope.TeamWide": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.TrinoConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.threads": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.MQConfig.queue_ttl": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.change_password": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}}, "df": 5}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.PrtList.to_pandas": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}}, "df": 7}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.Worker.kill_all_procs": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}}, "df": 59, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.processes": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 5}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.PostgreSQLConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.DistJobConfig.coordinator_port": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.mq.publish": {"tf": 1}}, "df": 1}}, "c": {"docs": {"practicuscore.APIScope.Public": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.ping": {"tf": 1}}, "df": 1}}, "d": {"docs": {"practicuscore.Process.os_pid": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.WorkerConfig.personal_secrets": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobType.python": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.development_mode": {"tf": 1}}, "df": 1, "l": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 32, "s": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}}, "df": 14}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.modules_log_level": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.MYSQLConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.MSSQLConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "q": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}}, "df": 9, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}}, "df": 18}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.APIRiskProfile.Medium": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.categorical_map": {"tf": 1}}, "df": 1}, "x": {"docs": {"practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.handle_missing": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.JobConfig": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.models.unzip": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}}, "df": 5, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.get_username": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}}, "df": 2, "s": {"3": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections.update": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}}, "df": 6}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db.upgrade": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Region.url": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 2}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}}, "df": 14}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType.from_value": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.Process.update_values": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.vault": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.env_variables": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.open_vscode": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.MQConfig.vhost": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.Process.show_issues": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.init": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.DistJobConfig.initial_count": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.instance_id": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.interactive": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}}, "df": 12}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.ElasticSearchConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.get_eng": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {"practicuscore.WorkerConfig.env_variables": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.execution_target": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.notebooks.successful_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.failed_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}}, "df": 15}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notify": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notify.Notification": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.HiveConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.HanaConnConf": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.handle_missing": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.show_head": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.MQConfig.headers": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}}, "df": 2}}, "t": {"docs": {"practicuscore.Process.one_hot": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobType.horovod": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}}, "df": 1}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}}, "df": 4}}}}}}, "y": {"docs": {"practicuscore.Process.group_by_column": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.GitConfig.branch": {"tf": 1}}, "df": 1}}}}}}, "k": {"8": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}}, "df": 2}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Region.key": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 3}}}}}}, "fullname": {"root": {"docs": {"practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 4, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.notebooks.successful_notebooks": {"tf": 1}, "practicuscore.notebooks.failed_notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.Log.CORE": {"tf": 1}, "practicuscore.Log.SDK": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}, "practicuscore.Log.CLI": {"tf": 1}, "practicuscore.Log.WEB_SOCKET": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobType.python": {"tf": 1}, "practicuscore.DistJobType.torch": {"tf": 1}, "practicuscore.DistJobType.deepspeed": {"tf": 1}, "practicuscore.DistJobType.fairscale": {"tf": 1}, "practicuscore.DistJobType.horovod": {"tf": 1}, "practicuscore.DistJobType.spark": {"tf": 1}, "practicuscore.DistJobType.dask": {"tf": 1}, "practicuscore.DistJobType.ray": {"tf": 1}, "practicuscore.DistJobType.custom": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}, "practicuscore.APIScope.PartnerExternal": {"tf": 1}, "practicuscore.APIScope.Public": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 534}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}}, "df": 7}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.Worker.kill_all_procs": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}}, "df": 59, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.processes": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 5}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.change_password": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}}, "df": 5}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.PrtList.to_pandas": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.PostgreSQLConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.DistJobConfig.coordinator_port": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.mq.publish": {"tf": 1}}, "df": 1}}, "c": {"docs": {"practicuscore.APIScope.Public": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.ping": {"tf": 1}}, "df": 1}}, "d": {"docs": {"practicuscore.Process.os_pid": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.WorkerConfig.personal_secrets": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobType.python": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 89, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}}, "df": 21}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.register_model": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 8}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.GitConfig.remote_url": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.RedshiftConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.create_model_response": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}}, "df": 6}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.db.revision": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}}, "df": 11}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}}, "df": 2, "y": {"docs": {"practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 12, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 4}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.distributed.get_job_rank": {"tf": 1}}, "df": 1}}, "y": {"docs": {"practicuscore.DistJobType.ray": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget.RPABot": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 4, "e": {"docs": {"practicuscore.Process.one_hot": {"tf": 1}}, "df": 1}, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.OracleConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 5, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.OpenSearchConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {"practicuscore.Process.os_pid": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}}, "df": 3}, "h": {"docs": {"practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}}, "df": 6}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Process.get_ws_activity_log": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq.analyze": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 17, "s": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}}, "df": 28}, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APIScope.AppOnly": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}}, "df": 6}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 4}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIScope": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}, "practicuscore.APIScope.PartnerExternal": {"tf": 1}, "practicuscore.APIScope.Public": {"tf": 1}}, "df": 6}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 16}}}}}}, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.user_is_admin": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.addons": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}}, "df": 4}}}, "r": {"docs": {"practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.AthenaConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.connections.get_all": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.alive": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.is_agent": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.get_ai_assistants": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 3, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.APISpec.asynchronous": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 75, "s": {"docs": {"practicuscore.Region.terminate_all_workers": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 27}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 8}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.Region.deploy_workflow": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 7}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}}, "df": 3, "m": {"docs": {"practicuscore.Process.wsm": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.Log.WEB_SOCKET": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.Log.CORE": {"tf": 1}, "practicuscore.Log.SDK": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}, "practicuscore.Log.CLI": {"tf": 1}, "practicuscore.Log.WEB_SOCKET": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}}, "df": 26, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}}, "df": 3}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.load_config": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}}, "df": 3}}, "w": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 36}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 4}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 79}, "n": {"docs": {"practicuscore.Log.GEN_AI": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.group_by_column": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}}, "df": 10}}}}}}}}, "b": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 11}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}}, "df": 6, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 7}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}}, "df": 10}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.development_mode": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobType.deepspeed": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APISpec.deterministic": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 2}}, "g": {"docs": {"practicuscore.workflows.get_dag_info": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed.open_dashboard": {"tf": 1}}, "df": 1}}}}}}, "k": {"docs": {"practicuscore.DistJobType.dask": {"tf": 1}}, "df": 1}}}, "b": {"2": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.Db2ConnConf": {"tf": 1}}, "df": 1}}}}}}}}}, "docs": {"practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}}, "df": 10}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.DremioConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.DynamoDBConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}}, "df": 19}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobType.python": {"tf": 1}, "practicuscore.DistJobType.torch": {"tf": 1}, "practicuscore.DistJobType.deepspeed": {"tf": 1}, "practicuscore.DistJobType.fairscale": {"tf": 1}, "practicuscore.DistJobType.horovod": {"tf": 1}, "practicuscore.DistJobType.spark": {"tf": 1}, "practicuscore.DistJobType.dask": {"tf": 1}, "practicuscore.DistJobType.ray": {"tf": 1}, "practicuscore.DistJobType.custom": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}}, "df": 11}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}}, "df": 29}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.host_dns": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Worker.download_files": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.wait_until_done": {"tf": 1}}, "df": 1}}}, "f": {"docs": {"practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.current_region": {"tf": 1}, "practicuscore.current_region": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.DistJobType.custom": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}}, "df": 7, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.CustomDBConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 15}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.creation_time": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}}, "df": 4}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.change_password": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.quality.check": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.Process.conn_conf": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 11, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.WorkerConfig.git_configs": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.connect": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}}, "df": 30}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.ConnConf": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections.ConnConfFactory": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}}, "df": 4}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.console_client": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}}, "df": 3}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.CockroachDBConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.run_custom_code": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Log.CORE": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.ClouderaConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.git.clone_repo": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"practicuscore.Log.CLI": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.running_on_a_cluster": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Process.categorical_map": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore.Worker.cpu": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.notebooks.failed_notebooks": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType.fairscale": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.filter": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.quality.format": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.Process.run_formula": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}}, "df": 3}}}, "q": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.server_addr_fqdn": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 1}}}}}, "s": {"3": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.S3ConnConf": {"tf": 1}}, "df": 1}}}}}}}}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}}, "df": 9}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}}, "df": 9, "s": {"docs": {"practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}}, "df": 2}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Process.run_custom_sql": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.SqLiteConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.SnowflakeConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.run_snippet": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Worker.status": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APISpec.stateful": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.run_step": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}}, "df": 4}}}, "r": {"docs": {"practicuscore.MQConfig.conn_str": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.DistJobType.spark": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.split_column": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.notebooks.successful_notebooks": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.shared_secrets": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.time_sample": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.sort_column": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Log.WEB_SOCKET": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.Log.SDK": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.scope": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 6, "s": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APISpec.execution_target": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 4, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 18}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.DistJobType.torch": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.TeradataConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.terminating": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIScope.TeamWide": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.TrinoConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.threads": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.MQConfig.queue_ttl": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.development_mode": {"tf": 1}}, "df": 1, "l": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 32, "s": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}}, "df": 14}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.modules_log_level": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}}, "df": 2, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.MYSQLConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.MSSQLConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "q": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}}, "df": 9, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}}, "df": 18}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.APIRiskProfile.Medium": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.categorical_map": {"tf": 1}}, "df": 1}, "x": {"docs": {"practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.handle_missing": {"tf": 1}}, "df": 1}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}}, "df": 4}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.JobConfig": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.models.unzip": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}}, "df": 5, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.get_username": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}}, "df": 4}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}}, "df": 2, "s": {"3": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections.update": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}}, "df": 6}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db.upgrade": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Region.url": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}}, "df": 4}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 2}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}}, "df": 14}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType.from_value": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.Process.update_values": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.vault": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.env_variables": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.open_vscode": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.MQConfig.vhost": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {"practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 6, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.Process.show_issues": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.init": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.DistJobConfig.initial_count": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.instance_id": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.interactive": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}}, "df": 12}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.ElasticSearchConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.get_eng": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {"practicuscore.WorkerConfig.env_variables": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.execution_target": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}}, "df": 3}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}}, "df": 9}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.notebooks.successful_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.failed_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}}, "df": 15}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notify": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notify.Notification": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.HiveConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.HanaConnConf": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.handle_missing": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.show_head": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.MQConfig.headers": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}}, "df": 2}}, "t": {"docs": {"practicuscore.Process.one_hot": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobType.horovod": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}}, "df": 1}}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}}, "df": 4}}}}}}, "y": {"docs": {"practicuscore.Process.group_by_column": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.GitConfig.branch": {"tf": 1}}, "df": 1}}}}}}, "k": {"8": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}}, "df": 2}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Region.key": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 3}}}}}}, "annotation": {"root": {"docs": {"practicuscore.notebooks.default_output_folder": {"tf": 1.4142135623730951}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1.4142135623730951}, "practicuscore.notebooks.successful_notebooks": {"tf": 1}, "practicuscore.notebooks.failed_notebooks": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.email": {"tf": 1.4142135623730951}, "practicuscore.Region.username": {"tf": 1.4142135623730951}, "practicuscore.Region.refresh_token": {"tf": 1.4142135623730951}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1.4142135623730951}, "practicuscore.Worker.instance_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_name": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1.4142135623730951}, "practicuscore.Worker.image": {"tf": 1.4142135623730951}, "practicuscore.Worker.image_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.creation_time": {"tf": 1.4142135623730951}, "practicuscore.Worker.name": {"tf": 1.4142135623730951}, "practicuscore.Worker.size": {"tf": 1.4142135623730951}, "practicuscore.Worker.total_mem_gb": {"tf": 1.4142135623730951}, "practicuscore.Worker.cpu": {"tf": 1.4142135623730951}, "practicuscore.Worker.gpu": {"tf": 1.4142135623730951}, "practicuscore.Worker.status": {"tf": 1.4142135623730951}, "practicuscore.Worker.ready": {"tf": 1.4142135623730951}, "practicuscore.Worker.job_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1.4142135623730951}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_size": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.service_type": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.image_config": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.log_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.interactive": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.service_url": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.email": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.env_variables": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.git_configs": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_username": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_password": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.pull_policy": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.builder": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.worker_count": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.initial_count": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.max_count": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.retries": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.py_file": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.processes": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.threads": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.executors": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.username": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.local_path": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.branch": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.fetch_depth": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.exchange": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.exchange_type": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.queue_ttl": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.routing_key": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.max_retries": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.headers": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1.4142135623730951}, "practicuscore.APISpec.read_only": {"tf": 1.4142135623730951}, "practicuscore.APISpec.scope": {"tf": 1.4142135623730951}, "practicuscore.APISpec.risk_profile": {"tf": 1.4142135623730951}, "practicuscore.APISpec.human_gated": {"tf": 1.4142135623730951}, "practicuscore.APISpec.deterministic": {"tf": 1.4142135623730951}, "practicuscore.APISpec.idempotent": {"tf": 1.4142135623730951}, "practicuscore.APISpec.stateful": {"tf": 1.4142135623730951}, "practicuscore.APISpec.asynchronous": {"tf": 1.4142135623730951}, "practicuscore.APISpec.maturity_level": {"tf": 1.4142135623730951}, "practicuscore.APISpec.disable_authentication": {"tf": 1.4142135623730951}, "practicuscore.APISpec.custom_attributes": {"tf": 2.23606797749979}}, "df": 146, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 57}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 100}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notebooks.successful_notebooks": {"tf": 1}, "practicuscore.notebooks.failed_notebooks": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 5}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 25}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 9}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 25}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}}, "df": 12}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Worker.proc_list": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Worker.proc_list": {"tf": 1}}, "df": 1}}}}}}}, "k": {"8": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}}, "df": 8, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.console_client": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.my_k8s_worker": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.my_k8s_region": {"tf": 1}}, "df": 1}}}}}}}}, "docs": {}, "df": 0}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.console_client": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"practicuscore.Region.connection_list": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.connection_list": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.Process.conn_conf": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}}, "df": 3, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.console_client": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.create_model_response": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}}, "df": 12}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.worker_size_list": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.worker_image_list": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.ws": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"practicuscore.Process.ws": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}}, "df": 6}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.Region.model_prefix_list": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.Region.model_list": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.model_deployment_list": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 17, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APISpec.execution_target": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.scope": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.Region.app_list": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.Region.app_prefix_list": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.app_deployment_setting_list": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.addon_list": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.connection_list": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.region": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.create_model_response": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.creation_time": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.WorkerConfig.distributed_config": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobConfig.job_type": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 20}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.WorkerConfig.image_config": {"tf": 1}}, "df": 1}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.WorkerConfig.git_configs": {"tf": 1}}, "df": 1}}}}}}}}}}}, "default_value": {"root": {"docs": {"practicuscore.distributed.JobType": {"tf": 1.4142135623730951}, "practicuscore.distributed.JobConfig": {"tf": 1.4142135623730951}, "practicuscore.notebooks.successful_notebooks": {"tf": 1}, "practicuscore.notebooks.failed_notebooks": {"tf": 1}, "practicuscore.Region.logger": {"tf": 1.4142135623730951}, "practicuscore.Worker.logger": {"tf": 1.4142135623730951}, "practicuscore.Process.logger": {"tf": 1.4142135623730951}, "practicuscore.Log.CORE": {"tf": 1.4142135623730951}, "practicuscore.Log.SDK": {"tf": 1.4142135623730951}, "practicuscore.Log.REGION": {"tf": 1.4142135623730951}, "practicuscore.Log.WORKER": {"tf": 1.4142135623730951}, "practicuscore.Log.PROCESS": {"tf": 1.4142135623730951}, "practicuscore.Log.CLI": {"tf": 1.4142135623730951}, "practicuscore.Log.WEB_SOCKET": {"tf": 1.4142135623730951}, "practicuscore.Log.ENGINES": {"tf": 1.4142135623730951}, "practicuscore.Log.AIRFLOW": {"tf": 1.4142135623730951}, "practicuscore.Log.APPS": {"tf": 1.4142135623730951}, "practicuscore.Log.GEN_AI": {"tf": 1.4142135623730951}, "practicuscore.Log.TEST": {"tf": 1.4142135623730951}, "practicuscore.Log.NOTEBOOKS": {"tf": 1.4142135623730951}, "practicuscore.Log.DISTRIBUTED": {"tf": 1.4142135623730951}, "practicuscore.Log.CONTAINERS": {"tf": 1.4142135623730951}, "practicuscore.Log.GIT": {"tf": 1.4142135623730951}, "practicuscore.Log.MQ": {"tf": 1.4142135623730951}, "practicuscore.Log.NOTIFY": {"tf": 1.4142135623730951}, "practicuscore.Log.DB": {"tf": 1.4142135623730951}, "practicuscore.Log.ADDONS": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobType.python": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.torch": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.deepspeed": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.fairscale": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.horovod": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.spark": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.dask": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.ray": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.custom": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1.4142135623730951}}, "df": 42, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Log.CORE": {"tf": 1}, "practicuscore.Log.SDK": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}, "practicuscore.Log.CLI": {"tf": 1}, "practicuscore.Log.WEB_SOCKET": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}, "practicuscore.DistJobType.python": {"tf": 1}, "practicuscore.DistJobType.torch": {"tf": 1}, "practicuscore.DistJobType.deepspeed": {"tf": 1}, "practicuscore.DistJobType.fairscale": {"tf": 1}, "practicuscore.DistJobType.horovod": {"tf": 1}, "practicuscore.DistJobType.spark": {"tf": 1}, "practicuscore.DistJobType.dask": {"tf": 1}, "practicuscore.DistJobType.ray": {"tf": 1}, "practicuscore.DistJobType.custom": {"tf": 1}}, "df": 34}, "o": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Log.CORE": {"tf": 1}, "practicuscore.Log.SDK": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}, "practicuscore.Log.CLI": {"tf": 1}, "practicuscore.Log.WEB_SOCKET": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}}, "df": 20, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Log.ENGINES": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "x": {"2": {"7": {"docs": {"practicuscore.distributed.JobType": {"tf": 1.4142135623730951}, "practicuscore.distributed.JobConfig": {"tf": 1.4142135623730951}, "practicuscore.Log.CORE": {"tf": 1.4142135623730951}, "practicuscore.Log.SDK": {"tf": 1.4142135623730951}, "practicuscore.Log.REGION": {"tf": 1.4142135623730951}, "practicuscore.Log.WORKER": {"tf": 1.4142135623730951}, "practicuscore.Log.PROCESS": {"tf": 1.4142135623730951}, "practicuscore.Log.CLI": {"tf": 1.4142135623730951}, "practicuscore.Log.WEB_SOCKET": {"tf": 1.4142135623730951}, "practicuscore.Log.ENGINES": {"tf": 1.4142135623730951}, "practicuscore.Log.AIRFLOW": {"tf": 1.4142135623730951}, "practicuscore.Log.APPS": {"tf": 1.4142135623730951}, "practicuscore.Log.GEN_AI": {"tf": 1.4142135623730951}, "practicuscore.Log.TEST": {"tf": 1.4142135623730951}, "practicuscore.Log.NOTEBOOKS": {"tf": 1.4142135623730951}, "practicuscore.Log.DISTRIBUTED": {"tf": 1.4142135623730951}, "practicuscore.Log.CONTAINERS": {"tf": 1.4142135623730951}, "practicuscore.Log.GIT": {"tf": 1.4142135623730951}, "practicuscore.Log.MQ": {"tf": 1.4142135623730951}, "practicuscore.Log.NOTIFY": {"tf": 1.4142135623730951}, "practicuscore.Log.DB": {"tf": 1.4142135623730951}, "practicuscore.Log.ADDONS": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.python": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.torch": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.deepspeed": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.fairscale": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.horovod": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.spark": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.dask": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.ray": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.custom": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.APISpec.model_config": {"tf": 1.4142135623730951}}, "df": 34}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.DistJobType.python": {"tf": 1}, "practicuscore.DistJobType.torch": {"tf": 1}, "practicuscore.DistJobType.deepspeed": {"tf": 1}, "practicuscore.DistJobType.fairscale": {"tf": 1}, "practicuscore.DistJobType.horovod": {"tf": 1}, "practicuscore.DistJobType.spark": {"tf": 1}, "practicuscore.DistJobType.dask": {"tf": 1}, "practicuscore.DistJobType.ray": {"tf": 1}, "practicuscore.DistJobType.custom": {"tf": 1}}, "df": 10}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.JobConfig": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Log.DISTRIBUTED": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobType.deepspeed": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "b": {"docs": {"practicuscore.Log.DB": {"tf": 1.4142135623730951}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.DistJobType.dask": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Log.CORE": {"tf": 1}, "practicuscore.Log.SDK": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}, "practicuscore.Log.CLI": {"tf": 1}, "practicuscore.Log.WEB_SOCKET": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}, "practicuscore.DistJobType.python": {"tf": 1}, "practicuscore.DistJobType.torch": {"tf": 1}, "practicuscore.DistJobType.deepspeed": {"tf": 1}, "practicuscore.DistJobType.fairscale": {"tf": 1}, "practicuscore.DistJobType.horovod": {"tf": 1}, "practicuscore.DistJobType.spark": {"tf": 1}, "practicuscore.DistJobType.dask": {"tf": 1}, "practicuscore.DistJobType.ray": {"tf": 1}, "practicuscore.DistJobType.custom": {"tf": 1}}, "df": 34}, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Log.GEN_AI": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Log.GIT": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.distributed.JobConfig": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"practicuscore.Log.CLI": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Log.CORE": {"tf": 1.4142135623730951}, "practicuscore.Log.SDK": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}, "practicuscore.Log.CLI": {"tf": 1}, "practicuscore.Log.WEB_SOCKET": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}}, "df": 23}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Log.CONTAINERS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.DistJobType.custom": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Log.CORE": {"tf": 1}, "practicuscore.Log.SDK": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1}, "practicuscore.Log.CLI": {"tf": 1}, "practicuscore.Log.WEB_SOCKET": {"tf": 1}, "practicuscore.Log.ENGINES": {"tf": 1}, "practicuscore.Log.AIRFLOW": {"tf": 1}, "practicuscore.Log.APPS": {"tf": 1}, "practicuscore.Log.GEN_AI": {"tf": 1}, "practicuscore.Log.TEST": {"tf": 1}, "practicuscore.Log.NOTEBOOKS": {"tf": 1}, "practicuscore.Log.DISTRIBUTED": {"tf": 1}, "practicuscore.Log.CONTAINERS": {"tf": 1}, "practicuscore.Log.GIT": {"tf": 1}, "practicuscore.Log.MQ": {"tf": 1}, "practicuscore.Log.NOTIFY": {"tf": 1}, "practicuscore.Log.DB": {"tf": 1}, "practicuscore.Log.ADDONS": {"tf": 1}}, "df": 23, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.JobConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.logger": {"tf": 1}, "practicuscore.Log.PROCESS": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobType.python": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APIScope.Public": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"practicuscore.distributed.JobConfig": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Log.APPS": {"tf": 1.4142135623730951}}, "df": 1}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APIScope.AppOnly": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"practicuscore.Log.GEN_AI": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.Log.AIRFLOW": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Log.ADDONS": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.Log.ADDONS": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 3}}}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.JobConfig": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.default_output_folder": {"tf": 1}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Log.NOTEBOOKS": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Log.NOTIFY": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Log.REGION": {"tf": 1.4142135623730951}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.DistJobType.ray": {"tf": 1.4142135623730951}}, "df": 1}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget.RPABot": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Log.WORKER": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.Log.WEB_SOCKET": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Log.WEB_SOCKET": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.Log.SDK": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Log.WEB_SOCKET": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.DistJobType.spark": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Log.TEST": {"tf": 1.4142135623730951}}, "df": 1}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIScope.TeamWide": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 3}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.DistJobType.torch": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "q": {"docs": {"practicuscore.Log.MQ": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.APIRiskProfile.Medium": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType.fairscale": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobType.horovod": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 1}}}}}}, "signature": {"root": {"0": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}, "1": {"0": {"0": {"0": {"docs": {"practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"practicuscore.distributed.live_view": {"tf": 1}}, "df": 1}, "2": {"0": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}}, "df": 2}, "2": {"5": {"0": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 5}, "9": {"2": {"0": {"0": {"0": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"0": {"0": {"docs": {"practicuscore.Process.build_model": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 5.291502622129181}, "practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 2}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_image": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminate": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Process.save_ws": {"tf": 1.4142135623730951}, "practicuscore.Process.load": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 2}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}}, "df": 15}, "docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}}, "df": 7}, "6": {"0": {"0": {"docs": {"practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 3}, "docs": {"practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"practicuscore.regions.running_on_a_worker": {"tf": 3}, "practicuscore.regions.login": {"tf": 14.142135623730951}, "practicuscore.regions.logout": {"tf": 7.416198487095663}, "practicuscore.regions.get_region_list": {"tf": 5.477225575051661}, "practicuscore.regions.get_region": {"tf": 7.0710678118654755}, "practicuscore.regions.get_default_region": {"tf": 5.291502622129181}, "practicuscore.regions.current_region": {"tf": 5.291502622129181}, "practicuscore.regions.region_factory": {"tf": 7.3484692283495345}, "practicuscore.regions.set_default_region": {"tf": 5.291502622129181}, "practicuscore.regions.get_local_worker": {"tf": 5.291502622129181}, "practicuscore.regions.create_worker": {"tf": 9}, "practicuscore.regions.create_workspace": {"tf": 7.810249675906654}, "practicuscore.regions.get_or_create_worker": {"tf": 7.810249675906654}, "practicuscore.regions.run_task": {"tf": 14.933184523068078}, "practicuscore.regions.auto_login": {"tf": 4.123105625617661}, "practicuscore.regions.change_password": {"tf": 4.69041575982343}, "practicuscore.regions.get_access_token": {"tf": 3}, "practicuscore.regions.get_refresh_token": {"tf": 3}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 4.358898943540674}, "practicuscore.regions.get_workspace_credentials": {"tf": 5.0990195135927845}, "practicuscore.models.deploy": {"tf": 9.16515138991168}, "practicuscore.models.get_session_token": {"tf": 7.745966692414834}, "practicuscore.models.load_config": {"tf": 7}, "practicuscore.models.get_mlflow_data_type": {"tf": 7.3484692283495345}, "practicuscore.models.get_model_signature": {"tf": 8.06225774829855}, "practicuscore.models.get_model_signature_json": {"tf": 7.937253933193772}, "practicuscore.models.create_model_config": {"tf": 13.076696830622021}, "practicuscore.models.zip": {"tf": 6.164414002968976}, "practicuscore.models.unzip": {"tf": 5}, "practicuscore.models.get_list": {"tf": 5.477225575051661}, "practicuscore.models.get_deployment_list": {"tf": 5.477225575051661}, "practicuscore.models.get_prefix_list": {"tf": 5.477225575051661}, "practicuscore.apps.api": {"tf": 6.4031242374328485}, "practicuscore.apps.deploy": {"tf": 15.132745950421556}, "practicuscore.apps.get_session_token": {"tf": 8.774964387392123}, "practicuscore.apps.test_app": {"tf": 6.244997998398398}, "practicuscore.apps.delete": {"tf": 8.12403840463596}, "practicuscore.apps.delete_version": {"tf": 8.94427190999916}, "practicuscore.apps.get_list": {"tf": 5.477225575051661}, "practicuscore.apps.get_prefix_list": {"tf": 5.477225575051661}, "practicuscore.apps.get_deployment_setting_list": {"tf": 5.477225575051661}, "practicuscore.apps.test_api": {"tf": 7.874007874011811}, "practicuscore.apps.prepare_db": {"tf": 6.708203932499369}, "practicuscore.apps.remove_db": {"tf": 5.477225575051661}, "practicuscore.apps.secure_page": {"tf": 14.247806848775006}, "practicuscore.apps.get_user_id": {"tf": 3.7416573867739413}, "practicuscore.apps.get_username": {"tf": 3}, "practicuscore.apps.get_user_email": {"tf": 3}, "practicuscore.apps.get_user_groups": {"tf": 4.58257569495584}, "practicuscore.apps.user_is_admin": {"tf": 3}, "practicuscore.apps.get_app_id": {"tf": 3.7416573867739413}, "practicuscore.apps.get_app_prefix": {"tf": 3}, "practicuscore.apps.get_app_name": {"tf": 3}, "practicuscore.apps.get_app_version": {"tf": 3}, "practicuscore.apps.development_mode": {"tf": 3}, "practicuscore.apps.set_cookie": {"tf": 8.18535277187245}, "practicuscore.apps.get_cookie": {"tf": 4.58257569495584}, "practicuscore.apps.delete_cookie": {"tf": 3.7416573867739413}, "practicuscore.workflows.deploy": {"tf": 7.681145747868608}, "practicuscore.workflows.get_airflow_params": {"tf": 3}, "practicuscore.workflows.run_airflow_task": {"tf": 3.4641016151377544}, "practicuscore.workflows.get_dag_info": {"tf": 5.0990195135927845}, "practicuscore.workflows.generate_files": {"tf": 15.362291495737216}, "practicuscore.workflows.test_tasks": {"tf": 14.2828568570857}, "practicuscore.connections.upload_to_s3": {"tf": 4.69041575982343}, "practicuscore.connections.get_all": {"tf": 5.477225575051661}, "practicuscore.connections.get": {"tf": 5.385164807134504}, "practicuscore.connections.create": {"tf": 7.937253933193772}, "practicuscore.connections.update": {"tf": 8.366600265340756}, "practicuscore.distributed.wait_for_start": {"tf": 9.219544457292887}, "practicuscore.distributed.wait_for_running": {"tf": 8.717797887081348}, "practicuscore.distributed.live_view": {"tf": 8.717797887081348}, "practicuscore.distributed.view_log": {"tf": 8.12403840463596}, "practicuscore.distributed.get_client": {"tf": 9.695359714832659}, "practicuscore.distributed.open_dashboard": {"tf": 7.54983443527075}, "practicuscore.distributed.get_job_id": {"tf": 3.7416573867739413}, "practicuscore.distributed.get_job_rank": {"tf": 3.7416573867739413}, "practicuscore.distributed.get_gpu_count": {"tf": 3}, "practicuscore.distributed.running_on_a_cluster": {"tf": 3}, "practicuscore.distributed.is_coordinator": {"tf": 3}, "practicuscore.distributed.is_agent": {"tf": 3}, "practicuscore.distributed.validate_job_dir": {"tf": 3.7416573867739413}, "practicuscore.auth.set_default_region": {"tf": 5.291502622129181}, "practicuscore.auth.login": {"tf": 14.142135623730951}, "practicuscore.auth.logout": {"tf": 7.416198487095663}, "practicuscore.auth.auto_login": {"tf": 4.123105625617661}, "practicuscore.auth.change_password": {"tf": 4.69041575982343}, "practicuscore.auth.get_workspace_credentials": {"tf": 5.0990195135927845}, "practicuscore.auth.get_access_token": {"tf": 3}, "practicuscore.auth.get_refresh_token": {"tf": 3}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 4.358898943540674}, "practicuscore.engines.get_spark_session": {"tf": 9.16515138991168}, "practicuscore.engines.delete_spark_session": {"tf": 4.242640687119285}, "practicuscore.experiments.configure": {"tf": 8.12403840463596}, "practicuscore.notebooks.configure": {"tf": 8}, "practicuscore.notebooks.reset_history": {"tf": 2.6457513110645907}, "practicuscore.notebooks.view_history": {"tf": 2.6457513110645907}, "practicuscore.notebooks.validate_history": {"tf": 2.6457513110645907}, "practicuscore.notebooks.get_venv_name": {"tf": 2.6457513110645907}, "practicuscore.notebooks.validate_venv": {"tf": 3.7416573867739413}, "practicuscore.notebooks.execute_notebook": {"tf": 11.045361017187261}, "practicuscore.notebooks.find_notebooks": {"tf": 6.708203932499369}, "practicuscore.notebooks.execute_notebooks": {"tf": 7.745966692414834}, "practicuscore.quality.check": {"tf": 10.862780491200215}, "practicuscore.quality.format": {"tf": 10.04987562112089}, "practicuscore.containers.build_image": {"tf": 12.806248474865697}, "practicuscore.containers.update_build_config": {"tf": 6.928203230275509}, "practicuscore.vault.create_or_update_secret": {"tf": 4.69041575982343}, "practicuscore.vault.get_secret": {"tf": 6.708203932499369}, "practicuscore.vault.delete_secret": {"tf": 3.7416573867739413}, "practicuscore.git.sync_repo": {"tf": 4.69041575982343}, "practicuscore.git.clone_repo": {"tf": 4.69041575982343}, "practicuscore.git.pull_repo": {"tf": 3.7416573867739413}, "practicuscore.mq.consumer": {"tf": 4.69041575982343}, "practicuscore.mq.connect": {"tf": 5.744562646538029}, "practicuscore.mq.publish": {"tf": 6.708203932499369}, "practicuscore.mq.analyze": {"tf": 4.58257569495584}, "practicuscore.mq.test_consumer": {"tf": 3.7416573867739413}, "practicuscore.mq.apply_topology": {"tf": 4.69041575982343}, "practicuscore.mq.export_topology": {"tf": 11.832159566199232}, "practicuscore.notify.send": {"tf": 16.703293088490067}, "practicuscore.db.init": {"tf": 6.164414002968976}, "practicuscore.db.revision": {"tf": 4}, "practicuscore.db.upgrade": {"tf": 4.69041575982343}, "practicuscore.db.upsert_static_data": {"tf": 4.358898943540674}, "practicuscore.addons.get_session_token": {"tf": 7.483314773547883}, "practicuscore.addons.get_list": {"tf": 5.477225575051661}, "practicuscore.Region.__init__": {"tf": 9.643650760992955}, "practicuscore.Region.get_csv_header": {"tf": 3.4641016151377544}, "practicuscore.Region.reload_worker_list": {"tf": 5.385164807134504}, "practicuscore.Region.get_default_worker_size": {"tf": 3.4641016151377544}, "practicuscore.Region.get_default_worker_image": {"tf": 5.291502622129181}, "practicuscore.Region.create_worker": {"tf": 9.273618495495704}, "practicuscore.Region.create_workspace": {"tf": 8.12403840463596}, "practicuscore.Region.get_local_worker": {"tf": 5.656854249492381}, "practicuscore.Region.get_or_create_worker": {"tf": 9.486832980505138}, "practicuscore.Region.reload_model_prefix_list": {"tf": 3.1622776601683795}, "practicuscore.Region.reload_model_list": {"tf": 3.1622776601683795}, "practicuscore.Region.reload_app_list": {"tf": 3.1622776601683795}, "practicuscore.Region.reload_app_prefix_list": {"tf": 3.1622776601683795}, "practicuscore.Region.reload_model_deployment_list": {"tf": 3.1622776601683795}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 3.1622776601683795}, "practicuscore.Region.deploy_model": {"tf": 8.660254037844387}, "practicuscore.Region.deploy_app": {"tf": 14.832396974191326}, "practicuscore.Region.delete_app": {"tf": 8.426149773176359}, "practicuscore.Region.delete_app_version": {"tf": 9.219544457292887}, "practicuscore.Region.prepare_app_db": {"tf": 7.810249675906654}, "practicuscore.Region.remove_app_db": {"tf": 5.830951894845301}, "practicuscore.Region.deploy_workflow": {"tf": 8.831760866327848}, "practicuscore.Region.logout": {"tf": 3.1622776601683795}, "practicuscore.Region.set_default": {"tf": 3.1622776601683795}, "practicuscore.Region.run_task": {"tf": 15.0996688705415}, "practicuscore.Region.get_model_api_session_token": {"tf": 6.4031242374328485}, "practicuscore.Region.get_app_api_session_token": {"tf": 8.717797887081348}, "practicuscore.Region.reload_addon_list": {"tf": 3.1622776601683795}, "practicuscore.Region.get_addon": {"tf": 5.744562646538029}, "practicuscore.Region.open_addon": {"tf": 4.242640687119285}, "practicuscore.Region.get_addon_session_token": {"tf": 7.810249675906654}, "practicuscore.Region.get_worker": {"tf": 6.324555320336759}, "practicuscore.Region.get_connection": {"tf": 5.744562646538029}, "practicuscore.Region.remove_worker_from_cache": {"tf": 4.242640687119285}, "practicuscore.Region.terminate_worker": {"tf": 9.486832980505138}, "practicuscore.Region.get_groups": {"tf": 4.123105625617661}, "practicuscore.Region.terminate_all_workers": {"tf": 3.4641016151377544}, "practicuscore.Region.reload_connection_list": {"tf": 3.1622776601683795}, "practicuscore.Region.create_connection": {"tf": 8.246211251235321}, "practicuscore.Region.update_connection": {"tf": 8.660254037844387}, "practicuscore.Region.create_or_update_secret": {"tf": 5.291502622129181}, "practicuscore.Region.get_secret": {"tf": 7}, "practicuscore.Region.delete_secret": {"tf": 4.242640687119285}, "practicuscore.Region.reload_worker_size_list": {"tf": 3.1622776601683795}, "practicuscore.Region.reload_worker_image_list": {"tf": 3.1622776601683795}, "practicuscore.Region.get_access_token": {"tf": 3.4641016151377544}, "practicuscore.Region.get_refresh_token": {"tf": 3.4641016151377544}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 4.69041575982343}, "practicuscore.Region.get_workspace_credentials": {"tf": 5.477225575051661}, "practicuscore.Region.recreate_model_deployment": {"tf": 4.242640687119285}, "practicuscore.Region.change_password": {"tf": 5.0990195135927845}, "practicuscore.Region.get_ai_assistants": {"tf": 4.123105625617661}, "practicuscore.Worker.__init__": {"tf": 4.47213595499958}, "practicuscore.Worker.get_csv_header": {"tf": 3.4641016151377544}, "practicuscore.Worker.assign_node": {"tf": 5.0990195135927845}, "practicuscore.Worker.local_worker_factory": {"tf": 7.0710678118654755}, "practicuscore.Worker.terminate": {"tf": 5.0990195135927845}, "practicuscore.Worker.load": {"tf": 7.681145747868608}, "practicuscore.Worker.upload_files": {"tf": 7.54983443527075}, "practicuscore.Worker.download_files": {"tf": 5.0990195135927845}, "practicuscore.Worker.run_task": {"tf": 7.54983443527075}, "practicuscore.Worker.check_task": {"tf": 4.47213595499958}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 4.242640687119285}, "practicuscore.Worker.kill_proc": {"tf": 4.242640687119285}, "practicuscore.Worker.kill_all_procs": {"tf": 3.1622776601683795}, "practicuscore.Worker.open_notebook": {"tf": 6.324555320336759}, "practicuscore.Worker.open_vscode": {"tf": 7.280109889280518}, "practicuscore.Worker.open_workspace": {"tf": 5.0990195135927845}, "practicuscore.Worker.get_workspace_credentials": {"tf": 4.69041575982343}, "practicuscore.Worker.ping": {"tf": 4.47213595499958}, "practicuscore.Worker.wait_until_ready": {"tf": 4.47213595499958}, "practicuscore.Worker.get_logs": {"tf": 5.5677643628300215}, "practicuscore.Worker.view_logs": {"tf": 4.898979485566356}, "practicuscore.Process.__init__": {"tf": 6.164414002968976}, "practicuscore.Process.get_csv_header": {"tf": 3.4641016151377544}, "practicuscore.Process.run_step": {"tf": 5.830951894845301}, "practicuscore.Process.get_eng": {"tf": 4.47213595499958}, "practicuscore.Process.show_recorded_steps": {"tf": 3.1622776601683795}, "practicuscore.Process.delete_recorded_steps": {"tf": 4}, "practicuscore.Process.reset_recorded_steps": {"tf": 3.1622776601683795}, "practicuscore.Process.run_recorded_steps": {"tf": 3.1622776601683795}, "practicuscore.Process.save_ws": {"tf": 7.874007874011811}, "practicuscore.Process.get_ws_activity_log": {"tf": 3.4641016151377544}, "practicuscore.Process.show_logs": {"tf": 4.242640687119285}, "practicuscore.Process.show_issues": {"tf": 4.242640687119285}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 3}, "practicuscore.Process.get_model_api_session_token": {"tf": 6.4031242374328485}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 4.58257569495584}, "practicuscore.Process.show_head": {"tf": 3.1622776601683795}, "practicuscore.Process.load": {"tf": 7}, "practicuscore.Process.save": {"tf": 5.5677643628300215}, "practicuscore.Process.delete_columns": {"tf": 4.795831523312719}, "practicuscore.Process.rename_column": {"tf": 5.0990195135927845}, "practicuscore.Process.rename_columns": {"tf": 4.242640687119285}, "practicuscore.Process.change_column_type": {"tf": 5.0990195135927845}, "practicuscore.Process.filter": {"tf": 4.242640687119285}, "practicuscore.Process.one_hot": {"tf": 5.0990195135927845}, "practicuscore.Process.categorical_map": {"tf": 5.0990195135927845}, "practicuscore.Process.split_column": {"tf": 5.0990195135927845}, "practicuscore.Process.handle_missing": {"tf": 7.3484692283495345}, "practicuscore.Process.sort_column": {"tf": 6.855654600401044}, "practicuscore.Process.group_by_column": {"tf": 5.5677643628300215}, "practicuscore.Process.time_sample": {"tf": 6.855654600401044}, "practicuscore.Process.update_values": {"tf": 5.830951894845301}, "practicuscore.Process.run_formula": {"tf": 5.0990195135927845}, "practicuscore.Process.run_custom_code": {"tf": 3.7416573867739413}, "practicuscore.Process.run_snippet": {"tf": 4.898979485566356}, "practicuscore.Process.run_custom_sql": {"tf": 5.0990195135927845}, "practicuscore.Process.build_model": {"tf": 7}, "practicuscore.Process.register_model": {"tf": 3.1622776601683795}, "practicuscore.Process.find_model": {"tf": 5.744562646538029}, "practicuscore.Process.predict": {"tf": 12.84523257866513}, "practicuscore.Process.predict_with_offline_model": {"tf": 12.489995996796797}, "practicuscore.Process.join": {"tf": 9.1104335791443}, "practicuscore.Process.wait_until_done": {"tf": 4.242640687119285}, "practicuscore.Process.get_df_copy": {"tf": 5.656854249492381}, "practicuscore.Process.kill": {"tf": 4.242640687119285}, "practicuscore.get_logger": {"tf": 4.69041575982343}, "practicuscore.set_logging_level": {"tf": 6.4031242374328485}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 4.58257569495584}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 4.58257569495584}, "practicuscore.WorkerConfig.validate_model": {"tf": 3.7416573867739413}, "practicuscore.WorkerConfig.model_validate": {"tf": 4.47213595499958}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 5.830951894845301}, "practicuscore.WorkerConfig.model_dump": {"tf": 4}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 5.916079783099616}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 4.58257569495584}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 4.58257569495584}, "practicuscore.ImageConfig.validate_model": {"tf": 3.7416573867739413}, "practicuscore.DistJobType.from_value": {"tf": 6.082762530298219}, "practicuscore.DistJobConfig.__init__": {"tf": 3.1622776601683795}, "practicuscore.DistJobConfig.validate_model": {"tf": 3.7416573867739413}, "practicuscore.PrtList.to_pandas": {"tf": 3.1622776601683795}, "practicuscore.PrtList.to_json": {"tf": 5.0990195135927845}, "practicuscore.PrtList.to_dict_list": {"tf": 4.123105625617661}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 5.477225575051661}, "practicuscore.APISpec.validate_model": {"tf": 3.7416573867739413}, "practicuscore.get_default_region": {"tf": 5.291502622129181}, "practicuscore.create_worker": {"tf": 9}, "practicuscore.current_region": {"tf": 5.291502622129181}, "practicuscore.get_local_worker": {"tf": 5.291502622129181}, "practicuscore.get_or_create_worker": {"tf": 7.810249675906654}, "practicuscore.running_on_a_worker": {"tf": 3}, "practicuscore.get_region": {"tf": 7.0710678118654755}, "practicuscore.get_region_list": {"tf": 5.477225575051661}, "practicuscore.region_factory": {"tf": 7.3484692283495345}, "practicuscore.set_default_region": {"tf": 5.291502622129181}, "practicuscore.create_workspace": {"tf": 7.810249675906654}, "practicuscore.run_task": {"tf": 14.933184523068078}, "practicuscore.api": {"tf": 6.4031242374328485}}, "df": 277, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 2.23606797749979}, "practicuscore.notify.send": {"tf": 2}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 2}}, "df": 46}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 33, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.mq.publish": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Process.predict": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers.build_image": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}}, "df": 3}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.model_validate_json": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.WorkerConfig.model_validate_json": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}}, "df": 13}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 10}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 12, "s": {"3": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.mq.export_topology": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.__init__": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.split_column": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.login": {"tf": 2.6457513110645907}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2.23606797749979}, "practicuscore.regions.change_password": {"tf": 1.4142135623730951}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.regions.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.models.deploy": {"tf": 2.6457513110645907}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 2.23606797749979}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 3.4641016151377544}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_version": {"tf": 1.7320508075688772}, "practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.apps.prepare_db": {"tf": 2.23606797749979}, "practicuscore.apps.remove_db": {"tf": 1.7320508075688772}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1.7320508075688772}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1.7320508075688772}, "practicuscore.workflows.get_dag_info": {"tf": 1.7320508075688772}, "practicuscore.workflows.generate_files": {"tf": 2.6457513110645907}, "practicuscore.workflows.test_tasks": {"tf": 2}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.open_dashboard": {"tf": 1.7320508075688772}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 2.6457513110645907}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1.4142135623730951}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.notebooks.find_notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 2}, "practicuscore.quality.format": {"tf": 2}, "practicuscore.containers.build_image": {"tf": 2.6457513110645907}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault.create_or_update_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 2.8284271247461903}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 2.23606797749979}, "practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 2.6457513110645907}, "practicuscore.Region.deploy_app": {"tf": 3.4641016151377544}, "practicuscore.Region.delete_app": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app_version": {"tf": 1.7320508075688772}, "practicuscore.Region.prepare_app_db": {"tf": 2.23606797749979}, "practicuscore.Region.remove_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_workflow": {"tf": 1.7320508075688772}, "practicuscore.Region.run_task": {"tf": 2.23606797749979}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.update_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.create_or_update_secret": {"tf": 1.7320508075688772}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1.7320508075688772}, "practicuscore.Worker.download_files": {"tf": 1.4142135623730951}, "practicuscore.Worker.run_task": {"tf": 1.7320508075688772}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1.4142135623730951}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1.4142135623730951}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1.4142135623730951}, "practicuscore.Process.change_column_type": {"tf": 1.4142135623730951}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1.4142135623730951}, "practicuscore.Process.categorical_map": {"tf": 1.4142135623730951}, "practicuscore.Process.split_column": {"tf": 1.4142135623730951}, "practicuscore.Process.handle_missing": {"tf": 1.7320508075688772}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 2}, "practicuscore.Process.update_values": {"tf": 1.7320508075688772}, "practicuscore.Process.run_formula": {"tf": 1.4142135623730951}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1.4142135623730951}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 2.449489742783178}, "practicuscore.Process.predict_with_offline_model": {"tf": 2.449489742783178}, "practicuscore.Process.join": {"tf": 1.7320508075688772}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 2.23606797749979}, "practicuscore.api": {"tf": 1}}, "df": 178}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.run_step": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"practicuscore.Process.run_step": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.save_ws": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.Process.save_ws": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.split_column": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}}, "df": 2}}}, "f": {"docs": {"practicuscore.Region.get_csv_header": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.get_csv_header": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 115}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}}, "df": 1}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Process.time_sample": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}}, "df": 3}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1.4142135623730951}}, "df": 2}}, "d": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.run_snippet": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 3.7416573867739413}, "practicuscore.regions.logout": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.create_worker": {"tf": 2}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 3.3166247903554}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature_json": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 3.4641016151377544}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.models.unzip": {"tf": 1.4142135623730951}, "practicuscore.apps.api": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 4}, "practicuscore.apps.get_session_token": {"tf": 2}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 2.449489742783178}, "practicuscore.apps.delete_version": {"tf": 2.449489742783178}, "practicuscore.apps.test_api": {"tf": 2}, "practicuscore.apps.secure_page": {"tf": 1.7320508075688772}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 3.1622776601683795}, "practicuscore.workflows.test_tasks": {"tf": 3.1622776601683795}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 2}, "practicuscore.distributed.wait_for_running": {"tf": 2}, "practicuscore.distributed.live_view": {"tf": 2}, "practicuscore.distributed.view_log": {"tf": 2.449489742783178}, "practicuscore.distributed.get_client": {"tf": 2.8284271247461903}, "practicuscore.distributed.open_dashboard": {"tf": 2}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.auth.login": {"tf": 3.7416573867739413}, "practicuscore.auth.logout": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 2.449489742783178}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.notebooks.execute_notebook": {"tf": 2.8284271247461903}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}, "practicuscore.quality.check": {"tf": 2.8284271247461903}, "practicuscore.quality.format": {"tf": 2.8284271247461903}, "practicuscore.containers.build_image": {"tf": 3.1622776601683795}, "practicuscore.containers.update_build_config": {"tf": 1.7320508075688772}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 2.23606797749979}, "practicuscore.notify.send": {"tf": 4.898979485566356}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2}, "practicuscore.Region.__init__": {"tf": 2.8284271247461903}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 2}, "practicuscore.Region.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 4}, "practicuscore.Region.delete_app": {"tf": 2.449489742783178}, "practicuscore.Region.delete_app_version": {"tf": 2.449489742783178}, "practicuscore.Region.prepare_app_db": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 3.3166247903554}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 2}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 2}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1.4142135623730951}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1.4142135623730951}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1.4142135623730951}, "practicuscore.Process.sort_column": {"tf": 1.4142135623730951}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 3.7416573867739413}, "practicuscore.Process.predict_with_offline_model": {"tf": 3.7416573867739413}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1.4142135623730951}, "practicuscore.create_worker": {"tf": 2}, "practicuscore.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 3.3166247903554}, "practicuscore.api": {"tf": 1.4142135623730951}}, "df": 110}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1.4142135623730951}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.7320508075688772}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 53, "s": {"docs": {"practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.regions.change_password": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 7}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.DistJobType.from_value": {"tf": 1.4142135623730951}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1}}}, "c": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}}, "df": 4}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.change_password": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.auth.change_password": {"tf": 1.4142135623730951}, "practicuscore.Region.change_password": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 2}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}, "practicuscore.api": {"tf": 1}}, "df": 28, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 5}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.test_api": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 2}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1.4142135623730951}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.7320508075688772}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Process.__init__": {"tf": 1.4142135623730951}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1.4142135623730951}, "practicuscore.api": {"tf": 1}}, "df": 75}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.get_eng": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}}, "df": 13}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.PrtList.to_json": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {"practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Worker.load": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.mq.analyze": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.mq.publish": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 2}, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.change_password": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.db.init": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"practicuscore.connections.get": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}}, "df": 5}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db.upgrade": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 9, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.Region.__init__": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 1}}, "df": 4}}}, "p": {"docs": {"practicuscore.Process.save_ws": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 2.23606797749979}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 26}, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Process.predict": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 4}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.run_custom_sql": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 23}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 6}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}}, "df": 6}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1.7320508075688772}, "practicuscore.regions.get_default_region": {"tf": 1.4142135623730951}, "practicuscore.regions.current_region": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.Worker.__init__": {"tf": 1.7320508075688772}, "practicuscore.Worker.local_worker_factory": {"tf": 2}, "practicuscore.get_default_region": {"tf": 1.4142135623730951}, "practicuscore.current_region": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1.7320508075688772}, "practicuscore.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1}}, "df": 22, "s": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.containers.build_image": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 3}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.test_api": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}}, "df": 2}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.git.pull_repo": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.run_step": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.distributed.view_log": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.join": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "a": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}}, "df": 1, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 34}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}}, "df": 3}, "g": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.Process.predict": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.DistJobType.from_value": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 54, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {"practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app_version": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 13, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.apps.get_list": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.apps.get_prefix_list": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_deployment_setting_list": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.zip": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}}, "df": 4}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.apps.test_api": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}}, "df": 3}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.group_by_column": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.sort_column": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Process.kill": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 24}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 10}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.filter": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}}, "df": 1}}}, "x": {"docs": {"practicuscore.quality.check": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 6, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.Process.run_formula": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Process.rename_column": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Process.time_sample": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 3}}, "w": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 30, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}}, "df": 4}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.mq.test_consumer": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 3}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.predict": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 6}}, "l": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}}, "df": 3, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1.4142135623730951}, "practicuscore.Process.change_column_type": {"tf": 1.4142135623730951}, "practicuscore.Process.one_hot": {"tf": 1.4142135623730951}, "practicuscore.Process.categorical_map": {"tf": 1.4142135623730951}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1.4142135623730951}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 1}}, "df": 14, "s": {"docs": {"practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq.export_topology": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}}, "df": 5, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}}, "df": 12}}}, "k": {"8": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}}, "df": 11, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.local_worker_factory": {"tf": 1}}, "df": 1}}}}}}}}, "docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 47}}}}}, "e": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 27}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 37}}}}}, "x": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 8}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.mq.publish": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}}, "df": 2, "l": {"docs": {"practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.7320508075688772}}, "df": 11, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.find_model": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.models.get_list": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.get_deployment_list": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.models.get_prefix_list": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db.revision": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.mq.publish": {"tf": 1}}, "df": 1}}, "b": {"docs": {"practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 4}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.create_workspace": {"tf": 1.7320508075688772}, "practicuscore.regions.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.run_task": {"tf": 2}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 2.449489742783178}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.create_workspace": {"tf": 1.7320508075688772}, "practicuscore.Region.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 2}, "practicuscore.Region.run_task": {"tf": 2}, "practicuscore.Region.get_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Process.__init__": {"tf": 1.7320508075688772}, "practicuscore.create_worker": {"tf": 1.7320508075688772}, "practicuscore.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1.7320508075688772}, "practicuscore.run_task": {"tf": 2}}, "df": 25, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 16}}}}}}, "s": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1.4142135623730951}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1.4142135623730951}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 36}}, "r": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType.from_value": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 9}}}}}}}}, "f": {"docs": {"practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}}, "df": 8, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}}, "df": 5}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 3, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 5}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "g": {"docs": {"practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 2}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 5}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.DistJobType.from_value": {"tf": 1}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1}}, "df": 9, "s": {"docs": {"practicuscore.WorkerConfig.validate_model": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.validate_model": {"tf": 1}, "practicuscore.APISpec.validate_model": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 37, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}}, "df": 19}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 3}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 2.23606797749979}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.7320508075688772}, "practicuscore.quality.format": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1.4142135623730951}, "practicuscore.Process.handle_missing": {"tf": 1.4142135623730951}, "practicuscore.Process.sort_column": {"tf": 1.7320508075688772}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 23}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.get_logger": {"tf": 1.7320508075688772}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}}, "df": 5}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.join": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.7320508075688772}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.predict": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}}}}}, "j": {"2": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.open_dashboard": {"tf": 1.4142135623730951}, "practicuscore.distributed.validate_job_dir": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.WorkerConfig.model_validate_json": {"tf": 1}}, "df": 1}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}}, "df": 23}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}}, "df": 2}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}}, "df": 8}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}}, "df": 23}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}}, "df": 23, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}}, "df": 8}}}}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobType": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}}, "df": 4}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}}, "df": 8}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.S3ConnConf": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}}, "df": 20}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Log": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.APIExecutionTarget": {"tf": 1.4142135623730951}, "practicuscore.APIRiskProfile": {"tf": 1.4142135623730951}, "practicuscore.APIScope": {"tf": 1.4142135623730951}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobType": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}}, "df": 4}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.PrtList": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.PrtList": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.PrtList": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "doc": {"root": {"0": {"0": {"0": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}, "docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_coordinator": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1.4142135623730951}}, "df": 12}, "1": {"0": {"0": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 2}, "docs": {"practicuscore.DistJobConfig": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "#": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "2": {"0": {"docs": {"practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 1}, "3": {"4": {"5": {"docs": {"practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.vault": {"tf": 1}}, "df": 9}, "docs": {"practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 1}, "docs": {"practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.7320508075688772}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}, "docs": {"practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 2.23606797749979}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 11, ":": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}}, "df": 2}}}}, "\u2013": {"9": {"9": {"docs": {"practicuscore.ImageConfig.builder_capacity": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "2": {"0": {"2": {"4": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {"practicuscore.containers.build_image": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 9}, "3": {"0": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}}, "df": 1}, "9": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 2.449489742783178}, "practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 6}, "docs": {"practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}}, "df": 2}}}, "4": {"2": {"docs": {"practicuscore.notebooks": {"tf": 1}}, "df": 1}, "docs": {"practicuscore": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 5, "g": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1}}, "5": {"9": {"2": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 4}, "6": {"0": {"0": {"0": {"0": {"docs": {"practicuscore.MQConfig.queue_ttl": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "7": {"5": {"docs": {"practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.revision": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "8": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}}, "df": 2}, "9": {"5": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.experiments": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"practicuscore": {"tf": 22.181073012818835}, "practicuscore.regions": {"tf": 11.958260743101398}, "practicuscore.regions.running_on_a_worker": {"tf": 3.872983346207417}, "practicuscore.regions.login": {"tf": 12.36931687685298}, "practicuscore.regions.logout": {"tf": 5.656854249492381}, "practicuscore.regions.get_region_list": {"tf": 4.58257569495584}, "practicuscore.regions.get_region": {"tf": 9.591663046625438}, "practicuscore.regions.get_default_region": {"tf": 4}, "practicuscore.regions.current_region": {"tf": 3.7416573867739413}, "practicuscore.regions.region_factory": {"tf": 5.830951894845301}, "practicuscore.regions.set_default_region": {"tf": 5.291502622129181}, "practicuscore.regions.get_local_worker": {"tf": 4.123105625617661}, "practicuscore.regions.create_worker": {"tf": 6.4031242374328485}, "practicuscore.regions.create_workspace": {"tf": 5.830951894845301}, "practicuscore.regions.get_or_create_worker": {"tf": 5.656854249492381}, "practicuscore.regions.run_task": {"tf": 8.48528137423857}, "practicuscore.regions.auto_login": {"tf": 3.7416573867739413}, "practicuscore.regions.change_password": {"tf": 4.358898943540674}, "practicuscore.regions.get_access_token": {"tf": 3.4641016151377544}, "practicuscore.regions.get_refresh_token": {"tf": 3.4641016151377544}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 4}, "practicuscore.regions.get_workspace_credentials": {"tf": 5.744562646538029}, "practicuscore.models": {"tf": 11.090536506409418}, "practicuscore.models.ModelConfig": {"tf": 6.708203932499369}, "practicuscore.models.deploy": {"tf": 11.704699910719626}, "practicuscore.models.get_session_token": {"tf": 10.770329614269007}, "practicuscore.models.load_config": {"tf": 9.848857801796104}, "practicuscore.models.get_mlflow_data_type": {"tf": 9.539392014169456}, "practicuscore.models.get_model_signature": {"tf": 10.14889156509222}, "practicuscore.models.get_model_signature_json": {"tf": 9.433981132056603}, "practicuscore.models.create_model_config": {"tf": 12.409673645990857}, "practicuscore.models.zip": {"tf": 9.38083151964686}, "practicuscore.models.unzip": {"tf": 7.874007874011811}, "practicuscore.models.get_list": {"tf": 8.366600265340756}, "practicuscore.models.get_deployment_list": {"tf": 8.366600265340756}, "practicuscore.models.get_prefix_list": {"tf": 7.681145747868608}, "practicuscore.apps": {"tf": 17.578395831246947}, "practicuscore.apps.api": {"tf": 3}, "practicuscore.apps.deploy": {"tf": 13.892443989449804}, "practicuscore.apps.get_session_token": {"tf": 10.14889156509222}, "practicuscore.apps.test_app": {"tf": 8.06225774829855}, "practicuscore.apps.delete": {"tf": 10.723805294763608}, "practicuscore.apps.delete_version": {"tf": 11.704699910719626}, "practicuscore.apps.get_list": {"tf": 8.366600265340756}, "practicuscore.apps.get_prefix_list": {"tf": 7.681145747868608}, "practicuscore.apps.get_deployment_setting_list": {"tf": 8.366600265340756}, "practicuscore.apps.test_api": {"tf": 4.123105625617661}, "practicuscore.apps.prepare_db": {"tf": 9.055385138137417}, "practicuscore.apps.remove_db": {"tf": 9}, "practicuscore.apps.secure_page": {"tf": 10.14889156509222}, "practicuscore.apps.get_user_id": {"tf": 10.770329614269007}, "practicuscore.apps.get_username": {"tf": 9.539392014169456}, "practicuscore.apps.get_user_email": {"tf": 9.486832980505138}, "practicuscore.apps.get_user_groups": {"tf": 10.723805294763608}, "practicuscore.apps.user_is_admin": {"tf": 8.831760866327848}, "practicuscore.apps.get_app_id": {"tf": 8.54400374531753}, "practicuscore.apps.get_app_prefix": {"tf": 8.48528137423857}, "practicuscore.apps.get_app_name": {"tf": 8.48528137423857}, "practicuscore.apps.get_app_version": {"tf": 8.48528137423857}, "practicuscore.apps.development_mode": {"tf": 8.831760866327848}, "practicuscore.apps.set_cookie": {"tf": 8.426149773176359}, "practicuscore.apps.get_cookie": {"tf": 10.770329614269007}, "practicuscore.apps.delete_cookie": {"tf": 8}, "practicuscore.workflows": {"tf": 15.7797338380595}, "practicuscore.workflows.deploy": {"tf": 9.327379053088816}, "practicuscore.workflows.get_airflow_params": {"tf": 7.14142842854285}, "practicuscore.workflows.run_airflow_task": {"tf": 5.0990195135927845}, "practicuscore.workflows.get_dag_info": {"tf": 9.643650760992955}, "practicuscore.workflows.generate_files": {"tf": 13.820274961085254}, "practicuscore.workflows.test_tasks": {"tf": 11.874342087037917}, "practicuscore.connections": {"tf": 17.69180601295413}, "practicuscore.connections.UploadS3Conf": {"tf": 9.9498743710662}, "practicuscore.connections.ConnConfFactory": {"tf": 1.4142135623730951}, "practicuscore.connections.ConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.S3ConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.SqLiteConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.MYSQLConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.RedshiftConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.MSSQLConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.OracleConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.HiveConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.ClouderaConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.AthenaConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.TrinoConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.DremioConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.HanaConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.TeradataConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.Db2ConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.CustomDBConnConf": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 6.48074069840786}, "practicuscore.connections.get_all": {"tf": 10.04987562112089}, "practicuscore.connections.get": {"tf": 11.74734012447073}, "practicuscore.connections.create": {"tf": 12.84523257866513}, "practicuscore.connections.update": {"tf": 12.36931687685298}, "practicuscore.distributed": {"tf": 14.071247279470288}, "practicuscore.distributed.JobType": {"tf": 2}, "practicuscore.distributed.JobConfig": {"tf": 2}, "practicuscore.distributed.wait_for_start": {"tf": 8.831760866327848}, "practicuscore.distributed.wait_for_running": {"tf": 8.717797887081348}, "practicuscore.distributed.live_view": {"tf": 8.602325267042627}, "practicuscore.distributed.view_log": {"tf": 8.94427190999916}, "practicuscore.distributed.get_client": {"tf": 9.848857801796104}, "practicuscore.distributed.open_dashboard": {"tf": 10.583005244258363}, "practicuscore.distributed.get_job_id": {"tf": 9.797958971132712}, "practicuscore.distributed.get_job_rank": {"tf": 11.445523142259598}, "practicuscore.distributed.get_gpu_count": {"tf": 8.246211251235321}, "practicuscore.distributed.running_on_a_cluster": {"tf": 8.366600265340756}, "practicuscore.distributed.is_coordinator": {"tf": 7.615773105863909}, "practicuscore.distributed.is_agent": {"tf": 7.681145747868608}, "practicuscore.distributed.validate_job_dir": {"tf": 9.273618495495704}, "practicuscore.auth": {"tf": 13.711309200802088}, "practicuscore.auth.set_default_region": {"tf": 5.291502622129181}, "practicuscore.auth.login": {"tf": 12.36931687685298}, "practicuscore.auth.logout": {"tf": 5.656854249492381}, "practicuscore.auth.auto_login": {"tf": 3.7416573867739413}, "practicuscore.auth.change_password": {"tf": 4.358898943540674}, "practicuscore.auth.get_workspace_credentials": {"tf": 5.744562646538029}, "practicuscore.auth.get_access_token": {"tf": 3.4641016151377544}, "practicuscore.auth.get_refresh_token": {"tf": 3.4641016151377544}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 4}, "practicuscore.engines": {"tf": 12}, "practicuscore.engines.get_spark_session": {"tf": 12.041594578792296}, "practicuscore.engines.delete_spark_session": {"tf": 6.4031242374328485}, "practicuscore.experiments": {"tf": 12.767145334803704}, "practicuscore.experiments.configure": {"tf": 13.674794331177344}, "practicuscore.notebooks": {"tf": 14.866068747318506}, "practicuscore.notebooks.default_output_folder": {"tf": 1.7320508075688772}, "practicuscore.notebooks.default_failed_output_folder": {"tf": 1.7320508075688772}, "practicuscore.notebooks.successful_notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.failed_notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 10.583005244258363}, "practicuscore.notebooks.reset_history": {"tf": 6.48074069840786}, "practicuscore.notebooks.view_history": {"tf": 6.928203230275509}, "practicuscore.notebooks.validate_history": {"tf": 7.0710678118654755}, "practicuscore.notebooks.get_venv_name": {"tf": 8.246211251235321}, "practicuscore.notebooks.validate_venv": {"tf": 8.06225774829855}, "practicuscore.notebooks.execute_notebook": {"tf": 12.922847983320086}, "practicuscore.notebooks.find_notebooks": {"tf": 7.416198487095663}, "practicuscore.notebooks.execute_notebooks": {"tf": 12.409673645990857}, "practicuscore.quality": {"tf": 11.045361017187261}, "practicuscore.quality.check": {"tf": 10.862780491200215}, "practicuscore.quality.format": {"tf": 8.774964387392123}, "practicuscore.containers": {"tf": 7.874007874011811}, "practicuscore.containers.build_image": {"tf": 14.247806848775006}, "practicuscore.containers.update_build_config": {"tf": 12.767145334803704}, "practicuscore.vault": {"tf": 11.61895003862225}, "practicuscore.vault.create_or_update_secret": {"tf": 5.385164807134504}, "practicuscore.vault.get_secret": {"tf": 10.862780491200215}, "practicuscore.vault.delete_secret": {"tf": 5}, "practicuscore.git": {"tf": 8.48528137423857}, "practicuscore.git.sync_repo": {"tf": 2.8284271247461903}, "practicuscore.git.clone_repo": {"tf": 3.4641016151377544}, "practicuscore.git.pull_repo": {"tf": 2.23606797749979}, "practicuscore.mq": {"tf": 16.941074346097416}, "practicuscore.mq.consumer": {"tf": 8.660254037844387}, "practicuscore.mq.connect": {"tf": 1.7320508075688772}, "practicuscore.mq.publish": {"tf": 1.7320508075688772}, "practicuscore.mq.analyze": {"tf": 2.449489742783178}, "practicuscore.mq.test_consumer": {"tf": 9.055385138137417}, "practicuscore.mq.apply_topology": {"tf": 2.449489742783178}, "practicuscore.mq.export_topology": {"tf": 4.58257569495584}, "practicuscore.notify": {"tf": 2.8284271247461903}, "practicuscore.notify.Notification": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 12.529964086141668}, "practicuscore.db": {"tf": 5.916079783099616}, "practicuscore.db.init": {"tf": 7.874007874011811}, "practicuscore.db.revision": {"tf": 3.605551275463989}, "practicuscore.db.upgrade": {"tf": 5.477225575051661}, "practicuscore.db.upsert_static_data": {"tf": 3.7416573867739413}, "practicuscore.addons": {"tf": 1.7320508075688772}, "practicuscore.addons.get_session_token": {"tf": 9.797958971132712}, "practicuscore.addons.get_list": {"tf": 8.246211251235321}, "practicuscore.Region": {"tf": 17.029386365926403}, "practicuscore.Region.__init__": {"tf": 5.916079783099616}, "practicuscore.Region.logger": {"tf": 1.4142135623730951}, "practicuscore.Region.url": {"tf": 1.7320508075688772}, "practicuscore.Region.email": {"tf": 1.7320508075688772}, "practicuscore.Region.username": {"tf": 1.7320508075688772}, "practicuscore.Region.refresh_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_csv_header": {"tf": 1.7320508075688772}, "practicuscore.Region.host_dns": {"tf": 6.48074069840786}, "practicuscore.Region.key": {"tf": 6.782329983125268}, "practicuscore.Region.is_default": {"tf": 7.0710678118654755}, "practicuscore.Region.console_client": {"tf": 3.3166247903554}, "practicuscore.Region.worker_list": {"tf": 8.246211251235321}, "practicuscore.Region.reload_worker_list": {"tf": 7.0710678118654755}, "practicuscore.Region.get_default_worker_size": {"tf": 7.745966692414834}, "practicuscore.Region.get_default_worker_image": {"tf": 8.48528137423857}, "practicuscore.Region.create_worker": {"tf": 9.539392014169456}, "practicuscore.Region.create_workspace": {"tf": 9.055385138137417}, "practicuscore.Region.get_local_worker": {"tf": 8.660254037844387}, "practicuscore.Region.get_or_create_worker": {"tf": 9.38083151964686}, "practicuscore.Region.model_prefix_list": {"tf": 7.681145747868608}, "practicuscore.Region.model_list": {"tf": 8.366600265340756}, "practicuscore.Region.app_list": {"tf": 8.366600265340756}, "practicuscore.Region.app_prefix_list": {"tf": 7.681145747868608}, "practicuscore.Region.reload_model_prefix_list": {"tf": 5.477225575051661}, "practicuscore.Region.reload_model_list": {"tf": 5.477225575051661}, "practicuscore.Region.reload_app_list": {"tf": 5.477225575051661}, "practicuscore.Region.reload_app_prefix_list": {"tf": 5.196152422706632}, "practicuscore.Region.model_deployment_list": {"tf": 8.366600265340756}, "practicuscore.Region.app_deployment_setting_list": {"tf": 8.366600265340756}, "practicuscore.Region.reload_model_deployment_list": {"tf": 5.477225575051661}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 5.196152422706632}, "practicuscore.Region.deploy_model": {"tf": 10.04987562112089}, "practicuscore.Region.deploy_app": {"tf": 8.717797887081348}, "practicuscore.Region.delete_app": {"tf": 8.426149773176359}, "practicuscore.Region.delete_app_version": {"tf": 9.219544457292887}, "practicuscore.Region.prepare_app_db": {"tf": 9}, "practicuscore.Region.remove_app_db": {"tf": 8.94427190999916}, "practicuscore.Region.deploy_workflow": {"tf": 9.16515138991168}, "practicuscore.Region.logout": {"tf": 6.164414002968976}, "practicuscore.Region.set_default": {"tf": 6.855654600401044}, "practicuscore.Region.run_task": {"tf": 11.916375287812984}, "practicuscore.Region.get_model_api_session_token": {"tf": 9.848857801796104}, "practicuscore.Region.get_app_api_session_token": {"tf": 10.246950765959598}, "practicuscore.Region.addon_list": {"tf": 8.246211251235321}, "practicuscore.Region.reload_addon_list": {"tf": 5.477225575051661}, "practicuscore.Region.get_addon": {"tf": 10.198039027185569}, "practicuscore.Region.open_addon": {"tf": 6.708203932499369}, "practicuscore.Region.get_addon_session_token": {"tf": 9.797958971132712}, "practicuscore.Region.get_worker": {"tf": 7.14142842854285}, "practicuscore.Region.get_connection": {"tf": 9.591663046625438}, "practicuscore.Region.remove_worker_from_cache": {"tf": 7.14142842854285}, "practicuscore.Region.terminate_worker": {"tf": 9.591663046625438}, "practicuscore.Region.get_groups": {"tf": 7.745966692414834}, "practicuscore.Region.terminate_all_workers": {"tf": 6.164414002968976}, "practicuscore.Region.connection_list": {"tf": 8.246211251235321}, "practicuscore.Region.reload_connection_list": {"tf": 5.477225575051661}, "practicuscore.Region.create_connection": {"tf": 13.2664991614216}, "practicuscore.Region.update_connection": {"tf": 12.206555615733702}, "practicuscore.Region.create_or_update_secret": {"tf": 4.795831523312719}, "practicuscore.Region.get_secret": {"tf": 10.862780491200215}, "practicuscore.Region.delete_secret": {"tf": 5}, "practicuscore.Region.worker_size_list": {"tf": 8.246211251235321}, "practicuscore.Region.reload_worker_size_list": {"tf": 5.477225575051661}, "practicuscore.Region.worker_image_list": {"tf": 8.246211251235321}, "practicuscore.Region.reload_worker_image_list": {"tf": 5.477225575051661}, "practicuscore.Region.get_access_token": {"tf": 7.745966692414834}, "practicuscore.Region.get_refresh_token": {"tf": 7.745966692414834}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 7.14142842854285}, "practicuscore.Region.get_workspace_credentials": {"tf": 9.486832980505138}, "practicuscore.Region.recreate_model_deployment": {"tf": 6.708203932499369}, "practicuscore.Region.change_password": {"tf": 8.660254037844387}, "practicuscore.Region.get_ai_assistants": {"tf": 5}, "practicuscore.Worker": {"tf": 13.152946437965905}, "practicuscore.Worker.__init__": {"tf": 5.291502622129181}, "practicuscore.Worker.logger": {"tf": 1.4142135623730951}, "practicuscore.Worker.region": {"tf": 2}, "practicuscore.Worker.create_model_response": {"tf": 1.4142135623730951}, "practicuscore.Worker.async_op_issue_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_csv_header": {"tf": 1.7320508075688772}, "practicuscore.Worker.service_type": {"tf": 3.872983346207417}, "practicuscore.Worker.instance_id": {"tf": 3.872983346207417}, "practicuscore.Worker.server_name": {"tf": 3.872983346207417}, "practicuscore.Worker.server_addr": {"tf": 3.872983346207417}, "practicuscore.Worker.server_addr_fqdn": {"tf": 3.872983346207417}, "practicuscore.Worker.image": {"tf": 3.872983346207417}, "practicuscore.Worker.image_id": {"tf": 3.872983346207417}, "practicuscore.Worker.creation_time": {"tf": 3.872983346207417}, "practicuscore.Worker.name": {"tf": 3.872983346207417}, "practicuscore.Worker.size": {"tf": 3.872983346207417}, "practicuscore.Worker.total_mem_gb": {"tf": 3.872983346207417}, "practicuscore.Worker.cpu": {"tf": 3.872983346207417}, "practicuscore.Worker.gpu": {"tf": 3.872983346207417}, "practicuscore.Worker.status": {"tf": 3.872983346207417}, "practicuscore.Worker.ready": {"tf": 3.7416573867739413}, "practicuscore.Worker.job_id": {"tf": 3.872983346207417}, "practicuscore.Worker.terminating": {"tf": 3.7416573867739413}, "practicuscore.Worker.assign_node": {"tf": 4.69041575982343}, "practicuscore.Worker.local_worker_factory": {"tf": 5.916079783099616}, "practicuscore.Worker.terminate": {"tf": 6.244997998398398}, "practicuscore.Worker.load": {"tf": 5.916079783099616}, "practicuscore.Worker.upload_files": {"tf": 9.327379053088816}, "practicuscore.Worker.download_files": {"tf": 7.483314773547883}, "practicuscore.Worker.run_task": {"tf": 8.94427190999916}, "practicuscore.Worker.check_task": {"tf": 8.888194417315589}, "practicuscore.Worker.proc_list": {"tf": 3.7416573867739413}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 4.795831523312719}, "practicuscore.Worker.kill_proc": {"tf": 6.855654600401044}, "practicuscore.Worker.kill_all_procs": {"tf": 5.196152422706632}, "practicuscore.Worker.open_notebook": {"tf": 9.16515138991168}, "practicuscore.Worker.open_vscode": {"tf": 10.344080432788601}, "practicuscore.Worker.open_workspace": {"tf": 8.94427190999916}, "practicuscore.Worker.get_workspace_credentials": {"tf": 8.18535277187245}, "practicuscore.Worker.ping": {"tf": 9}, "practicuscore.Worker.wait_until_ready": {"tf": 9.327379053088816}, "practicuscore.Worker.get_logs": {"tf": 9}, "practicuscore.Worker.view_logs": {"tf": 6.708203932499369}, "practicuscore.Process": {"tf": 12}, "practicuscore.Process.__init__": {"tf": 4.358898943540674}, "practicuscore.Process.logger": {"tf": 1.4142135623730951}, "practicuscore.Process.worker": {"tf": 2.23606797749979}, "practicuscore.Process.ws": {"tf": 1.7320508075688772}, "practicuscore.Process.wsm": {"tf": 1.7320508075688772}, "practicuscore.Process.async_op_issue_list": {"tf": 1.7320508075688772}, "practicuscore.Process.alive": {"tf": 1.7320508075688772}, "practicuscore.Process.get_csv_header": {"tf": 4.242640687119285}, "practicuscore.Process.proc_id": {"tf": 3.7416573867739413}, "practicuscore.Process.os_pid": {"tf": 3.7416573867739413}, "practicuscore.Process.conn_conf": {"tf": 3.872983346207417}, "practicuscore.Process.conn_info": {"tf": 3.7416573867739413}, "practicuscore.Process.worker_name": {"tf": 3.7416573867739413}, "practicuscore.Process.run_step": {"tf": 4.58257569495584}, "practicuscore.Process.get_eng": {"tf": 1.4142135623730951}, "practicuscore.Process.show_recorded_steps": {"tf": 1.7320508075688772}, "practicuscore.Process.delete_recorded_steps": {"tf": 1.7320508075688772}, "practicuscore.Process.reset_recorded_steps": {"tf": 1.7320508075688772}, "practicuscore.Process.run_recorded_steps": {"tf": 1.7320508075688772}, "practicuscore.Process.save_ws": {"tf": 1.7320508075688772}, "practicuscore.Process.get_ws_activity_log": {"tf": 1.7320508075688772}, "practicuscore.Process.show_logs": {"tf": 3.872983346207417}, "practicuscore.Process.show_issues": {"tf": 3.872983346207417}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1.4142135623730951}, "practicuscore.Process.my_k8s_worker": {"tf": 1.4142135623730951}, "practicuscore.Process.my_k8s_region": {"tf": 1.4142135623730951}, "practicuscore.Process.get_model_api_session_token": {"tf": 2.449489742783178}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1.4142135623730951}, "practicuscore.Process.show_head": {"tf": 2.8284271247461903}, "practicuscore.Process.load": {"tf": 4.58257569495584}, "practicuscore.Process.save": {"tf": 4.47213595499958}, "practicuscore.Process.delete_columns": {"tf": 1.4142135623730951}, "practicuscore.Process.rename_column": {"tf": 1.7320508075688772}, "practicuscore.Process.rename_columns": {"tf": 1.7320508075688772}, "practicuscore.Process.change_column_type": {"tf": 1.7320508075688772}, "practicuscore.Process.filter": {"tf": 1.7320508075688772}, "practicuscore.Process.one_hot": {"tf": 1.7320508075688772}, "practicuscore.Process.categorical_map": {"tf": 1.7320508075688772}, "practicuscore.Process.split_column": {"tf": 1.7320508075688772}, "practicuscore.Process.handle_missing": {"tf": 1.7320508075688772}, "practicuscore.Process.sort_column": {"tf": 1.7320508075688772}, "practicuscore.Process.group_by_column": {"tf": 1.7320508075688772}, "practicuscore.Process.time_sample": {"tf": 1.7320508075688772}, "practicuscore.Process.update_values": {"tf": 1.7320508075688772}, "practicuscore.Process.run_formula": {"tf": 1.7320508075688772}, "practicuscore.Process.run_custom_code": {"tf": 3.7416573867739413}, "practicuscore.Process.run_snippet": {"tf": 4.58257569495584}, "practicuscore.Process.run_custom_sql": {"tf": 1.7320508075688772}, "practicuscore.Process.build_model": {"tf": 5.656854249492381}, "practicuscore.Process.register_model": {"tf": 1.7320508075688772}, "practicuscore.Process.find_model": {"tf": 5.196152422706632}, "practicuscore.Process.predict": {"tf": 7.0710678118654755}, "practicuscore.Process.predict_with_offline_model": {"tf": 6.782329983125268}, "practicuscore.Process.join": {"tf": 6.4031242374328485}, "practicuscore.Process.wait_until_done": {"tf": 3.872983346207417}, "practicuscore.Process.get_df_copy": {"tf": 5.0990195135927845}, "practicuscore.Process.kill": {"tf": 4.47213595499958}, "practicuscore.get_logger": {"tf": 9.9498743710662}, "practicuscore.Log": {"tf": 1.7320508075688772}, "practicuscore.Log.CORE": {"tf": 1.7320508075688772}, "practicuscore.Log.SDK": {"tf": 1.7320508075688772}, "practicuscore.Log.REGION": {"tf": 1.7320508075688772}, "practicuscore.Log.WORKER": {"tf": 1.7320508075688772}, "practicuscore.Log.PROCESS": {"tf": 1.7320508075688772}, "practicuscore.Log.CLI": {"tf": 1.7320508075688772}, "practicuscore.Log.WEB_SOCKET": {"tf": 1.7320508075688772}, "practicuscore.Log.ENGINES": {"tf": 1.7320508075688772}, "practicuscore.Log.AIRFLOW": {"tf": 1.7320508075688772}, "practicuscore.Log.APPS": {"tf": 1.7320508075688772}, "practicuscore.Log.GEN_AI": {"tf": 1.7320508075688772}, "practicuscore.Log.TEST": {"tf": 1.7320508075688772}, "practicuscore.Log.NOTEBOOKS": {"tf": 1.7320508075688772}, "practicuscore.Log.DISTRIBUTED": {"tf": 1.7320508075688772}, "practicuscore.Log.CONTAINERS": {"tf": 1.7320508075688772}, "practicuscore.Log.GIT": {"tf": 1.7320508075688772}, "practicuscore.Log.MQ": {"tf": 1.7320508075688772}, "practicuscore.Log.NOTIFY": {"tf": 1.7320508075688772}, "practicuscore.Log.DB": {"tf": 1.7320508075688772}, "practicuscore.Log.ADDONS": {"tf": 1.7320508075688772}, "practicuscore.set_logging_level": {"tf": 11.135528725660043}, "practicuscore.WorkerConfig": {"tf": 7.416198487095663}, "practicuscore.WorkerConfig.worker_image": {"tf": 4.123105625617661}, "practicuscore.WorkerConfig.worker_size": {"tf": 2.8284271247461903}, "practicuscore.WorkerConfig.service_type": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.distributed_config": {"tf": 2.449489742783178}, "practicuscore.WorkerConfig.image_config": {"tf": 2.23606797749979}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.log_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.interactive": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.service_url": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.email": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.refresh_token": {"tf": 2.449489742783178}, "practicuscore.WorkerConfig.env_variables": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.git_configs": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.validate_service_type": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.validate_network_protocol": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.validate_model": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_config": {"tf": 2}, "practicuscore.WorkerConfig.model_validate": {"tf": 3.4641016151377544}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 6}, "practicuscore.WorkerConfig.model_dump": {"tf": 4.242640687119285}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 5.656854249492381}, "practicuscore.ImageConfig": {"tf": 5.385164807134504}, "practicuscore.ImageConfig.repo_username": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.repo_password": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 2.6457513110645907}, "practicuscore.ImageConfig.pull_policy": {"tf": 3.605551275463989}, "practicuscore.ImageConfig.builder": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.builder_capacity": {"tf": 2.23606797749979}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 3.605551275463989}, "practicuscore.ImageConfig.validate_pull_policy": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.validate_builder_capacity": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.validate_model": {"tf": 4.898979485566356}, "practicuscore.ImageConfig.model_config": {"tf": 2}, "practicuscore.DistJobType": {"tf": 7.810249675906654}, "practicuscore.DistJobType.python": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.torch": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.deepspeed": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.fairscale": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.horovod": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.spark": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.dask": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.ray": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.custom": {"tf": 1.7320508075688772}, "practicuscore.DistJobType.from_value": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig": {"tf": 8.774964387392123}, "practicuscore.DistJobConfig.__init__": {"tf": 3.7416573867739413}, "practicuscore.DistJobConfig.job_type": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.job_dir": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 2.23606797749979}, "practicuscore.DistJobConfig.worker_count": {"tf": 3.1622776601683795}, "practicuscore.DistJobConfig.initial_count": {"tf": 3}, "practicuscore.DistJobConfig.max_count": {"tf": 2.6457513110645907}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 2.23606797749979}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.retries": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.py_file": {"tf": 2.6457513110645907}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 2}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 2.23606797749979}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.processes": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.threads": {"tf": 2.449489742783178}, "practicuscore.DistJobConfig.memory_gb": {"tf": 2.449489742783178}, "practicuscore.DistJobConfig.executors": {"tf": 2}, "practicuscore.DistJobConfig.validate_model": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.model_config": {"tf": 2}, "practicuscore.GitConfig": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.remote_url": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.secret_name": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.save_secret": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.username": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.local_path": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.branch": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.fetch_depth": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.model_config": {"tf": 2}, "practicuscore.MQConfig": {"tf": 3.4641016151377544}, "practicuscore.MQConfig.conn_str": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.queue": {"tf": 3.872983346207417}, "practicuscore.MQConfig.exchange": {"tf": 3.1622776601683795}, "practicuscore.MQConfig.exchange_type": {"tf": 3.1622776601683795}, "practicuscore.MQConfig.queue_ttl": {"tf": 3.4641016151377544}, "practicuscore.MQConfig.routing_key": {"tf": 3.605551275463989}, "practicuscore.MQConfig.max_retries": {"tf": 3.1622776601683795}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.headers": {"tf": 3}, "practicuscore.MQConfig.verify_delivery": {"tf": 3.872983346207417}, "practicuscore.MQConfig.prefetch_count": {"tf": 3}, "practicuscore.MQConfig.user_name": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.password": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.host": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.vhost": {"tf": 2}, "practicuscore.MQConfig.model_config": {"tf": 2}, "practicuscore.PrtList": {"tf": 6.4031242374328485}, "practicuscore.PrtList.read_only": {"tf": 4}, "practicuscore.PrtList.to_pandas": {"tf": 3.7416573867739413}, "practicuscore.PrtList.to_json": {"tf": 5.196152422706632}, "practicuscore.PrtList.to_dict_list": {"tf": 3.4641016151377544}, "practicuscore.APIExecutionTarget": {"tf": 1.7320508075688772}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1.7320508075688772}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1.7320508075688772}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1.7320508075688772}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1.7320508075688772}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1.7320508075688772}, "practicuscore.APIRiskProfile": {"tf": 1.7320508075688772}, "practicuscore.APIRiskProfile.Low": {"tf": 1.7320508075688772}, "practicuscore.APIRiskProfile.Medium": {"tf": 1.7320508075688772}, "practicuscore.APIRiskProfile.High": {"tf": 1.7320508075688772}, "practicuscore.APIScope": {"tf": 1.7320508075688772}, "practicuscore.APIScope.AppOnly": {"tf": 1.7320508075688772}, "practicuscore.APIScope.TeamWide": {"tf": 1.7320508075688772}, "practicuscore.APIScope.CompanyWide": {"tf": 1.7320508075688772}, "practicuscore.APIScope.PartnerExternal": {"tf": 1.7320508075688772}, "practicuscore.APIScope.Public": {"tf": 1.7320508075688772}, "practicuscore.APISpec": {"tf": 1.7320508075688772}, "practicuscore.APISpec.execution_target": {"tf": 1.7320508075688772}, "practicuscore.APISpec.read_only": {"tf": 1.7320508075688772}, "practicuscore.APISpec.scope": {"tf": 1.7320508075688772}, "practicuscore.APISpec.risk_profile": {"tf": 1.7320508075688772}, "practicuscore.APISpec.human_gated": {"tf": 1.7320508075688772}, "practicuscore.APISpec.deterministic": {"tf": 1.7320508075688772}, "practicuscore.APISpec.idempotent": {"tf": 1.7320508075688772}, "practicuscore.APISpec.stateful": {"tf": 1.7320508075688772}, "practicuscore.APISpec.asynchronous": {"tf": 1.7320508075688772}, "practicuscore.APISpec.maturity_level": {"tf": 1.7320508075688772}, "practicuscore.APISpec.disable_authentication": {"tf": 2}, "practicuscore.APISpec.custom_attributes": {"tf": 4}, "practicuscore.APISpec.validate_custom_attributes": {"tf": 1.7320508075688772}, "practicuscore.APISpec.validate_model": {"tf": 1.7320508075688772}, "practicuscore.APISpec.model_config": {"tf": 2}, "practicuscore.get_default_region": {"tf": 4}, "practicuscore.create_worker": {"tf": 6.4031242374328485}, "practicuscore.current_region": {"tf": 3.7416573867739413}, "practicuscore.get_local_worker": {"tf": 4.123105625617661}, "practicuscore.get_or_create_worker": {"tf": 5.656854249492381}, "practicuscore.running_on_a_worker": {"tf": 3.872983346207417}, "practicuscore.get_region": {"tf": 9.591663046625438}, "practicuscore.get_region_list": {"tf": 4.58257569495584}, "practicuscore.region_factory": {"tf": 5.830951894845301}, "practicuscore.set_default_region": {"tf": 5.291502622129181}, "practicuscore.create_workspace": {"tf": 5.830951894845301}, "practicuscore.run_task": {"tf": 8.48528137423857}, "practicuscore.api": {"tf": 3}}, "df": 534, "p": {"docs": {"practicuscore.notify.send": {"tf": 1.4142135623730951}}, "df": 1, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 3.872983346207417}, "practicuscore.regions": {"tf": 2.23606797749979}, "practicuscore.regions.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.login": {"tf": 2.23606797749979}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.auto_login": {"tf": 1.4142135623730951}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps": {"tf": 2.449489742783178}, "practicuscore.apps.api": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1.7320508075688772}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth": {"tf": 2.449489742783178}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 2.23606797749979}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1.4142135623730951}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.engines": {"tf": 2.23606797749979}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 2}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.addons": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.get_region": {"tf": 1.4142135623730951}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.api": {"tf": 1.4142135623730951}}, "df": 84, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 26}}}}, ":": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.set_logging_level": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "e": {"docs": {"practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 11, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 22}, "d": {"docs": {"practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region": {"tf": 1.7320508075688772}, "practicuscore.regions.region_factory": {"tf": 1.7320508075688772}, "practicuscore.regions.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_version": {"tf": 1.7320508075688772}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1.7320508075688772}, "practicuscore.region_factory": {"tf": 1.7320508075688772}}, "df": 38}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 7}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {"practicuscore.Worker.remove_proc_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Worker.kill_proc": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 2}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1.7320508075688772}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1.7320508075688772}, "practicuscore.Worker.kill_proc": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 2.23606797749979}, "practicuscore.Process.__init__": {"tf": 1.4142135623730951}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1.4142135623730951}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}}, "df": 30, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.processes": {"tf": 1}}, "df": 1}}}}}}}}}}}, "d": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.db.revision": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"practicuscore.Worker.kill_all_procs": {"tf": 1}}, "df": 1}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.GitConfig.local_path": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 2}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1.7320508075688772}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 9}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers.build_image": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {"practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 2.23606797749979}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 2}, "practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.delete": {"tf": 2.449489742783178}, "practicuscore.apps.delete_version": {"tf": 2.23606797749979}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 2}, "practicuscore.apps.prepare_db": {"tf": 2}, "practicuscore.apps.remove_db": {"tf": 2}, "practicuscore.apps.get_app_prefix": {"tf": 2.449489742783178}, "practicuscore.connections.UploadS3Conf": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.model_prefix_list": {"tf": 2}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 2}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app": {"tf": 2}, "practicuscore.Region.delete_app_version": {"tf": 2}, "practicuscore.Region.prepare_app_db": {"tf": 2}, "practicuscore.Region.remove_app_db": {"tf": 2}}, "df": 28, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.apps.get_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.Region.app_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}}, "df": 7}, "d": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}}, "df": 5, "\u2014": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}}, "df": 5}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.show_head": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Worker.upload_files": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.notify": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 8}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.prepare_app_db": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.Region.prepare_app_db": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.PrtList.to_json": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1.7320508075688772}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 2}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_rank": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.vault": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 83, "s": {"docs": {"practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 2}, "practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1.4142135623730951}, "practicuscore.MQConfig": {"tf": 1}}, "df": 6}, "d": {"docs": {"practicuscore.ImageConfig.custom_builder_url": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {"practicuscore": {"tf": 2.449489742783178}, "practicuscore.regions": {"tf": 1.7320508075688772}, "practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps": {"tf": 2.23606797749979}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_email": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 2.449489742783178}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 2.6457513110645907}, "practicuscore.connections.get_all": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.distributed": {"tf": 2.23606797749979}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth": {"tf": 2.23606797749979}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.engines": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 2.23606797749979}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality": {"tf": 1.7320508075688772}, "practicuscore.vault": {"tf": 1.7320508075688772}, "practicuscore.git": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db": {"tf": 2.23606797749979}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.db.revision": {"tf": 1.7320508075688772}, "practicuscore.db.upgrade": {"tf": 2}, "practicuscore.db.upsert_static_data": {"tf": 1.7320508075688772}, "practicuscore.addons.get_session_token": {"tf": 2}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 2}, "practicuscore.APISpec.custom_attributes": {"tf": 1.7320508075688772}, "practicuscore.get_region": {"tf": 1.4142135623730951}}, "df": 82, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.models.get_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}}, "df": 2}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.apps.get_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.connections.get_all": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}}, "df": 2}}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.worker_list": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.worker_size_list": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.worker_image_list": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Worker.proc_list": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 2.8284271247461903}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 13, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 2.23606797749979}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1.4142135623730951}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2}, "practicuscore.Worker.run_task": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.7320508075688772}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.run_task": {"tf": 2.23606797749979}}, "df": 23, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.DistJobType": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.models.ModelConfig": {"tf": 4.47213595499958}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 13, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}}, "df": 6}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}}, "df": 5}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notify.send": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 9}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 14, "s": {"docs": {"practicuscore.Region": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.connection_list": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}}, "df": 1, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.connections.PostgreSQLConnConf": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.quality": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 4}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"practicuscore.ImageConfig.pull_policy": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.threads": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.GitConfig.save_secret": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.7320508075688772}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}}, "df": 7}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}}, "df": 5}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}}, "df": 4}}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.ImageConfig.builder_capacity": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2.6457513110645907}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.api": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 2}, "practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 1.7320508075688772}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1.7320508075688772}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 2.8284271247461903}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 2.8284271247461903}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1.7320508075688772}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1.7320508075688772}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 2.6457513110645907}, "practicuscore.api": {"tf": 1.4142135623730951}}, "df": 47, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Worker.run_task": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1.7320508075688772}, "practicuscore.quality.format": {"tf": 1.7320508075688772}}, "df": 5}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 11, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 3.3166247903554}, "practicuscore.regions.change_password": {"tf": 2.23606797749979}, "practicuscore.regions.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 3.3166247903554}, "practicuscore.auth.change_password": {"tf": 2.23606797749979}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 3}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}}, "df": 19, "s": {"docs": {"practicuscore.auth": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"1": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}}, "df": 2}, "docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1.7320508075688772}, "practicuscore.workflows.run_airflow_task": {"tf": 1.7320508075688772}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 2.23606797749979}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1.4142135623730951}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 162}}}}}, "s": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 5}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.load_config": {"tf": 1}}, "df": 1}, "d": {"docs": {"practicuscore.Worker.image_id": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.load_config": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {"practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_rank": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.Worker.job_id": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.containers": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 3}, "s": {"docs": {"practicuscore.Process.split_column": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.PrtList": {"tf": 1.7320508075688772}, "practicuscore.PrtList.to_pandas": {"tf": 1.4142135623730951}}, "df": 6}}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.test_api": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 2.6457513110645907}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.ImageConfig": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 7, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.engines": {"tf": 1}}, "df": 2}}}}}}}, "k": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.mq.consumer": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.ping": {"tf": 1.7320508075688772}, "practicuscore.Worker.wait_until_ready": {"tf": 1.4142135623730951}}, "df": 2}}, "d": {"docs": {"practicuscore.Process.os_pid": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.ImageConfig": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.git": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}}, "df": 2}, "r": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.MQConfig": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.mq": {"tf": 1.7320508075688772}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 7}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APIScope.Public": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 5}, "k": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}}, "df": 2}}}, "a": {"docs": {"practicuscore": {"tf": 4.58257569495584}, "practicuscore.regions": {"tf": 2.6457513110645907}, "practicuscore.regions.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.login": {"tf": 2.449489742783178}, "practicuscore.regions.get_region_list": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region": {"tf": 1.7320508075688772}, "practicuscore.regions.current_region": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 2.449489742783178}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.create_worker": {"tf": 2.6457513110645907}, "practicuscore.regions.create_workspace": {"tf": 2.8284271247461903}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2.8284271247461903}, "practicuscore.regions.auto_login": {"tf": 1.4142135623730951}, "practicuscore.regions.get_access_token": {"tf": 1.4142135623730951}, "practicuscore.regions.get_refresh_token": {"tf": 1.4142135623730951}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.regions.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.models": {"tf": 2.8284271247461903}, "practicuscore.models.ModelConfig": {"tf": 2.6457513110645907}, "practicuscore.models.deploy": {"tf": 2.23606797749979}, "practicuscore.models.get_session_token": {"tf": 2.6457513110645907}, "practicuscore.models.load_config": {"tf": 2.6457513110645907}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 2}, "practicuscore.models.get_model_signature_json": {"tf": 1.7320508075688772}, "practicuscore.models.create_model_config": {"tf": 2.6457513110645907}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.models.get_list": {"tf": 1.7320508075688772}, "practicuscore.models.get_deployment_list": {"tf": 2}, "practicuscore.models.get_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.apps": {"tf": 3}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 2.6457513110645907}, "practicuscore.apps.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1.7320508075688772}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 2.23606797749979}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_airflow_params": {"tf": 1.4142135623730951}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1.7320508075688772}, "practicuscore.workflows.generate_files": {"tf": 2}, "practicuscore.workflows.test_tasks": {"tf": 2.8284271247461903}, "practicuscore.connections": {"tf": 2.6457513110645907}, "practicuscore.connections.UploadS3Conf": {"tf": 1.4142135623730951}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 2}, "practicuscore.connections.get_all": {"tf": 2}, "practicuscore.connections.get": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 2.23606797749979}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 2.6457513110645907}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.7320508075688772}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_rank": {"tf": 1.7320508075688772}, "practicuscore.distributed.running_on_a_cluster": {"tf": 2.23606797749979}, "practicuscore.distributed.is_coordinator": {"tf": 1.7320508075688772}, "practicuscore.distributed.is_agent": {"tf": 1.4142135623730951}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth": {"tf": 2}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 2.449489742783178}, "practicuscore.auth.auto_login": {"tf": 1.4142135623730951}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.auth.get_access_token": {"tf": 1.4142135623730951}, "practicuscore.auth.get_refresh_token": {"tf": 1.4142135623730951}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 2.6457513110645907}, "practicuscore.engines.get_spark_session": {"tf": 2.8284271247461903}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 2.8284271247461903}, "practicuscore.notebooks": {"tf": 2}, "practicuscore.notebooks.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.notebooks.find_notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebooks": {"tf": 2.6457513110645907}, "practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 2.449489742783178}, "practicuscore.containers.build_image": {"tf": 2.23606797749979}, "practicuscore.containers.update_build_config": {"tf": 2}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 2}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1.4142135623730951}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1.4142135623730951}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.notify": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 2.23606797749979}, "practicuscore.db": {"tf": 2}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}, "practicuscore.addons.get_list": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 2.449489742783178}, "practicuscore.Region.__init__": {"tf": 1.4142135623730951}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 2.6457513110645907}, "practicuscore.Region.create_workspace": {"tf": 1.7320508075688772}, "practicuscore.Region.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.model_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.Region.model_list": {"tf": 1.7320508075688772}, "practicuscore.Region.app_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 2}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 2.449489742783178}, "practicuscore.Region.get_model_api_session_token": {"tf": 2}, "practicuscore.Region.get_app_api_session_token": {"tf": 2}, "practicuscore.Region.addon_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 2}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker": {"tf": 2.449489742783178}, "practicuscore.Worker.__init__": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.7320508075688772}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 2}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.7320508075688772}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.proc_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1.7320508075688772}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process": {"tf": 2}, "practicuscore.Process.__init__": {"tf": 1.4142135623730951}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1.7320508075688772}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.load": {"tf": 1.4142135623730951}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1.4142135623730951}, "practicuscore.Process.handle_missing": {"tf": 1.4142135623730951}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1.4142135623730951}, "practicuscore.Process.run_formula": {"tf": 1.4142135623730951}, "practicuscore.Process.run_custom_code": {"tf": 1.4142135623730951}, "practicuscore.Process.run_snippet": {"tf": 1.4142135623730951}, "practicuscore.Process.run_custom_sql": {"tf": 1.7320508075688772}, "practicuscore.Process.build_model": {"tf": 1.4142135623730951}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.Process.get_df_copy": {"tf": 1.4142135623730951}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.get_logger": {"tf": 1.7320508075688772}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 2.23606797749979}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_dump": {"tf": 2.449489742783178}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobType": {"tf": 3.3166247903554}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.__init__": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.PrtList": {"tf": 2}, "practicuscore.PrtList.to_pandas": {"tf": 1.4142135623730951}, "practicuscore.PrtList.to_json": {"tf": 1.4142135623730951}, "practicuscore.PrtList.to_dict_list": {"tf": 1.4142135623730951}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}, "practicuscore.create_worker": {"tf": 2.6457513110645907}, "practicuscore.current_region": {"tf": 1.4142135623730951}, "practicuscore.get_local_worker": {"tf": 1.7320508075688772}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.get_region": {"tf": 1.7320508075688772}, "practicuscore.get_region_list": {"tf": 1.7320508075688772}, "practicuscore.region_factory": {"tf": 2.449489742783178}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 2.8284271247461903}, "practicuscore.run_task": {"tf": 2.8284271247461903}, "practicuscore.api": {"tf": 1}}, "df": 280, "i": {"docs": {"practicuscore": {"tf": 3.872983346207417}, "practicuscore.regions": {"tf": 1.7320508075688772}, "practicuscore.regions.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.login": {"tf": 2}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.auto_login": {"tf": 1.4142135623730951}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps": {"tf": 2.449489742783178}, "practicuscore.apps.api": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1.7320508075688772}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth": {"tf": 2}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 2}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1.4142135623730951}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.engines": {"tf": 2.23606797749979}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 2}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.addons": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1.4142135623730951}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.api": {"tf": 1.4142135623730951}}, "df": 86, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.workflows": {"tf": 2.6457513110645907}, "practicuscore.workflows.deploy": {"tf": 2}, "practicuscore.workflows.get_airflow_params": {"tf": 2}, "practicuscore.workflows.run_airflow_task": {"tf": 2.23606797749979}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1.7320508075688772}}, "df": 7}}}}}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}}, "o": {"docs": {"practicuscore.mq.consumer": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.logout": {"tf": 2}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections": {"tf": 2.449489742783178}, "practicuscore.connections.get_all": {"tf": 2}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.logout": {"tf": 2}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.7320508075688772}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 2}, "practicuscore.Region.terminate_all_workers": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1.4142135623730951}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 55, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 16}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobConfig": {"tf": 1}}, "df": 1, "d": {"docs": {"practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}}, "df": 7}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "@": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.get_region": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.get_region": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.alive": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 13}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 13}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.db.init": {"tf": 2}, "practicuscore.db.revision": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.Process.predict": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.ImageConfig.pull_policy": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.MQConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.apps": {"tf": 2.23606797749979}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1.4142135623730951}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_agent": {"tf": 1.7320508075688772}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 2}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.7320508075688772}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 82, "d": {"docs": {"practicuscore": {"tf": 5.477225575051661}, "practicuscore.regions": {"tf": 2.449489742783178}, "practicuscore.regions.login": {"tf": 2.6457513110645907}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 2}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models": {"tf": 2.8284271247461903}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.models.deploy": {"tf": 1.7320508075688772}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 2}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.7320508075688772}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 2}, "practicuscore.apps.api": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 2.449489742783178}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.7320508075688772}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 3}, "practicuscore.workflows.deploy": {"tf": 2}, "practicuscore.workflows.get_airflow_params": {"tf": 1.7320508075688772}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 2.6457513110645907}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.distributed": {"tf": 2.449489742783178}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 2.6457513110645907}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 2.23606797749979}, "practicuscore.experiments.configure": {"tf": 2.23606797749979}, "practicuscore.notebooks": {"tf": 2.6457513110645907}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 2.23606797749979}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.git": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.7320508075688772}, "practicuscore.notify": {"tf": 1}, "practicuscore.db.init": {"tf": 2.449489742783178}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 3.3166247903554}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1.4142135623730951}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2.23606797749979}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1.7320508075688772}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process": {"tf": 3.3166247903554}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.get_logger": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.MQConfig": {"tf": 2.23606797749979}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.PrtList": {"tf": 1.4142135623730951}, "practicuscore.APIScope.CompanyWide": {"tf": 1}, "practicuscore.APISpec": {"tf": 1.4142135623730951}, "practicuscore.APISpec.asynchronous": {"tf": 1.4142135623730951}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 2}, "practicuscore.api": {"tf": 1.4142135623730951}}, "df": 150}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker": {"tf": 1}}, "df": 5}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.mq.analyze": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}}, "df": 2}}}}}}}, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 19}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 7}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.engines.delete_spark_session": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.apps": {"tf": 4}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 4}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 3}, "practicuscore.apps.delete": {"tf": 3.7416573867739413}, "practicuscore.apps.delete_version": {"tf": 3.7416573867739413}, "practicuscore.apps.get_list": {"tf": 2.449489742783178}, "practicuscore.apps.get_prefix_list": {"tf": 2}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.apps.prepare_db": {"tf": 3}, "practicuscore.apps.remove_db": {"tf": 3.3166247903554}, "practicuscore.apps.get_app_id": {"tf": 2.449489742783178}, "practicuscore.apps.get_app_prefix": {"tf": 2}, "practicuscore.apps.get_app_name": {"tf": 2}, "practicuscore.apps.get_app_version": {"tf": 2}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 2.449489742783178}, "practicuscore.Region.app_list": {"tf": 2.449489742783178}, "practicuscore.Region.app_prefix_list": {"tf": 2}, "practicuscore.Region.reload_app_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 3.3166247903554}, "practicuscore.Region.delete_app": {"tf": 3.3166247903554}, "practicuscore.Region.delete_app_version": {"tf": 3.1622776601683795}, "practicuscore.Region.prepare_app_db": {"tf": 3.4641016151377544}, "practicuscore.Region.remove_app_db": {"tf": 3.3166247903554}, "practicuscore.Region.get_app_api_session_token": {"tf": 2.8284271247461903}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 42, "s": {"docs": {"practicuscore": {"tf": 2.23606797749979}, "practicuscore.regions": {"tf": 1}, "practicuscore.apps": {"tf": 2.6457513110645907}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.7320508075688772}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}}, "df": 36, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 14, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}}, "df": 7}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}, "s": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.mq": {"tf": 1.7320508075688772}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.apps.delete_version": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.apps": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.containers.update_build_config": {"tf": 2}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"5": {"docs": {"practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.apps.get_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.development_mode": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 2.6457513110645907}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 2.8284271247461903}, "practicuscore.apps.api": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.get_session_token": {"tf": 2.449489742783178}, "practicuscore.apps.test_api": {"tf": 3}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.vault": {"tf": 1.7320508075688772}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.get_app_api_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.predict": {"tf": 2.23606797749979}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.api": {"tf": 1.4142135623730951}}, "df": 32, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 10, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 2}}}}, "\u2014": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.engines": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"practicuscore": {"tf": 2.23606797749979}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.notify": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1.4142135623730951}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1.7320508075688772}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 69, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 24}, "s": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.get_ai_assistants": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.update_connection": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.APIRiskProfile": {"tf": 1}}, "df": 1}, "s": {"docs": {"practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.consumer": {"tf": 1.7320508075688772}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1.4142135623730951}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}}, "df": 8, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.publish": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.git.clone_repo": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.sort_column": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 2.23606797749979}, "practicuscore.regions.get_access_token": {"tf": 1.4142135623730951}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 2.23606797749979}, "practicuscore.auth.get_access_token": {"tf": 1.4142135623730951}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 2}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 2}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}}, "df": 26, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1.4142135623730951}}, "df": 10}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps": {"tf": 1}}, "df": 1}, "s": {"docs": {"practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}, "practicuscore.APIScope.PartnerExternal": {"tf": 1}, "practicuscore.APIScope.Public": {"tf": 1}}, "df": 5}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 5}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.experiments": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Worker.upload_files": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.current_region": {"tf": 1}}, "df": 15}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"practicuscore.engines": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 2}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.distributed.get_client": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}}, "df": 4}}}}, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.APISpec.asynchronous": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1.7320508075688772}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 56}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 8}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.engines": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.regions": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}}, "df": 7}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1}}}, "c": {"1": {"2": {"3": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1, "d": {"1": {"2": {"3": {"4": {"docs": {"practicuscore.Region.update_connection": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.vault": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.auth": {"tf": 2.8284271247461903}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.7320508075688772}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1.4142135623730951}, "practicuscore.get_region_list": {"tf": 1}}, "df": 12}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.auth": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 2}, "d": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.4142135623730951}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.auth": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}}, "df": 14, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 16}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.db.revision": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.terminate": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.scope": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.zip": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.addons": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2.8284271247461903}, "practicuscore.addons.get_list": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_addon_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 2}, "practicuscore.Region.open_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 2.8284271247461903}}, "df": 12, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 11}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.db": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 7}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.addons.get_session_token": {"tf": 2}, "practicuscore.addons.get_list": {"tf": 2}, "practicuscore.Region.addon_list": {"tf": 2}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 2.6457513110645907}, "practicuscore.Region.open_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 2}}, "df": 7, "s": {"docs": {"practicuscore.addons.get_session_token": {"tf": 2}, "practicuscore.Region.get_addon_session_token": {"tf": 2}}, "df": 2}}}, "s": {"docs": {"practicuscore.Process.join": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 2}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 2.449489742783178}, "practicuscore.apps.user_is_admin": {"tf": 2.23606797749979}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 14, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}}, "df": 2}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.quality": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.Region.console_client": {"tf": 1}}, "df": 4}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.revision": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.vault": {"tf": 1.7320508075688772}, "practicuscore.vault.get_secret": {"tf": 2}, "practicuscore.Region.get_secret": {"tf": 2}}, "df": 6, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_rank": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_agent": {"tf": 2}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}}, "df": 2}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.engines": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq": {"tf": 1.7320508075688772}, "practicuscore.mq.test_consumer": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1.7320508075688772}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}}, "df": 6}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1.4142135623730951}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.APIScope.Public": {"tf": 1}, "practicuscore.get_region": {"tf": 1}}, "df": 26}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}}, "df": 10, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 8}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.engines": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 2}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1.4142135623730951}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.MQConfig.headers": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.connections.AthenaConnConf": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 18}}}}, "m": {"docs": {"practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}}, "df": 2, "p": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 4}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.MQConfig.conn_str": {"tf": 1}}, "df": 1, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "@": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.MQConfig.conn_str": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 3}}}}, "s": {"3": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.connections": {"tf": 3.3166247903554}, "practicuscore.connections.UploadS3Conf": {"tf": 1.7320508075688772}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 2}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 2}, "practicuscore.connections.update": {"tf": 2}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 2}, "practicuscore.Region.update_connection": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 15, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 5}}}}}}}}, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.engines": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1.4142135623730951}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 60, "d": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.get_logger": {"tf": 2}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 9}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 15}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}}, "df": 11, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 15, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 14}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 6}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}}, "df": 7}}}}}}, "b": {"docs": {"practicuscore.mq.test_consumer": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1}}, "df": 5}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig.headers": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.MQConfig": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Log": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.connections.ConnConfFactory": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notebooks.configure": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.deploy": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.experiments": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}}, "df": 3}}}}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks.validate_venv": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}}, "df": 4}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 2}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.engines": {"tf": 3.7416573867739413}, "practicuscore.engines.get_spark_session": {"tf": 3.4641016151377544}, "practicuscore.engines.delete_spark_session": {"tf": 2.23606797749979}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 18, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.get_region": {"tf": 1}}, "df": 26, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 36}, "s": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 6}}}, "y": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}}, "df": 5}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}}, "df": 5}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.split_column": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1.4142135623730951}}, "df": 5, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.find_model": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.connections.UploadS3Conf": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.vault": {"tf": 2.23606797749979}, "practicuscore.vault.create_or_update_secret": {"tf": 1.7320508075688772}, "practicuscore.vault.get_secret": {"tf": 2.6457513110645907}, "practicuscore.vault.delete_secret": {"tf": 1.4142135623730951}, "practicuscore.git.clone_repo": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.create_or_update_secret": {"tf": 1.7320508075688772}, "practicuscore.Region.get_secret": {"tf": 2.6457513110645907}, "practicuscore.Region.delete_secret": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}}, "df": 23, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 2}, "practicuscore.vault": {"tf": 2}, "practicuscore.Region.deploy_app": {"tf": 2}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}}, "df": 6}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}}, "df": 2}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 2}}, "s": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.mq.consumer": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1.4142135623730951}, "practicuscore.Worker.wait_until_ready": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 9}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 2.23606797749979}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.experiments": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 3.872983346207417}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 2.449489742783178}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 2}, "practicuscore.Region.get_default_worker_image": {"tf": 1.7320508075688772}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 2}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 29, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.addon_list": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 8}, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 2, "r": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_name": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.PrtList": {"tf": 1}}, "df": 2, "d": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 2}, "r": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 2}, "s": {"docs": {"practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 15}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models.ModelConfig": {"tf": 2}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 2.449489742783178}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 2}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 44, "s": {"docs": {"practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 11}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 2}, "practicuscore.apps.get_deployment_setting_list": {"tf": 2.23606797749979}, "practicuscore.apps.prepare_db": {"tf": 1.7320508075688772}, "practicuscore.apps.remove_db": {"tf": 1.7320508075688772}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 2.23606797749979}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.7320508075688772}, "practicuscore.Region.prepare_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_app_db": {"tf": 1.7320508075688772}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}}, "df": 15, "s": {"docs": {"practicuscore.apps.get_deployment_setting_list": {"tf": 1.7320508075688772}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1.7320508075688772}, "practicuscore.Region.prepare_app_db": {"tf": 1.7320508075688772}, "practicuscore.Process.save_ws": {"tf": 1}}, "df": 10}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.db": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 2}, "practicuscore.apps": {"tf": 2}, "practicuscore.apps.get_session_token": {"tf": 2}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_email": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.7320508075688772}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines": {"tf": 2.449489742783178}, "practicuscore.engines.get_spark_session": {"tf": 2}, "practicuscore.engines.delete_spark_session": {"tf": 2.23606797749979}, "practicuscore.addons.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_addon_session_token": {"tf": 1.7320508075688772}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}}, "df": 24, "s": {"docs": {"practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.interactive": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 3}}, "d": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notify": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notify": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.Worker.ping": {"tf": 1}}, "df": 2}}, "t": {"docs": {"practicuscore.notify.Notification": {"tf": 1}}, "df": 1}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 7, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}}, "df": 5, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}}, "df": 10, "s": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 8}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_image_list": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"practicuscore.Process.sort_column": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.worker_image_list": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1.4142135623730951}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_cookie": {"tf": 1}}, "df": 12, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.notify": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 2}}, "df": 5}}, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}}, "df": 11}, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1.4142135623730951}}, "df": 3, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.status": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 9, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.containers": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 4}}, "s": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.set_logging_level": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.running_on_a_cluster": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}}, "df": 4}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 2}}, "df": 2}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}}, "df": 6, "d": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}}, "df": 16}, "s": {"docs": {"practicuscore.Region.create_connection": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1.4142135623730951}}, "df": 3}}}}, "p": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.mq.test_consumer": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"practicuscore.regions.login": {"tf": 2.6457513110645907}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2.23606797749979}, "practicuscore.regions.change_password": {"tf": 1.4142135623730951}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.deploy": {"tf": 2.449489742783178}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.load_config": {"tf": 1.4142135623730951}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 2.23606797749979}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 3}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_version": {"tf": 1.7320508075688772}, "practicuscore.apps.test_api": {"tf": 2}, "practicuscore.apps.prepare_db": {"tf": 2.23606797749979}, "practicuscore.apps.remove_db": {"tf": 1.7320508075688772}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1.7320508075688772}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1.7320508075688772}, "practicuscore.workflows.get_dag_info": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 2.449489742783178}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.open_dashboard": {"tf": 1.7320508075688772}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 2.6457513110645907}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1.4142135623730951}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 2.23606797749979}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 2.449489742783178}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault.create_or_update_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1.7320508075688772}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 2.6457513110645907}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.db.revision": {"tf": 1.4142135623730951}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 2.23606797749979}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 2.6457513110645907}, "practicuscore.Region.deploy_app": {"tf": 3.1622776601683795}, "practicuscore.Region.delete_app": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app_version": {"tf": 1.7320508075688772}, "practicuscore.Region.prepare_app_db": {"tf": 2.23606797749979}, "practicuscore.Region.remove_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_workflow": {"tf": 1.7320508075688772}, "practicuscore.Region.run_task": {"tf": 2.23606797749979}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.create_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.update_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.create_or_update_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.get_secret": {"tf": 1.7320508075688772}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1.4142135623730951}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1.7320508075688772}, "practicuscore.Worker.download_files": {"tf": 1.4142135623730951}, "practicuscore.Worker.run_task": {"tf": 1.7320508075688772}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.load": {"tf": 1.4142135623730951}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 2.23606797749979}, "practicuscore.Process.predict_with_offline_model": {"tf": 2.23606797749979}, "practicuscore.Process.join": {"tf": 2.449489742783178}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 2.23606797749979}, "practicuscore.api": {"tf": 1}}, "df": 167, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1.4142135623730951}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 35, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.load_config": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.host_dns": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.model_validate": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.WorkerConfig.model_validate": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}}, "df": 7}, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1, "d": {"docs": {"practicuscore.auth": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.get_dag_info": {"tf": 1.4142135623730951}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}}, "df": 5, "d": {"docs": {"practicuscore.connections": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.run_step": {"tf": 2.449489742783178}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 13}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 5, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 5}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.quality": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"practicuscore.quality": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.upgrade": {"tf": 2}, "practicuscore.Region": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections.SqLiteConnConf": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections.CustomDBConnConf": {"tf": 1}, "practicuscore.db.init": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.db.init": {"tf": 2}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 2}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.auth.login": {"tf": 2}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}}, "df": 5}, "d": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}}, "df": 3}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {"practicuscore.connections.update": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1.4142135623730951}, "practicuscore.APISpec.stateful": {"tf": 1}}, "df": 5}}, "p": {"docs": {"practicuscore.connections.HanaConnConf": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.git": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 6, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"practicuscore.git": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.WorkerConfig.git_configs": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 6, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.get_local_worker": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.run_snippet": {"tf": 2}}, "df": 1, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.Process": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.Region": {"tf": 1}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 5, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}}, "df": 9, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.delete": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 12}}}, "w": {"docs": {"practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 2}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 2}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 9}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.terminating": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2}, "practicuscore.apps.deploy": {"tf": 2}, "practicuscore.workflows": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_app": {"tf": 2}, "practicuscore.Region.run_task": {"tf": 2.23606797749979}, "practicuscore.Worker.run_task": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 2}}, "df": 14, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 2}, "practicuscore.Worker": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 7}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}}, "df": 2, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 3}, "r": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature_json": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.apps.prepare_db": {"tf": 1.7320508075688772}, "practicuscore.apps.remove_db": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_app_db": {"tf": 1}}, "df": 10, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}}, "df": 3}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.create_model_config": {"tf": 1.7320508075688772}}, "df": 1}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}}, "df": 6}}}, "e": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.quality": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}}, "df": 7}}}}}, "e": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}}, "df": 3, "r": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.test_api": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature": {"tf": 2.23606797749979}, "practicuscore.models.get_model_signature_json": {"tf": 2.23606797749979}, "practicuscore.models.create_model_config": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.7320508075688772}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 2.449489742783178}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 2}, "practicuscore.Region.reload_worker_size_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.size": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_logs": {"tf": 1.7320508075688772}, "practicuscore.Worker.view_logs": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}}, "df": 12, "s": {"docs": {"practicuscore.Region.worker_size_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.prepare_app_db": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.4142135623730951}}, "df": 2, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.zip": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}}, "df": 3}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}}, "df": 1, "l": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.4142135623730951}}, "df": 3}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 3}}}}}, "v": {"1": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1}}, "df": 8}, "2": {"4": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"docs": {"practicuscore.apps.deploy": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1.7320508075688772}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}}, "df": 13, "s": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}}, "df": 2}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 5}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.PrtList": {"tf": 2}}, "df": 15}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_venv": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 10}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models": {"tf": 1.7320508075688772}, "practicuscore.models.deploy": {"tf": 2.23606797749979}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.7320508075688772}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 3}, "practicuscore.apps.get_app_version": {"tf": 2.449489742783178}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1.7320508075688772}, "practicuscore.Region.delete_app_version": {"tf": 2.23606797749979}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.4142135623730951}}, "df": 15, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 2}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}, "d": {"docs": {"practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 2}, "practicuscore.notebooks.validate_venv": {"tf": 1.7320508075688772}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.vault": {"tf": 2.23606797749979}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.7320508075688772}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.7320508075688772}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}}, "df": 12}}}, "r": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Worker.view_logs": {"tf": 1}}, "df": 10, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}}, "df": 7}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 7}}}}, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}, "y": {"docs": {"practicuscore.APISpec.deterministic": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.DistJobType": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}}, "df": 4}, "d": {"docs": {"practicuscore.WorkerConfig.model_validate": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notebooks.validate_history": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.vault": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 2}, "practicuscore.Region.get_secret": {"tf": 2}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1.4142135623730951}, "practicuscore.get_logger": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.7320508075688772}}, "df": 13, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 9}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 3}}}}}}}}}, "s": {"docs": {"practicuscore.Worker.open_vscode": {"tf": 2.23606797749979}}, "df": 1, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.git": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.delete": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}}, "df": 3}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}}}}}}}}}, "r": {"docs": {"practicuscore": {"tf": 2.8284271247461903}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1.7320508075688772}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 2.23606797749979}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 3.1622776601683795}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.load_config": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1.7320508075688772}, "practicuscore.connections.get_all": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 2.23606797749979}, "practicuscore.connections.update": {"tf": 2.23606797749979}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 2.23606797749979}, "practicuscore.distributed.open_dashboard": {"tf": 1.7320508075688772}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 2.6457513110645907}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault": {"tf": 1.4142135623730951}, "practicuscore.vault.create_or_update_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.git": {"tf": 1.7320508075688772}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region": {"tf": 2}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2.8284271247461903}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 2}, "practicuscore.Region.terminate_worker": {"tf": 2.23606797749979}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.create_or_update_secret": {"tf": 1.7320508075688772}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1.4142135623730951}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1.4142135623730951}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 2}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 2}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1.4142135623730951}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1.4142135623730951}, "practicuscore.APIRiskProfile.Medium": {"tf": 1.4142135623730951}, "practicuscore.APIRiskProfile.High": {"tf": 1.4142135623730951}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1.7320508075688772}, "practicuscore.region_factory": {"tf": 2.23606797749979}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 3.1622776601683795}}, "df": 187, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}}, "df": 1, "d": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.distributed": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.workflows.deploy": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notebooks": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections.OracleConnConf": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}}, "df": 3}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.mq": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 20}, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {"practicuscore.regions": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.quality": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1.4142135623730951}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 10, "s": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.connections.OpenSearchConnConf": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 5}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 27, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 10}}}}, "s": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}}, "df": 4}}}}}}, "f": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions": {"tf": 1.7320508075688772}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.logout": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 3.605551275463989}, "practicuscore.models.deploy": {"tf": 1.7320508075688772}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 2}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 2.23606797749979}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 1.7320508075688772}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.get_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 2}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 2}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1.7320508075688772}, "practicuscore.connections.get": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_id": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_rank": {"tf": 2}, "practicuscore.distributed.get_gpu_count": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_coordinator": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1.4142135623730951}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 2.449489742783178}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.notify": {"tf": 1}, "practicuscore.notify.send": {"tf": 2.449489742783178}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1.4142135623730951}, "practicuscore.addons.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.addons.get_list": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.7320508075688772}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1.4142135623730951}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1.4142135623730951}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1.4142135623730951}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1.7320508075688772}, "practicuscore.Worker.view_logs": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1.4142135623730951}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 2.23606797749979}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1.4142135623730951}, "practicuscore.APIScope": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 2}, "practicuscore.api": {"tf": 1}}, "df": 207, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.distributed": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db": {"tf": 2}, "practicuscore.db.upgrade": {"tf": 2}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1.4142135623730951}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.Region.logout": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 14, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.notebooks": {"tf": 2.449489742783178}, "practicuscore.notebooks.configure": {"tf": 3.1622776601683795}, "practicuscore.notebooks.execute_notebook": {"tf": 2.449489742783178}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.7320508075688772}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 2}, "practicuscore.APISpec.deterministic": {"tf": 1.4142135623730951}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 16, "s": {"docs": {"practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.engines": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"practicuscore": {"tf": 2.8284271247461903}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2.6457513110645907}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 2}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1.7320508075688772}, "practicuscore.distributed.open_dashboard": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_gpu_count": {"tf": 1.7320508075688772}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 2}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2.8284271247461903}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 2}, "practicuscore.Region.open_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 2}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1.4142135623730951}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.7320508075688772}, "practicuscore.Worker.proc_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.APIScope.Public": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.run_task": {"tf": 2.6457513110645907}, "practicuscore.api": {"tf": 1}}, "df": 77, "e": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 32}, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 8}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}, "practicuscore.PrtList": {"tf": 1.7320508075688772}, "practicuscore.PrtList.read_only": {"tf": 1.4142135623730951}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1.4142135623730951}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 49}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}}, "df": 2}}}}, "s": {"docs": {"practicuscore.addons": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2}, "practicuscore.addons.get_list": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 2}}, "df": 7}}, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 2.23606797749979}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 2.23606797749979}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}}, "df": 12}, "b": {"docs": {}, "df": 0, "j": {"docs": {"practicuscore.WorkerConfig.model_validate": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 37, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.connections.get_all": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 9}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.apps.get_session_token": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.update_values": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}}, "df": 9, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 26}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.change_password": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1.4142135623730951}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}}, "df": 7, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.change_password": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}}, "df": 6}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Worker.region": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {"practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.get_local_worker": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {"practicuscore.Region.update_connection": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {"practicuscore.DistJobConfig": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore": {"tf": 3}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.db.revision": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process": {"tf": 1.7320508075688772}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 78, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 23}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 22}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 2.23606797749979}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 27}, "d": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1.4142135623730951}}, "df": 5, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore": {"tf": 4.47213595499958}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.current_region": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.get_local_worker": {"tf": 2}, "practicuscore.regions.create_worker": {"tf": 2.6457513110645907}, "practicuscore.regions.create_workspace": {"tf": 2}, "practicuscore.regions.get_or_create_worker": {"tf": 2}, "practicuscore.regions.run_task": {"tf": 3.4641016151377544}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 2.6457513110645907}, "practicuscore.workflows.test_tasks": {"tf": 2.6457513110645907}, "practicuscore.distributed": {"tf": 2}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_rank": {"tf": 2}, "practicuscore.distributed.get_gpu_count": {"tf": 1.7320508075688772}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_coordinator": {"tf": 1.7320508075688772}, "practicuscore.distributed.is_agent": {"tf": 1.7320508075688772}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.engines": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 2}, "practicuscore.Region.worker_list": {"tf": 2.23606797749979}, "practicuscore.Region.reload_worker_list": {"tf": 2}, "practicuscore.Region.get_default_worker_size": {"tf": 2}, "practicuscore.Region.get_default_worker_image": {"tf": 2}, "practicuscore.Region.create_worker": {"tf": 3.605551275463989}, "practicuscore.Region.create_workspace": {"tf": 2}, "practicuscore.Region.get_local_worker": {"tf": 2.6457513110645907}, "practicuscore.Region.get_or_create_worker": {"tf": 3.4641016151377544}, "practicuscore.Region.run_task": {"tf": 3.7416573867739413}, "practicuscore.Region.get_worker": {"tf": 2.6457513110645907}, "practicuscore.Region.remove_worker_from_cache": {"tf": 2.6457513110645907}, "practicuscore.Region.terminate_worker": {"tf": 3}, "practicuscore.Region.worker_size_list": {"tf": 2.23606797749979}, "practicuscore.Region.reload_worker_size_list": {"tf": 1.7320508075688772}, "practicuscore.Region.worker_image_list": {"tf": 2}, "practicuscore.Region.reload_worker_image_list": {"tf": 1.7320508075688772}, "practicuscore.Worker": {"tf": 3.4641016151377544}, "practicuscore.Worker.__init__": {"tf": 2.449489742783178}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1.7320508075688772}, "practicuscore.Worker.instance_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1.4142135623730951}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1.7320508075688772}, "practicuscore.Worker.size": {"tf": 1.4142135623730951}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1.4142135623730951}, "practicuscore.Worker.ready": {"tf": 1.4142135623730951}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1.4142135623730951}, "practicuscore.Worker.assign_node": {"tf": 1.7320508075688772}, "practicuscore.Worker.local_worker_factory": {"tf": 2.23606797749979}, "practicuscore.Worker.terminate": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 2}, "practicuscore.Worker.download_files": {"tf": 1.7320508075688772}, "practicuscore.Worker.run_task": {"tf": 2}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1.4142135623730951}, "practicuscore.Worker.kill_all_procs": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1.7320508075688772}, "practicuscore.Worker.wait_until_ready": {"tf": 2.23606797749979}, "practicuscore.Worker.get_logs": {"tf": 1.7320508075688772}, "practicuscore.Worker.view_logs": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1.7320508075688772}, "practicuscore.Process.__init__": {"tf": 2.23606797749979}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1.4142135623730951}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 2}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.service_type": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.create_worker": {"tf": 2.6457513110645907}, "practicuscore.current_region": {"tf": 1.4142135623730951}, "practicuscore.get_local_worker": {"tf": 2}, "practicuscore.get_or_create_worker": {"tf": 2}, "practicuscore.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 2}, "practicuscore.run_task": {"tf": 3.4641016151377544}}, "df": 138, "s": {"docs": {"practicuscore": {"tf": 2.23606797749979}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.workflows": {"tf": 1.7320508075688772}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 2.23606797749979}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.Region": {"tf": 2.449489742783178}, "practicuscore.Region.worker_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 2}, "practicuscore.Region.terminate_all_workers": {"tf": 1.7320508075688772}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 24}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 1.7320508075688772}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.4142135623730951}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 20}}}}}}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 13}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 2}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 2.8284271247461903}, "practicuscore.Region.get_workspace_credentials": {"tf": 2}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 2.23606797749979}, "practicuscore.Worker.get_workspace_credentials": {"tf": 2}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.create_workspace": {"tf": 2}}, "df": 16, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_image_list": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 9}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.Worker": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.workflows": {"tf": 1.7320508075688772}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 2.23606797749979}, "practicuscore.Process": {"tf": 1}}, "df": 6, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 2.23606797749979}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 11, "\u2014": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1.4142135623730951}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}}, "df": 17}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 19}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 2.23606797749979}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 11}}}}, "n": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1.4142135623730951}}, "df": 14}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}}, "df": 13}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.run_custom_code": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 14, "s": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 5}}, "y": {"docs": {"practicuscore.connections": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.log_level": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}}, "df": 3}}, "s": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}, "t": {"docs": {"practicuscore.db.init": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 5, "o": {"docs": {"practicuscore": {"tf": 3.3166247903554}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 2}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.run_task": {"tf": 2.8284271247461903}, "practicuscore.models": {"tf": 2}, "practicuscore.models.ModelConfig": {"tf": 2}, "practicuscore.models.deploy": {"tf": 2.23606797749979}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.models.zip": {"tf": 1.7320508075688772}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 2.23606797749979}, "practicuscore.apps.deploy": {"tf": 3.3166247903554}, "practicuscore.apps.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 2}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1.7320508075688772}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 2}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 2}, "practicuscore.workflows.deploy": {"tf": 2.23606797749979}, "practicuscore.workflows.get_airflow_params": {"tf": 1.4142135623730951}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 2}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 3}, "practicuscore.connections.UploadS3Conf": {"tf": 2}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 2}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 2}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines": {"tf": 2.449489742783178}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 2.6457513110645907}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.notebooks.execute_notebook": {"tf": 3.4641016151377544}, "practicuscore.notebooks.find_notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}, "practicuscore.quality": {"tf": 2.449489742783178}, "practicuscore.quality.check": {"tf": 2.23606797749979}, "practicuscore.quality.format": {"tf": 2.8284271247461903}, "practicuscore.containers": {"tf": 2.23606797749979}, "practicuscore.containers.build_image": {"tf": 3.4641016151377544}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.git": {"tf": 1.4142135623730951}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.mq": {"tf": 1.7320508075688772}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 2.449489742783178}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 3.3166247903554}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 2.6457513110645907}, "practicuscore.db.upgrade": {"tf": 1.7320508075688772}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2.23606797749979}, "practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 2.6457513110645907}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 2}, "practicuscore.Region.run_task": {"tf": 3}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.get_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 2.6457513110645907}, "practicuscore.Worker.download_files": {"tf": 1.7320508075688772}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1.4142135623730951}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1.7320508075688772}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.save": {"tf": 1.4142135623730951}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.7320508075688772}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 2.6457513110645907}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.service_url": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.env_variables": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 2.23606797749979}, "practicuscore.WorkerConfig.model_dump": {"tf": 3.605551275463989}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig": {"tf": 2.23606797749979}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.__init__": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig": {"tf": 2}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.routing_key": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.PrtList": {"tf": 2.6457513110645907}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.get_region": {"tf": 1}, "practicuscore.run_task": {"tf": 2.8284271247461903}}, "df": 216, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}}, "df": 6}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.login": {"tf": 3.7416573867739413}, "practicuscore.regions.get_access_token": {"tf": 1.7320508075688772}, "practicuscore.regions.get_refresh_token": {"tf": 1.7320508075688772}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 2}, "practicuscore.models.get_session_token": {"tf": 3}, "practicuscore.apps": {"tf": 2.23606797749979}, "practicuscore.apps.get_session_token": {"tf": 2.8284271247461903}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 3.7416573867739413}, "practicuscore.auth.get_access_token": {"tf": 1.7320508075688772}, "practicuscore.auth.get_refresh_token": {"tf": 1.7320508075688772}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2}, "practicuscore.Region.__init__": {"tf": 2}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 2.8284271247461903}, "practicuscore.Region.get_app_api_session_token": {"tf": 2.8284271247461903}, "practicuscore.Region.get_addon_session_token": {"tf": 2}, "practicuscore.Region.get_access_token": {"tf": 2.6457513110645907}, "practicuscore.Region.get_refresh_token": {"tf": 2.6457513110645907}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 2.23606797749979}, "practicuscore.Worker.open_vscode": {"tf": 2.23606797749979}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_password": {"tf": 1}}, "df": 28, "s": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 7, "\u2014": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.auth": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.quality": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 5}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.PrtList": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq": {"tf": 2.449489742783178}, "practicuscore.mq.apply_topology": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.MQConfig": {"tf": 2}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.MQConfig.exchange_type": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1.4142135623730951}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 4.358898943540674}, "practicuscore.regions": {"tf": 2.23606797749979}, "practicuscore.regions.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 4}, "practicuscore.regions.logout": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1.7320508075688772}, "practicuscore.regions.get_default_region": {"tf": 2}, "practicuscore.regions.current_region": {"tf": 2.23606797749979}, "practicuscore.regions.region_factory": {"tf": 2}, "practicuscore.regions.set_default_region": {"tf": 1.7320508075688772}, "practicuscore.regions.get_local_worker": {"tf": 2}, "practicuscore.regions.create_worker": {"tf": 2.6457513110645907}, "practicuscore.regions.create_workspace": {"tf": 1.7320508075688772}, "practicuscore.regions.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.run_task": {"tf": 3.1622776601683795}, "practicuscore.regions.auto_login": {"tf": 1.4142135623730951}, "practicuscore.regions.change_password": {"tf": 2}, "practicuscore.regions.get_access_token": {"tf": 1.7320508075688772}, "practicuscore.regions.get_refresh_token": {"tf": 1.7320508075688772}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 2.8284271247461903}, "practicuscore.models": {"tf": 1.7320508075688772}, "practicuscore.models.ModelConfig": {"tf": 4.795831523312719}, "practicuscore.models.deploy": {"tf": 3.3166247903554}, "practicuscore.models.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.models.get_mlflow_data_type": {"tf": 2.23606797749979}, "practicuscore.models.get_model_signature": {"tf": 2.6457513110645907}, "practicuscore.models.get_model_signature_json": {"tf": 2}, "practicuscore.models.create_model_config": {"tf": 2.8284271247461903}, "practicuscore.models.zip": {"tf": 2}, "practicuscore.models.unzip": {"tf": 1.7320508075688772}, "practicuscore.apps": {"tf": 3}, "practicuscore.apps.api": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 5.0990195135927845}, "practicuscore.apps.get_session_token": {"tf": 2.23606797749979}, "practicuscore.apps.test_app": {"tf": 3}, "practicuscore.apps.delete": {"tf": 2.6457513110645907}, "practicuscore.apps.delete_version": {"tf": 2.6457513110645907}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 3.3166247903554}, "practicuscore.apps.prepare_db": {"tf": 1.7320508075688772}, "practicuscore.apps.remove_db": {"tf": 2.8284271247461903}, "practicuscore.apps.secure_page": {"tf": 3.3166247903554}, "practicuscore.apps.get_user_id": {"tf": 2.449489742783178}, "practicuscore.apps.get_username": {"tf": 2.449489742783178}, "practicuscore.apps.get_user_email": {"tf": 2.23606797749979}, "practicuscore.apps.get_user_groups": {"tf": 2.6457513110645907}, "practicuscore.apps.user_is_admin": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_id": {"tf": 1.7320508075688772}, "practicuscore.apps.get_app_prefix": {"tf": 1.7320508075688772}, "practicuscore.apps.get_app_name": {"tf": 1.7320508075688772}, "practicuscore.apps.get_app_version": {"tf": 1.7320508075688772}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 2.449489742783178}, "practicuscore.apps.get_cookie": {"tf": 2}, "practicuscore.apps.delete_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 2}, "practicuscore.workflows.deploy": {"tf": 3.605551275463989}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.7320508075688772}, "practicuscore.workflows.get_dag_info": {"tf": 2.449489742783178}, "practicuscore.workflows.generate_files": {"tf": 4.123105625617661}, "practicuscore.workflows.test_tasks": {"tf": 3.1622776601683795}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.UploadS3Conf": {"tf": 1.7320508075688772}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 2}, "practicuscore.connections.get_all": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 2.6457513110645907}, "practicuscore.connections.create": {"tf": 3.3166247903554}, "practicuscore.connections.update": {"tf": 3.1622776601683795}, "practicuscore.distributed": {"tf": 2}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 2.6457513110645907}, "practicuscore.distributed.wait_for_running": {"tf": 2.6457513110645907}, "practicuscore.distributed.live_view": {"tf": 2}, "practicuscore.distributed.view_log": {"tf": 2}, "practicuscore.distributed.get_client": {"tf": 2}, "practicuscore.distributed.open_dashboard": {"tf": 2.449489742783178}, "practicuscore.distributed.get_job_id": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_rank": {"tf": 2.23606797749979}, "practicuscore.distributed.get_gpu_count": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 2.23606797749979}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 2}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.set_default_region": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 4}, "practicuscore.auth.logout": {"tf": 1.4142135623730951}, "practicuscore.auth.auto_login": {"tf": 1.4142135623730951}, "practicuscore.auth.change_password": {"tf": 2}, "practicuscore.auth.get_workspace_credentials": {"tf": 2.8284271247461903}, "practicuscore.auth.get_access_token": {"tf": 1.7320508075688772}, "practicuscore.auth.get_refresh_token": {"tf": 1.7320508075688772}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines": {"tf": 2}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 2}, "practicuscore.experiments": {"tf": 2.23606797749979}, "practicuscore.experiments.configure": {"tf": 3.3166247903554}, "practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 2.449489742783178}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.get_venv_name": {"tf": 1.7320508075688772}, "practicuscore.notebooks.validate_venv": {"tf": 2.23606797749979}, "practicuscore.notebooks.execute_notebook": {"tf": 4}, "practicuscore.notebooks.find_notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}, "practicuscore.quality": {"tf": 2.23606797749979}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 3.872983346207417}, "practicuscore.containers.update_build_config": {"tf": 2.449489742783178}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 2}, "practicuscore.vault.get_secret": {"tf": 2}, "practicuscore.vault.delete_secret": {"tf": 1.7320508075688772}, "practicuscore.git": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.consumer": {"tf": 2}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 2.23606797749979}, "practicuscore.mq.export_topology": {"tf": 2.8284271247461903}, "practicuscore.notify": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 4.242640687119285}, "practicuscore.db": {"tf": 2.6457513110645907}, "practicuscore.db.init": {"tf": 3.7416573867739413}, "practicuscore.db.revision": {"tf": 2.23606797749979}, "practicuscore.db.upgrade": {"tf": 1.7320508075688772}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 3}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 2.449489742783178}, "practicuscore.Region.url": {"tf": 1.4142135623730951}, "practicuscore.Region.email": {"tf": 1.4142135623730951}, "practicuscore.Region.username": {"tf": 1.4142135623730951}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 2}, "practicuscore.Region.key": {"tf": 1.4142135623730951}, "practicuscore.Region.is_default": {"tf": 1.7320508075688772}, "practicuscore.Region.worker_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_list": {"tf": 1.7320508075688772}, "practicuscore.Region.get_default_worker_size": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_image": {"tf": 2}, "practicuscore.Region.create_worker": {"tf": 2}, "practicuscore.Region.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.Region.get_local_worker": {"tf": 2}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_app": {"tf": 3.605551275463989}, "practicuscore.Region.delete_app": {"tf": 1.7320508075688772}, "practicuscore.Region.delete_app_version": {"tf": 2}, "practicuscore.Region.prepare_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_app_db": {"tf": 2.8284271247461903}, "practicuscore.Region.deploy_workflow": {"tf": 1.7320508075688772}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 3.605551275463989}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1.7320508075688772}, "practicuscore.Region.open_addon": {"tf": 1.7320508075688772}, "practicuscore.Region.get_addon_session_token": {"tf": 3}, "practicuscore.Region.get_worker": {"tf": 2}, "practicuscore.Region.get_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.remove_worker_from_cache": {"tf": 2}, "practicuscore.Region.terminate_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.get_groups": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 2.449489742783178}, "practicuscore.Region.update_connection": {"tf": 2.8284271247461903}, "practicuscore.Region.create_or_update_secret": {"tf": 2}, "practicuscore.Region.get_secret": {"tf": 2}, "practicuscore.Region.delete_secret": {"tf": 1.7320508075688772}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_access_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_refresh_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.Region.recreate_model_deployment": {"tf": 1.4142135623730951}, "practicuscore.Region.change_password": {"tf": 1.7320508075688772}, "practicuscore.Region.get_ai_assistants": {"tf": 2}, "practicuscore.Worker": {"tf": 2.449489742783178}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1.4142135623730951}, "practicuscore.Worker.instance_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_name": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr": {"tf": 1.7320508075688772}, "practicuscore.Worker.server_addr_fqdn": {"tf": 2.23606797749979}, "practicuscore.Worker.image": {"tf": 1.4142135623730951}, "practicuscore.Worker.image_id": {"tf": 1.7320508075688772}, "practicuscore.Worker.creation_time": {"tf": 1.4142135623730951}, "practicuscore.Worker.name": {"tf": 1.4142135623730951}, "practicuscore.Worker.size": {"tf": 1.7320508075688772}, "practicuscore.Worker.total_mem_gb": {"tf": 1.4142135623730951}, "practicuscore.Worker.cpu": {"tf": 1.4142135623730951}, "practicuscore.Worker.gpu": {"tf": 1.4142135623730951}, "practicuscore.Worker.status": {"tf": 1.4142135623730951}, "practicuscore.Worker.ready": {"tf": 1.4142135623730951}, "practicuscore.Worker.job_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminating": {"tf": 1.4142135623730951}, "practicuscore.Worker.assign_node": {"tf": 1.7320508075688772}, "practicuscore.Worker.local_worker_factory": {"tf": 2.23606797749979}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.load": {"tf": 2.23606797749979}, "practicuscore.Worker.upload_files": {"tf": 2.8284271247461903}, "practicuscore.Worker.download_files": {"tf": 2.449489742783178}, "practicuscore.Worker.run_task": {"tf": 2.6457513110645907}, "practicuscore.Worker.check_task": {"tf": 2}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 2}, "practicuscore.Worker.kill_proc": {"tf": 1.7320508075688772}, "practicuscore.Worker.open_notebook": {"tf": 2.23606797749979}, "practicuscore.Worker.open_vscode": {"tf": 2}, "practicuscore.Worker.open_workspace": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1.7320508075688772}, "practicuscore.Worker.wait_until_ready": {"tf": 2}, "practicuscore.Worker.get_logs": {"tf": 2.449489742783178}, "practicuscore.Worker.view_logs": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 2.6457513110645907}, "practicuscore.Process.__init__": {"tf": 1.7320508075688772}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1.4142135623730951}, "practicuscore.Process.get_csv_header": {"tf": 1.4142135623730951}, "practicuscore.Process.proc_id": {"tf": 1.4142135623730951}, "practicuscore.Process.os_pid": {"tf": 2}, "practicuscore.Process.conn_conf": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_info": {"tf": 1.4142135623730951}, "practicuscore.Process.worker_name": {"tf": 1.7320508075688772}, "practicuscore.Process.run_step": {"tf": 2}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1.4142135623730951}, "practicuscore.Process.show_logs": {"tf": 1.4142135623730951}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1.7320508075688772}, "practicuscore.Process.load": {"tf": 1.7320508075688772}, "practicuscore.Process.save": {"tf": 2}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1.7320508075688772}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 2}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 2.449489742783178}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 3}, "practicuscore.Process.wait_until_done": {"tf": 1.4142135623730951}, "practicuscore.Process.get_df_copy": {"tf": 1.7320508075688772}, "practicuscore.Process.kill": {"tf": 1.7320508075688772}, "practicuscore.get_logger": {"tf": 2.6457513110645907}, "practicuscore.Log": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 3.1622776601683795}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 2}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_dump": {"tf": 3.1622776601683795}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.secret_name": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 2}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 2}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.PrtList": {"tf": 1.4142135623730951}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1.7320508075688772}, "practicuscore.PrtList.to_json": {"tf": 2.449489742783178}, "practicuscore.PrtList.to_dict_list": {"tf": 1.7320508075688772}, "practicuscore.APIExecutionTarget": {"tf": 1.7320508075688772}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1.4142135623730951}, "practicuscore.APIScope": {"tf": 1.4142135623730951}, "practicuscore.APIScope.CompanyWide": {"tf": 1}, "practicuscore.APIScope.Public": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1.4142135623730951}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1.4142135623730951}, "practicuscore.APISpec.risk_profile": {"tf": 1.4142135623730951}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1.7320508075688772}, "practicuscore.APISpec.stateful": {"tf": 1.4142135623730951}, "practicuscore.APISpec.asynchronous": {"tf": 2}, "practicuscore.APISpec.maturity_level": {"tf": 1.4142135623730951}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}, "practicuscore.get_default_region": {"tf": 2}, "practicuscore.create_worker": {"tf": 2.6457513110645907}, "practicuscore.current_region": {"tf": 2.23606797749979}, "practicuscore.get_local_worker": {"tf": 2}, "practicuscore.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1.7320508075688772}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 2}, "practicuscore.set_default_region": {"tf": 1.7320508075688772}, "practicuscore.create_workspace": {"tf": 1.7320508075688772}, "practicuscore.run_task": {"tf": 3.1622776601683795}, "practicuscore.api": {"tf": 1.4142135623730951}}, "df": 387, "i": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 12}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 12}}, "y": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.db.init": {"tf": 1}}, "df": 5}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.git.pull_repo": {"tf": 1}}, "df": 3}}, "m": {"docs": {"practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 7, "e": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 2.449489742783178}, "practicuscore.apps.delete_cookie": {"tf": 1.4142135623730951}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines": {"tf": 1.7320508075688772}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1}}, "df": 60}, "n": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.current_region": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_id": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_rank": {"tf": 2}, "practicuscore.distributed.get_gpu_count": {"tf": 1.7320508075688772}, "practicuscore.distributed.is_coordinator": {"tf": 1.7320508075688772}, "practicuscore.distributed.is_agent": {"tf": 1.4142135623730951}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.7320508075688772}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1.4142135623730951}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1.7320508075688772}, "practicuscore.Region.worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1.4142135623730951}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Worker.proc_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}, "practicuscore.current_region": {"tf": 1.4142135623730951}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 142}, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 7, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.vault": {"tf": 1}, "practicuscore.Log": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.threads": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 2}, "practicuscore.notebooks": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"practicuscore.Process.async_op_issue_list": {"tf": 1}}, "df": 1}}, "e": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.run_step": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Process": {"tf": 2}}, "df": 4}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.predict": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.DistJobConfig.retries": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.py_file": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.Worker": {"tf": 1}, "practicuscore.DistJobType": {"tf": 2}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 2}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.7320508075688772}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 2.449489742783178}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.quality.check": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 2.449489742783178}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 2}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_notebook": {"tf": 1.7320508075688772}, "practicuscore.Worker.open_vscode": {"tf": 1.7320508075688772}, "practicuscore.Worker.open_workspace": {"tf": 1.4142135623730951}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 96}, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Process.predict": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.load_config": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.run_custom_sql": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.connections.TrinoConnConf": {"tf": 1}}, "df": 1}}, "p": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1}}, "y": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"1": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 1}, "2": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 1}, "docs": {"practicuscore": {"tf": 2.23606797749979}, "practicuscore.regions.run_task": {"tf": 2}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 2.449489742783178}, "practicuscore.workflows.test_tasks": {"tf": 3}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 2.23606797749979}, "practicuscore.Worker": {"tf": 1.7320508075688772}, "practicuscore.Worker.run_task": {"tf": 2.6457513110645907}, "practicuscore.Worker.check_task": {"tf": 3}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.run_task": {"tf": 2}}, "df": 16, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.7320508075688772}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows": {"tf": 2.23606797749979}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 2.23606797749979}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 17}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 1, "n": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}}, "df": 3}, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.get_model_signature": {"tf": 2.23606797749979}, "practicuscore.models.get_model_signature_json": {"tf": 2}, "practicuscore.models.create_model_config": {"tf": 1.7320508075688772}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 7}}}}, "b": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.run_custom_sql": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.APISpec.custom_attributes": {"tf": 2.23606797749979}}, "df": 2, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 15, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.ImageConfig": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 2}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 13, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1.4142135623730951}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1.4142135623730951}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {"practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"practicuscore.notebooks": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.configure": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1.7320508075688772}}, "df": 2}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 2}, "practicuscore.models.create_model_config": {"tf": 2}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 2}, "practicuscore.Region.get_default_worker_image": {"tf": 1.7320508075688772}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 31, "s": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 7}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.auth": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}}, "df": 14}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 2}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.get_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 14, "s": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 13}, "d": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1.4142135623730951}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {"practicuscore.git": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.connections.TeradataConnConf": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1.7320508075688772}, "practicuscore.workflows": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.mq": {"tf": 1.7320508075688772}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 2}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 2}, "practicuscore.notify.send": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.APIScope.TeamWide": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {"practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notify.send": {"tf": 2}, "practicuscore.Process.find_model": {"tf": 1.4142135623730951}}, "df": 2}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 2}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.MQConfig.queue_ttl": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 15}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 2}, "practicuscore.quality.format": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {"practicuscore.quality": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1.7320508075688772}, "practicuscore.models.get_deployment_list": {"tf": 1.7320508075688772}, "practicuscore.models.get_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1.7320508075688772}, "practicuscore.apps.get_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1.7320508075688772}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 2.449489742783178}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1.7320508075688772}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2.23606797749979}, "practicuscore.addons.get_list": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_list": {"tf": 2}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.Region.model_list": {"tf": 1.7320508075688772}, "practicuscore.Region.app_list": {"tf": 1.7320508075688772}, "practicuscore.Region.app_prefix_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_deployment_list": {"tf": 1.7320508075688772}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_addon_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_size_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_size_list": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_image_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1.4142135623730951}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.PrtList": {"tf": 2.23606797749979}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1.4142135623730951}, "practicuscore.PrtList.to_json": {"tf": 1.4142135623730951}, "practicuscore.PrtList.to_dict_list": {"tf": 2}, "practicuscore.get_region_list": {"tf": 1.4142135623730951}}, "df": 65, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.7320508075688772}, "practicuscore.quality.format": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 13}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}}, "df": 3}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.get_ai_assistants": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.live_view": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 6}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.DistJobConfig.memory_gb": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.db": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}}, "df": 6}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig.vhost": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.notify.send": {"tf": 2}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 4}, "practicuscore.WorkerConfig.log_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}}, "df": 16, "s": {"docs": {"practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.connections": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.containers": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.quality": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}}, "df": 2}}, "t": {"docs": {"practicuscore.MQConfig": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.experiments": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 2}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1.7320508075688772}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.get_logger": {"tf": 2.6457513110645907}, "practicuscore.set_logging_level": {"tf": 2.23606797749979}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1.4142135623730951}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 2.23606797749979}, "practicuscore.regions.auto_login": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 2.23606797749979}, "practicuscore.auth.auto_login": {"tf": 1.4142135623730951}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.4142135623730951}}, "df": 10}, "c": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 7, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}}, "df": 7}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.auth": {"tf": 2}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.get_logger": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 3}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 10}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 12}, "r": {"docs": {"practicuscore.Region.logger": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.get_logger": {"tf": 3}}, "df": 4, "s": {"docs": {"practicuscore.get_logger": {"tf": 1}, "practicuscore.Log": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"practicuscore.regions.logout": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1.4142135623730951}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 2}, "practicuscore.notebooks.validate_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 2.8284271247461903}, "practicuscore.Worker.view_logs": {"tf": 2.23606797749979}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 25}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.Process": {"tf": 1.7320508075688772}, "practicuscore.Process.conn_conf": {"tf": 1}}, "df": 7, "s": {"docs": {"practicuscore.models.load_config": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.load_config": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.git.sync_repo": {"tf": 1.7320508075688772}, "practicuscore.Region.get_local_worker": {"tf": 2.23606797749979}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1.4142135623730951}, "practicuscore.Worker.download_files": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}}, "df": 22, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 13}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.unzip": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.conn_info": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}}, "df": 1}}}, "l": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Region": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.test_app": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.get_region": {"tf": 1}}, "df": 6}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}}, "df": 8}}, "r": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Worker.ping": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "b": {"docs": {"practicuscore.git": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.secure_page": {"tf": 2}, "practicuscore.workflows.generate_files": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"practicuscore.notify.send": {"tf": 1.4142135623730951}}, "df": 1}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore": {"tf": 2.6457513110645907}, "practicuscore.regions.login": {"tf": 2}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.models": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.auth.login": {"tf": 2}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Region.get_addon_session_token": {"tf": 2}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.__init__": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 2}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 62, "r": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 25}}}, "y": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 2.23606797749979}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Worker.instance_id": {"tf": 1}}, "df": 1}}}, "i": {"docs": {"practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}}, "df": 3, "n": {"docs": {"practicuscore": {"tf": 2.6457513110645907}, "practicuscore.regions": {"tf": 1.7320508075688772}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_id": {"tf": 1.7320508075688772}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_email": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 2.449489742783178}, "practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}, "practicuscore.connections.get_all": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_agent": {"tf": 1.4142135623730951}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1.4142135623730951}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 2}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 155, "t": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 43, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}}, "df": 8}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 1.7320508075688772}, "practicuscore.create_workspace": {"tf": 1}}, "df": 9, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.auth": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}}, "df": 13, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 27, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIScope.Public": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.load_config": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 5, "d": {"docs": {"practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}}, "df": 6}}}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.PrtList": {"tf": 1.4142135623730951}}, "df": 22}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1.7320508075688772}, "practicuscore.distributed.view_log": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.running_on_a_worker": {"tf": 1.4142135623730951}}, "df": 17}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"1": {"2": {"3": {"4": {"docs": {"practicuscore.Region.get_workspace_credentials": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.mq": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.get_logger": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1}}, "df": 47, "s": {"docs": {"practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}}, "df": 6}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.notify": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"practicuscore.Worker.__init__": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}}, "df": 7}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.distributed": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 2.449489742783178}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.db.init": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 2.449489742783178}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 10, "r": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.DistJobType": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.get_logger": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.7320508075688772}, "practicuscore.run_task": {"tf": 1}}, "df": 10, "s": {"docs": {"practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 11}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.consumer": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq.consumer": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 15}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APISpec.stateful": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.get_logger": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}}, "df": 2}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 2.23606797749979}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1.4142135623730951}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 10, "s": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1.4142135623730951}}, "df": 2}, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {"practicuscore.db.init": {"tf": 1.7320508075688772}}, "df": 1, "t": {"docs": {"practicuscore.models.ModelConfig": {"tf": 2.23606797749979}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1.7320508075688772}}, "df": 3, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.max_count": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments": {"tf": 1}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}}, "df": 3, "d": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1}, "s": {"docs": {"practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.engines": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.containers": {"tf": 2}, "practicuscore.containers.build_image": {"tf": 3.1622776601683795}, "practicuscore.Region.get_default_worker_image": {"tf": 2.449489742783178}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Worker.image": {"tf": 1.4142135623730951}, "practicuscore.Worker.image_id": {"tf": 2}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 2.23606797749979}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}}, "df": 14, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.containers": {"tf": 2}, "practicuscore.Region.worker_image_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}}, "df": 9}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 28, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.engines": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.quality.format": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.quality.format": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"practicuscore.Region.worker_image_list": {"tf": 1.7320508075688772}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APISpec.asynchronous": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1.7320508075688772}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.PrtList": {"tf": 1.4142135623730951}, "practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 60, "s": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.PrtList": {"tf": 1.4142135623730951}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 22, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.test_app": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.PrtList": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 2.23606797749979}, "practicuscore.regions.logout": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region": {"tf": 1.7320508075688772}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.regions.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 2}, "practicuscore.regions.run_task": {"tf": 2.449489742783178}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_session_token": {"tf": 2.23606797749979}, "practicuscore.models.load_config": {"tf": 2}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.7320508075688772}, "practicuscore.apps.test_api": {"tf": 1.7320508075688772}, "practicuscore.apps.secure_page": {"tf": 2}, "practicuscore.apps.get_user_id": {"tf": 1.7320508075688772}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_email": {"tf": 1.7320508075688772}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 1.7320508075688772}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1.7320508075688772}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 2.23606797749979}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get": {"tf": 2}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 2}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_start": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.open_dashboard": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_id": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_rank": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.7320508075688772}, "practicuscore.distributed.is_coordinator": {"tf": 2.23606797749979}, "practicuscore.distributed.is_agent": {"tf": 1.7320508075688772}, "practicuscore.auth.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 2.23606797749979}, "practicuscore.auth.logout": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1.7320508075688772}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 2.6457513110645907}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.notebooks.view_history": {"tf": 1.7320508075688772}, "practicuscore.notebooks.validate_history": {"tf": 2}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 3.4641016151377544}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.7320508075688772}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 3.1622776601683795}, "practicuscore.containers.update_build_config": {"tf": 2}, "practicuscore.vault.get_secret": {"tf": 1.7320508075688772}, "practicuscore.git.sync_repo": {"tf": 1.7320508075688772}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq": {"tf": 1.7320508075688772}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 3.3166247903554}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1.7320508075688772}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2.6457513110645907}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.terminate_all_workers": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.7320508075688772}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1.7320508075688772}, "practicuscore.Worker.job_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1.7320508075688772}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1.7320508075688772}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1.4142135623730951}, "practicuscore.Process.show_issues": {"tf": 1.4142135623730951}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.7320508075688772}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 2}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_password": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1.7320508075688772}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1.4142135623730951}, "practicuscore.PrtList.to_json": {"tf": 1.4142135623730951}, "practicuscore.APIRiskProfile.Low": {"tf": 1.4142135623730951}, "practicuscore.APIRiskProfile.Medium": {"tf": 1.4142135623730951}, "practicuscore.APIRiskProfile.High": {"tf": 1.4142135623730951}, "practicuscore.APISpec.read_only": {"tf": 1.4142135623730951}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1.4142135623730951}, "practicuscore.APISpec.asynchronous": {"tf": 1.4142135623730951}, "practicuscore.APISpec.disable_authentication": {"tf": 1.4142135623730951}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 2}, "practicuscore.running_on_a_worker": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1.7320508075688772}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 2.449489742783178}}, "df": 219, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.ImageConfig.pull_policy": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.login": {"tf": 2.23606797749979}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1.7320508075688772}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 1.7320508075688772}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.distributed": {"tf": 2}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_id": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_rank": {"tf": 2}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_coordinator": {"tf": 2.6457513110645907}, "practicuscore.distributed.is_agent": {"tf": 1.7320508075688772}, "practicuscore.distributed.validate_job_dir": {"tf": 1.7320508075688772}, "practicuscore.auth.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 2.23606797749979}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 2}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.is_default": {"tf": 2}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1.4142135623730951}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2.23606797749979}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1.4142135623730951}, "practicuscore.Worker.assign_node": {"tf": 1.7320508075688772}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.get_logger": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1.4142135623730951}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.current_region": {"tf": 1.4142135623730951}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 130, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.quality": {"tf": 1.7320508075688772}, "practicuscore.quality.check": {"tf": 2.23606797749979}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1.7320508075688772}, "practicuscore.Process.show_issues": {"tf": 1.7320508075688772}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 10}}}}, "n": {"docs": {"practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}}, "df": 3, "d": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}}, "df": 4}, "s": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {"practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.delete": {"tf": 2}, "practicuscore.apps.delete_version": {"tf": 2.23606797749979}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 2.8284271247461903}, "practicuscore.apps.get_app_id": {"tf": 2.449489742783178}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.distributed": {"tf": 2}, "practicuscore.distributed.wait_for_start": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_running": {"tf": 1.7320508075688772}, "practicuscore.distributed.live_view": {"tf": 1.7320508075688772}, "practicuscore.distributed.view_log": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_client": {"tf": 1.7320508075688772}, "practicuscore.distributed.open_dashboard": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_id": {"tf": 2.6457513110645907}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 2}, "practicuscore.Region.delete_app_version": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Worker.kill_proc": {"tf": 1.7320508075688772}, "practicuscore.Process.proc_id": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}}, "df": 32, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.get": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 22, "s": {"docs": {"practicuscore.apps": {"tf": 1}}, "df": 1}}, "d": {"docs": {"practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}}, "df": 7}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APISpec.deterministic": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"practicuscore.apps.deploy": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.connections.Db2ConnConf": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 2}, "practicuscore.notebooks.find_notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}}, "df": 4}}}}, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 5.291502622129181}, "practicuscore.regions": {"tf": 3.4641016151377544}, "practicuscore.regions.login": {"tf": 2.8284271247461903}, "practicuscore.regions.logout": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 3.605551275463989}, "practicuscore.regions.get_default_region": {"tf": 2}, "practicuscore.regions.current_region": {"tf": 2}, "practicuscore.regions.region_factory": {"tf": 2.6457513110645907}, "practicuscore.regions.set_default_region": {"tf": 2.6457513110645907}, "practicuscore.regions.create_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1.4142135623730951}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 2.6457513110645907}, "practicuscore.auth.set_default_region": {"tf": 2.6457513110645907}, "practicuscore.auth.login": {"tf": 2.8284271247461903}, "practicuscore.auth.logout": {"tf": 1.7320508075688772}, "practicuscore.auth.auto_login": {"tf": 1.4142135623730951}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.notify.send": {"tf": 2.23606797749979}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 3.7416573867739413}, "practicuscore.Region.__init__": {"tf": 2.23606797749979}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1.7320508075688772}, "practicuscore.Region.key": {"tf": 2}, "practicuscore.Region.is_default": {"tf": 2.23606797749979}, "practicuscore.Region.worker_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app_version": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.logout": {"tf": 1.7320508075688772}, "practicuscore.Region.set_default": {"tf": 2.23606797749979}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_addon_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 2}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_size_list": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_access_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_refresh_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Worker": {"tf": 2.6457513110645907}, "practicuscore.Worker.__init__": {"tf": 2.449489742783178}, "practicuscore.Worker.region": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 2.23606797749979}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.get_default_region": {"tf": 2}, "practicuscore.create_worker": {"tf": 1.7320508075688772}, "practicuscore.current_region": {"tf": 2}, "practicuscore.get_region": {"tf": 3.605551275463989}, "practicuscore.get_region_list": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 2.6457513110645907}, "practicuscore.set_default_region": {"tf": 2.6457513110645907}, "practicuscore.create_workspace": {"tf": 1}}, "df": 132, "s": {"docs": {"practicuscore": {"tf": 2.6457513110645907}, "practicuscore.regions": {"tf": 3}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 2}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1.7320508075688772}, "practicuscore.auth": {"tf": 2}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 2}, "practicuscore.Region": {"tf": 1}, "practicuscore.get_region": {"tf": 1.7320508075688772}, "practicuscore.get_region_list": {"tf": 1}}, "df": 12}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections.get_all": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 2}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}}, "df": 4}}}, "y": {"1": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"practicuscore.containers": {"tf": 2}, "practicuscore.containers.build_image": {"tf": 3.4641016151377544}, "practicuscore.containers.update_build_config": {"tf": 2.449489742783178}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}}, "df": 8}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 2}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.Worker": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.APIScope.AppOnly": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}, "practicuscore.APIScope.PartnerExternal": {"tf": 1}, "practicuscore.APIScope.Public": {"tf": 1}}, "df": 19}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Worker.download_files": {"tf": 1}}, "df": 1}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.reset_history": {"tf": 1.4142135623730951}, "practicuscore.Region.remove_app_db": {"tf": 1}}, "df": 4, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"practicuscore.Region.remove_app_db": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.containers": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Worker.ping": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 13, "s": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.get_ws_activity_log": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 78}, "d": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.vault": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}}, "df": 3}, "d": {"docs": {"practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}}, "df": 4}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1.7320508075688772}, "practicuscore.regions.region_factory": {"tf": 1.7320508075688772}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 2}, "practicuscore.apps.get_user_email": {"tf": 1.7320508075688772}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1.7320508075688772}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1.4142135623730951}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.7320508075688772}, "practicuscore.Worker.open_vscode": {"tf": 1.7320508075688772}, "practicuscore.Worker.open_workspace": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1.4142135623730951}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1.7320508075688772}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1.4142135623730951}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1.7320508075688772}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 204}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 6}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 11, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Process.run_custom_code": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"practicuscore.Region.get_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.apps.remove_db": {"tf": 1.4142135623730951}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}}, "df": 4}, "d": {"docs": {"practicuscore.Region.reload_model_deployment_list": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.git": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.validate_model": {"tf": 1.7320508075688772}}, "df": 7, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.git": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}}, "df": 7}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.quality": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.git.pull_repo": {"tf": 1}}, "df": 1}}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.WorkerConfig.worker_image": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 12}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}}, "df": 26}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.Process.my_k8s_worker": {"tf": 1}, "practicuscore.Process.my_k8s_region": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 7, "s": {"docs": {"practicuscore.Process.categorical_map": {"tf": 1}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}}, "df": 3}, "d": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Region": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.regions.login": {"tf": 2.23606797749979}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1.7320508075688772}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 2.23606797749979}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1.7320508075688772}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1.4142135623730951}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 2.23606797749979}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 2}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 17, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}}, "df": 5}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}}, "df": 3}}}, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.engines": {"tf": 1}}, "df": 3, "d": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1.4142135623730951}}, "df": 6}, "s": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}}, "df": 2}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.zip": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}}, "df": 3}}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}}, "df": 8}, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.test_api": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.PrtList": {"tf": 1.7320508075688772}, "practicuscore.PrtList.read_only": {"tf": 1.4142135623730951}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 29, "y": {"docs": {"practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.ready": {"tf": 2}, "practicuscore.Worker.wait_until_ready": {"tf": 2.23606797749979}, "practicuscore.create_worker": {"tf": 1.4142135623730951}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Worker.ready": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.conn_info": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"practicuscore.APISpec.read_only": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.terminate": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.APISpec.scope": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Worker.ping": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 1}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}}, "df": 14}}}}, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_addon_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_size_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_image_list": {"tf": 1.4142135623730951}}, "df": 12, "s": {"docs": {"practicuscore.Region.worker_list": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.engines.delete_spark_session": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.terminate": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.Process.run_step": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}}, "df": 6}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.notify.send": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.Region.recreate_model_deployment": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.connections.RedshiftConnConf": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.quality.format": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.db": {"tf": 2.23606797749979}, "practicuscore.db.revision": {"tf": 2.23606797749979}, "practicuscore.db.upgrade": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.db.upgrade": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.update_connection": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 2.23606797749979}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.engines": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 2}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1.7320508075688772}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 29, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 2.23606797749979}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.development_mode": {"tf": 2.23606797749979}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_start": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_running": {"tf": 2.23606797749979}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.open_dashboard": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 2.23606797749979}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 50}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.containers": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 18}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.Worker.ping": {"tf": 1.7320508075688772}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}}, "df": 10, "s": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 14}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}}, "df": 3, "k": {"docs": {"practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 2.23606797749979}, "practicuscore.distributed.get_job_rank": {"tf": 3.3166247903554}, "practicuscore.distributed.is_coordinator": {"tf": 1.7320508075688772}, "practicuscore.distributed.is_agent": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "q": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}}, "df": 6}}}}}}, "w": {"docs": {"practicuscore.mq.consumer": {"tf": 1}}, "df": 1}, "m": {"docs": {"practicuscore.WorkerConfig.worker_size": {"tf": 1}}, "df": 1}, "y": {"docs": {"practicuscore.DistJobType": {"tf": 1.4142135623730951}}, "df": 1}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1, "`": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.7320508075688772}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 5}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.deploy": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}}, "df": 4}, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.containers.build_image": {"tf": 1.4142135623730951}}, "df": 1, "$": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APIExecutionTarget.RPABot": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.join": {"tf": 2}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 5}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 3}, "practicuscore.models": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.Region": {"tf": 2.23606797749979}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}}, "df": 10, "r": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}}, "df": 4}, "d": {"docs": {"practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 12}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.Region": {"tf": 1}}, "df": 11}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 3}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.auth": {"tf": 1}, "practicuscore.experiments": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 4}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.db.upgrade": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 7}}}}}, "p": {"docs": {"practicuscore": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}}, "df": 3}}}}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 7}}}, "o": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1}, "e": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.region_factory": {"tf": 1.4142135623730951}}, "df": 11}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.connections.get": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}}, "df": 5}}}}}}, "x": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 14, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}}, "df": 12}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.mq.test_consumer": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.quality": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.APISpec.stateful": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.notify.send": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_email": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.development_mode": {"tf": 2.6457513110645907}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 2}}, "df": 14, "l": {"docs": {"practicuscore": {"tf": 2.449489742783178}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 3.872983346207417}, "practicuscore.models.ModelConfig": {"tf": 4.123105625617661}, "practicuscore.models.deploy": {"tf": 3.7416573867739413}, "practicuscore.models.get_session_token": {"tf": 2.449489742783178}, "practicuscore.models.load_config": {"tf": 2.449489742783178}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 2.23606797749979}, "practicuscore.models.get_model_signature_json": {"tf": 1.7320508075688772}, "practicuscore.models.create_model_config": {"tf": 3.4641016151377544}, "practicuscore.models.zip": {"tf": 2.6457513110645907}, "practicuscore.models.unzip": {"tf": 2.449489742783178}, "practicuscore.models.get_list": {"tf": 2.449489742783178}, "practicuscore.models.get_deployment_list": {"tf": 2.23606797749979}, "practicuscore.models.get_prefix_list": {"tf": 2}, "practicuscore.containers": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 2.6457513110645907}, "practicuscore.Region.model_prefix_list": {"tf": 2}, "practicuscore.Region.model_list": {"tf": 2.449489742783178}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_deployment_list": {"tf": 2.23606797749979}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 3}, "practicuscore.Region.get_model_api_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.recreate_model_deployment": {"tf": 2.23606797749979}, "practicuscore.Process": {"tf": 2}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 2.23606797749979}, "practicuscore.Process.register_model": {"tf": 1.4142135623730951}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 2.23606797749979}, "practicuscore.Process.predict_with_offline_model": {"tf": 2.8284271247461903}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 50, "s": {"docs": {"practicuscore": {"tf": 2.449489742783178}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.models": {"tf": 2}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 2}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 25, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.find_model": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.load_config": {"tf": 1.7320508075688772}, "practicuscore.models.create_model_config": {"tf": 1.7320508075688772}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.models.get_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {"practicuscore.db.upgrade": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIRiskProfile.Medium": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 2}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections.update": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 10}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"practicuscore.Worker.check_task": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 6, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 2.8284271247461903}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 3.1622776601683795}, "practicuscore.experiments.configure": {"tf": 3.1622776601683795}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.7320508075688772}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.notify": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 27, "s": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.addons": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 12, "\u2014": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.auth": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.models": {"tf": 2}, "practicuscore.models.ModelConfig": {"tf": 2}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 13}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore.apps.secure_page": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1.7320508075688772}}, "df": 6}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region.get_groups": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.publish": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.revision": {"tf": 1.7320508075688772}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}}, "df": 12, "s": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 4}}}}}, "h": {"docs": {"practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.change_password": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Worker.size": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.ping": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.DistJobConfig.measure_utilization": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.workflows": {"tf": 2.449489742783178}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 2.449489742783178}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.get": {"tf": 2.23606797749979}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 2.449489742783178}, "practicuscore.containers.update_build_config": {"tf": 1.7320508075688772}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.7320508075688772}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 48, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 4}}}}}}}}, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.GitConfig.local_path": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"1": {"2": {"3": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1}}, "df": 3, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.get_region": {"tf": 1}}, "df": 19}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.apps.secure_page": {"tf": 1.7320508075688772}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 25}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.ImageConfig": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.connections.S3ConnConf": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 5}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.connections.MSSQLConnConf": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.db": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.db.init": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.notebooks.validate_venv": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.MQConfig.queue_ttl": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {"practicuscore.notebooks.configure": {"tf": 1.4142135623730951}}, "df": 1}, "q": {"docs": {"practicuscore.mq": {"tf": 2.23606797749979}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1.4142135623730951}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}}, "df": 7, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.MQConfig": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.mq.consumer": {"tf": 1}}, "df": 1}}, "b": {"docs": {"practicuscore.Worker.get_logs": {"tf": 1.7320508075688772}, "practicuscore.Worker.view_logs": {"tf": 1.4142135623730951}}, "df": 2}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 2.449489742783178}, "practicuscore.models": {"tf": 1.7320508075688772}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps": {"tf": 2}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows": {"tf": 1.7320508075688772}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.Region": {"tf": 2.23606797749979}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.containers": {"tf": 1}}, "df": 6}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models": {"tf": 1.7320508075688772}, "practicuscore.models.deploy": {"tf": 1.7320508075688772}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 2.23606797749979}, "practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 2.23606797749979}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 2}, "practicuscore.apps.prepare_db": {"tf": 1.7320508075688772}, "practicuscore.apps.remove_db": {"tf": 1.7320508075688772}, "practicuscore.workflows": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 2.23606797749979}, "practicuscore.Region.app_deployment_setting_list": {"tf": 2}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.7320508075688772}, "practicuscore.Region.prepare_app_db": {"tf": 2}, "practicuscore.Region.remove_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.recreate_model_deployment": {"tf": 2.23606797749979}}, "df": 24, "s": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 8}}}}}, "s": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.delete": {"tf": 2.23606797749979}, "practicuscore.apps.delete_version": {"tf": 2.23606797749979}, "practicuscore.apps.delete_cookie": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.delete_spark_session": {"tf": 1.4142135623730951}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_secret": {"tf": 1}}, "df": 13, "s": {"docs": {"practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}}, "df": 11}, "d": {"docs": {"practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.vault": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}}, "df": 3}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.split_column": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1.4142135623730951}, "practicuscore.mq.test_consumer": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 3.1622776601683795}, "practicuscore.regions": {"tf": 2}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 2}, "practicuscore.regions.get_default_region": {"tf": 2}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1.7320508075688772}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 2}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1.7320508075688772}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 2}, "practicuscore.notebooks.configure": {"tf": 2.23606797749979}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.is_default": {"tf": 2}, "practicuscore.Region.get_default_worker_size": {"tf": 2.449489742783178}, "practicuscore.Region.get_default_worker_image": {"tf": 2.449489742783178}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1.7320508075688772}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.get_default_region": {"tf": 2}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_region": {"tf": 2}, "practicuscore.set_default_region": {"tf": 1.7320508075688772}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 70, "s": {"docs": {"practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 34}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.workflows": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 7, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 22}, "s": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 11}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 2}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 14}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}}, "df": 1, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}}, "df": 1}}, "s": {"docs": {"practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}}, "df": 2}}}}}}}, "/": {"2": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.APISpec.deterministic": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 17}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.db.init": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.change_password": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}}, "df": 6}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.test_api": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_info": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.sort_column": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.mq.consumer": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.save": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 2.449489742783178}, "practicuscore.WorkerConfig.log_level": {"tf": 1}}, "df": 5, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 5}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.apps": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.remove_db": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.MQConfig.max_retries": {"tf": 1}}, "df": 1}}, "d": {"docs": {"practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.DistJobConfig": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions": {"tf": 1}, "practicuscore.distributed": {"tf": 3.605551275463989}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 2.23606797749979}, "practicuscore.distributed.get_job_rank": {"tf": 2}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 2}, "practicuscore.distributed.is_coordinator": {"tf": 2.23606797749979}, "practicuscore.distributed.is_agent": {"tf": 1.7320508075688772}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 3.4641016151377544}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}}, "df": 24}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}}, "df": 8}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.distributed.get_job_rank": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 4}}, "s": {"docs": {"practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 2}, "d": {"docs": {"practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.zip": {"tf": 1.7320508075688772}, "practicuscore.models.unzip": {"tf": 1.7320508075688772}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1.7320508075688772}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1.7320508075688772}, "practicuscore.distributed.wait_for_running": {"tf": 1.7320508075688772}, "practicuscore.distributed.live_view": {"tf": 1.7320508075688772}, "practicuscore.distributed.view_log": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.open_dashboard": {"tf": 1.4142135623730951}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 22, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.mq": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.routing_key": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}}, "df": 10}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.models.unzip": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 2.6457513110645907}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.notebooks.execute_notebook": {"tf": 2}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}, "practicuscore.quality": {"tf": 1.7320508075688772}, "practicuscore.quality.check": {"tf": 1.7320508075688772}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 2}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1.7320508075688772}, "practicuscore.Worker.download_files": {"tf": 1.4142135623730951}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 37}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}}}}, "/": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 8}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 31, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1.4142135623730951}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 20}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.get_logger": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore": {"tf": 2.23606797749979}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 2.23606797749979}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.workflows": {"tf": 3}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.connections": {"tf": 2}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.engines": {"tf": 2.23606797749979}, "practicuscore.engines.get_spark_session": {"tf": 2}, "practicuscore.engines.delete_spark_session": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 2}, "practicuscore.Region": {"tf": 2.23606797749979}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 2}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.load": {"tf": 2.449489742783178}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Process": {"tf": 2.6457513110645907}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.load": {"tf": 1.4142135623730951}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.__init__": {"tf": 1.4142135623730951}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1.4142135623730951}, "practicuscore.APISpec.read_only": {"tf": 1}}, "df": 55, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature_json": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.Process.get_df_copy": {"tf": 1.7320508075688772}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"practicuscore.PrtList": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 2}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.prepare_db": {"tf": 1.7320508075688772}, "practicuscore.apps.remove_db": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.db": {"tf": 2.449489742783178}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 2.23606797749979}, "practicuscore.Region.remove_app_db": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1}}, "df": 13, "s": {"docs": {"practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 7}}}}}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.connections": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APISpec.read_only": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.get_eng": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.Process.time_sample": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.Worker.creation_time": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.7320508075688772}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 11}, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 2.6457513110645907}}, "df": 2}}}}}}}, "g": {"docs": {"practicuscore.workflows": {"tf": 3.1622776601683795}, "practicuscore.workflows.deploy": {"tf": 2.8284271247461903}, "practicuscore.workflows.get_airflow_params": {"tf": 1.7320508075688772}, "practicuscore.workflows.run_airflow_task": {"tf": 1.7320508075688772}, "practicuscore.workflows.get_dag_info": {"tf": 3}, "practicuscore.workflows.generate_files": {"tf": 3.7416573867739413}, "practicuscore.workflows.test_tasks": {"tf": 2.23606797749979}, "practicuscore.Region.deploy_workflow": {"tf": 2}}, "df": 8, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.run_airflow_task": {"tf": 1}}, "df": 3, "\u2014": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}}, "df": 4}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}}, "df": 5, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.deploy": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.connections.DynamoDBConnConf": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1.7320508075688772}, "practicuscore.Region.key": {"tf": 1}}, "df": 3}}, "o": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 13, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 6}}}}}}}}}}, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 2}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.worker_image_list": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.connections.update": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 6, "n": {"docs": {"practicuscore.db.init": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"practicuscore.Worker.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {"practicuscore.engines": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1.4142135623730951}}, "df": 3}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.server_addr_fqdn": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.terminating": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Worker.download_files": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"practicuscore.Worker.download_files": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Worker.download_files": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 3}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature_json": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1.7320508075688772}}, "df": 7}, "b": {"2": {"docs": {"practicuscore.connections.Db2ConnConf": {"tf": 1}}, "df": 1}, "docs": {"practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1.7320508075688772}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.db": {"tf": 2}, "practicuscore.db.init": {"tf": 2.449489742783178}, "practicuscore.db.revision": {"tf": 1.4142135623730951}, "practicuscore.db.upgrade": {"tf": 1.7320508075688772}, "practicuscore.db.upsert_static_data": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1.7320508075688772}}, "df": 11, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.db.init": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.db.init": {"tf": 2.23606797749979}}, "df": 1, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.db.revision": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.db.init": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 2}}}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.connections.OracleConnConf": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.connections.DremioConnConf": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}}, "df": 1}}}}}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed": {"tf": 2.23606797749979}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 2.8284271247461903}, "practicuscore.distributed.wait_for_running": {"tf": 2.6457513110645907}, "practicuscore.distributed.live_view": {"tf": 2.449489742783178}, "practicuscore.distributed.view_log": {"tf": 2.6457513110645907}, "practicuscore.distributed.get_client": {"tf": 2.8284271247461903}, "practicuscore.distributed.open_dashboard": {"tf": 2.8284271247461903}, "practicuscore.distributed.get_job_id": {"tf": 3.1622776601683795}, "practicuscore.distributed.get_job_rank": {"tf": 2.23606797749979}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_coordinator": {"tf": 1.7320508075688772}, "practicuscore.distributed.is_agent": {"tf": 1.4142135623730951}, "practicuscore.distributed.validate_job_dir": {"tf": 2.6457513110645907}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1.7320508075688772}, "practicuscore.DistJobType": {"tf": 3.1622776601683795}, "practicuscore.DistJobConfig": {"tf": 2.23606797749979}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}}, "df": 30, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.Worker": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 9}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.Process.join": {"tf": 2}}, "df": 2, "s": {"docs": {"practicuscore.Process.join": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 9}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.models.load_config": {"tf": 2}, "practicuscore.models.get_model_signature_json": {"tf": 2.23606797749979}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 2}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1.7320508075688772}, "practicuscore.PrtList": {"tf": 1.7320508075688772}, "practicuscore.PrtList.to_json": {"tf": 2}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 19, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 2}}}}}, "[": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "a": {"2": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "f": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}}, "df": 14, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore": {"tf": 2.449489742783178}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 2.23606797749979}, "practicuscore.models.ModelConfig": {"tf": 2.23606797749979}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_session_token": {"tf": 2.23606797749979}, "practicuscore.models.get_mlflow_data_type": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.7320508075688772}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 2.23606797749979}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1.7320508075688772}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 2.6457513110645907}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.7320508075688772}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 2}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.7320508075688772}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 2.23606797749979}, "practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 2}, "practicuscore.quality": {"tf": 1}, "practicuscore.containers": {"tf": 2.449489742783178}, "practicuscore.containers.build_image": {"tf": 2.23606797749979}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq": {"tf": 2.23606797749979}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 2.23606797749979}, "practicuscore.notify": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.addons": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.__init__": {"tf": 1.4142135623730951}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1.4142135623730951}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_app_db": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.get_app_api_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 2}, "practicuscore.Region.update_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process.logger": {"tf": 1}, "practicuscore.Process.worker": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict": {"tf": 2}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.7320508075688772}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.Process.kill": {"tf": 1.4142135623730951}, "practicuscore.get_logger": {"tf": 1.7320508075688772}, "practicuscore.set_logging_level": {"tf": 2.8284271247461903}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.queue": {"tf": 1.7320508075688772}, "practicuscore.MQConfig.routing_key": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1.4142135623730951}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1.4142135623730951}, "practicuscore.api": {"tf": 1}}, "df": 208, "m": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.get_region": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.quality": {"tf": 2}, "practicuscore.quality.format": {"tf": 2}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.quality": {"tf": 1.7320508075688772}, "practicuscore.quality.format": {"tf": 1.7320508075688772}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.quality.format": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.Process.run_formula": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobConfig": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.test_app": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}}, "df": 12}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.mq.test_consumer": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.connections.get": {"tf": 1.7320508075688772}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 17, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.configure": {"tf": 2.23606797749979}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.notebooks.find_notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.git.sync_repo": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 2}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 17, "s": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 6}, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.db.init": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1.7320508075688772}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1.7320508075688772}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.apps": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1.4142135623730951}, "practicuscore.Process.group_by_column": {"tf": 1}}, "df": 6}}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 8, "y": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 12}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Process.kill": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}}, "df": 2}}}}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1.7320508075688772}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.models.unzip": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_email": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 2}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1.7320508075688772}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.get_logger": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.personal_secrets": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1.4142135623730951}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}}, "df": 92}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.Worker": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.kill": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 2}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Process.time_sample": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections.get": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 2.6457513110645907}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 2.449489742783178}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 2}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.7320508075688772}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2.6457513110645907}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.run_task": {"tf": 2.6457513110645907}}, "df": 30, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 3.3166247903554}, "practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.zip": {"tf": 2.23606797749979}, "practicuscore.models.unzip": {"tf": 1.7320508075688772}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows": {"tf": 2.8284271247461903}, "practicuscore.workflows.deploy": {"tf": 2.23606797749979}, "practicuscore.workflows.generate_files": {"tf": 2.8284271247461903}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.export_topology": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 2.449489742783178}, "practicuscore.Region.run_task": {"tf": 3.4641016151377544}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 2.449489742783178}, "practicuscore.Worker.download_files": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}, "practicuscore.run_task": {"tf": 3.3166247903554}}, "df": 35, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "/": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.Process.filter": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 2.6457513110645907}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 2.6457513110645907}, "practicuscore.ImageConfig.builder": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1, "`": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.build_model": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 3}}}}}}, "d": {"docs": {"practicuscore.apps.test_api": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}}, "df": 2}, "s": {"docs": {"practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.engines.delete_spark_session": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"practicuscore.ImageConfig": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 2}}, "x": {"docs": {"practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 2}, "practicuscore.quality.format": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.quality.check": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.quality.check": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Log": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 4}}}}}}, "w": {"docs": {"practicuscore.Process.show_head": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.db.revision": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"practicuscore.apps.deploy": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 2, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 44}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 12}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 2}, "practicuscore.notebooks": {"tf": 2}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 2.23606797749979}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}}, "df": 13}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.DistJobType": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, ":": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.MQConfig.exchange_type": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 2.23606797749979}}, "df": 3, "s": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 2}}}, "q": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.server_addr_fqdn": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.regions": {"tf": 1.7320508075688772}, "practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 2.449489742783178}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1.4142135623730951}}, "df": 14, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 17, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.auth": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.quality": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 2.449489742783178}}, "df": 4, "s": {"docs": {"practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.git": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}}, "df": 6, "d": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}}, "df": 1, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1, "`": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 2}}, "s": {"docs": {"practicuscore.engines": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"practicuscore.Region.change_password": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 7}}}, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}}, "df": 5, "d": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}}, "df": 3}, "s": {"docs": {"practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.APISpec.asynchronous": {"tf": 1.4142135623730951}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.APIScope.CompanyWide": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}}, "df": 5}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.predict": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.PrtList.to_json": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.containers": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.predict": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.get_logger": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.get_logger": {"tf": 1}}, "df": 1}}}}}}}, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Region.get_model_api_session_token": {"tf": 1}}, "df": 1}}}}}}}, "v": {"5": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "?": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.apps.deploy": {"tf": 1}}, "df": 1}}}}}}}}}}}, "docs": {}, "df": 0}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.connections": {"tf": 2.449489742783178}, "practicuscore.connections.get_all": {"tf": 2}, "practicuscore.connections.get": {"tf": 2.23606797749979}, "practicuscore.connections.create": {"tf": 2.23606797749979}, "practicuscore.connections.update": {"tf": 2.23606797749979}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.mq": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.connection_list": {"tf": 1.7320508075688772}, "practicuscore.Region.create_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.update_connection": {"tf": 2.23606797749979}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}}, "df": 24, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.service_url": {"tf": 1}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.connections": {"tf": 2.449489742783178}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1.7320508075688772}, "practicuscore.connections.get": {"tf": 3}, "practicuscore.connections.create": {"tf": 2.8284271247461903}, "practicuscore.connections.update": {"tf": 3}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 2.449489742783178}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 3}, "practicuscore.Region.update_connection": {"tf": 3.1622776601683795}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_info": {"tf": 1.4142135623730951}, "practicuscore.Process.load": {"tf": 1.4142135623730951}, "practicuscore.Process.save": {"tf": 1.7320508075688772}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 56, "s": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.connections": {"tf": 3.605551275463989}, "practicuscore.connections.get_all": {"tf": 1.7320508075688772}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region": {"tf": 2}, "practicuscore.Region.connection_list": {"tf": 1.7320508075688772}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 12}}}}, "s": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.load": {"tf": 1.4142135623730951}}, "df": 9}}}}, "s": {"docs": {"practicuscore.connections.get_all": {"tf": 1.4142135623730951}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.distributed": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.notify": {"tf": 1}}, "df": 4}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.PrtList": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.Process.one_hot": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.PrtList": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}}, "df": 14, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, ":": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.worker_image": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 21}}}, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 7, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 11, "s": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.PrtList": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"practicuscore.models.load_config": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 2}, "practicuscore.connections.update": {"tf": 2}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1.7320508075688772}, "practicuscore.Region.create_connection": {"tf": 2}, "practicuscore.Region.update_connection": {"tf": 2}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 16, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.load_config": {"tf": 2}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 2.23606797749979}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 2.449489742783178}, "practicuscore.git": {"tf": 1.4142135623730951}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.mq": {"tf": 2}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 45, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.experiments": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 11, "d": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}}, "df": 23}, "s": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 2}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.7320508075688772}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.SqLiteConnConf": {"tf": 1}, "practicuscore.connections.MYSQLConnConf": {"tf": 1}, "practicuscore.connections.PostgreSQLConnConf": {"tf": 1}, "practicuscore.connections.RedshiftConnConf": {"tf": 1}, "practicuscore.connections.SnowflakeConnConf": {"tf": 1}, "practicuscore.connections.MSSQLConnConf": {"tf": 1}, "practicuscore.connections.OracleConnConf": {"tf": 1}, "practicuscore.connections.HiveConnConf": {"tf": 1}, "practicuscore.connections.ClouderaConnConf": {"tf": 1}, "practicuscore.connections.AthenaConnConf": {"tf": 1}, "practicuscore.connections.ElasticSearchConnConf": {"tf": 1}, "practicuscore.connections.OpenSearchConnConf": {"tf": 1}, "practicuscore.connections.TrinoConnConf": {"tf": 1}, "practicuscore.connections.DremioConnConf": {"tf": 1}, "practicuscore.connections.HanaConnConf": {"tf": 1}, "practicuscore.connections.TeradataConnConf": {"tf": 1}, "practicuscore.connections.Db2ConnConf": {"tf": 1}, "practicuscore.connections.DynamoDBConnConf": {"tf": 1}, "practicuscore.connections.CockroachDBConnConf": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1.7320508075688772}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1.7320508075688772}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 2}, "practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 3}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region.logger": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Worker.logger": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_conf": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.save": {"tf": 1.4142135623730951}, "practicuscore.Process.build_model": {"tf": 1.7320508075688772}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 2}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 99, "s": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}}, "df": 13}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.model_config": {"tf": 1.4142135623730951}, "practicuscore.APISpec.model_config": {"tf": 1.4142135623730951}}, "df": 7}}}}, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.kill": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.quality.format": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}}, "df": 6}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.git.pull_repo": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.quality.format": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Region.console_client": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.mq": {"tf": 2.23606797749979}, "practicuscore.mq.consumer": {"tf": 1.7320508075688772}, "practicuscore.mq.analyze": {"tf": 1.4142135623730951}, "practicuscore.mq.test_consumer": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 5}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.MQConfig": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.MQConfig.headers": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.git": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.Region": {"tf": 1}}, "df": 11}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.APIRiskProfile.Low": {"tf": 1}, "practicuscore.APIRiskProfile.Medium": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 3}}, "s": {"docs": {"practicuscore.DistJobConfig": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 2.449489742783178}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.quality": {"tf": 2.6457513110645907}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 2}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 2.449489742783178}, "practicuscore.Process": {"tf": 1.7320508075688772}, "practicuscore.Process.run_custom_code": {"tf": 1.4142135623730951}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1.7320508075688772}}, "df": 36, "s": {"docs": {"practicuscore.quality.check": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.models.ModelConfig": {"tf": 2}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 6, "s": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1.4142135623730951}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Log": {"tf": 1}}, "df": 4}}}, "s": {"docs": {"practicuscore.Region": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}}, "df": 3, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.get_mlflow_data_type": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature": {"tf": 1.7320508075688772}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.predict": {"tf": 2}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.7320508075688772}, "practicuscore.Process.join": {"tf": 2}}, "df": 17, "s": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}}, "df": 11}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1.7320508075688772}, "practicuscore.apps.get_cookie": {"tf": 2}, "practicuscore.apps.delete_cookie": {"tf": 2}}, "df": 3, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1.7320508075688772}, "practicuscore.apps.get_cookie": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed": {"tf": 2}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_rank": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_coordinator": {"tf": 2.23606797749979}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1.4142135623730951}}, "df": 7}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.DistJobConfig": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"practicuscore.connections.CockroachDBConnConf": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_gpu_count": {"tf": 1.7320508075688772}, "practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.initial_count": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.max_count": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.processes": {"tf": 1.4142135623730951}}, "df": 10}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Worker": {"tf": 1}}, "df": 9}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"practicuscore": {"tf": 2.8284271247461903}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.connections": {"tf": 1.7320508075688772}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 28, "s": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 26}, "d": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.proc_list": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 28}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 28, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.GitConfig.secret_name": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {"practicuscore.Region.get_workspace_credentials": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 3, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.ImageConfig.validate_model": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1.4142135623730951}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.notify": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1.4142135623730951}}, "df": 20, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 2.449489742783178}, "practicuscore.connections.ConnConfFactory": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.distributed.live_view": {"tf": 1.4142135623730951}, "practicuscore.distributed.view_log": {"tf": 1.4142135623730951}, "practicuscore.distributed.open_dashboard": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1.4142135623730951}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.DistJobType": {"tf": 2}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 20, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.WorkerConfig.service_type": {"tf": 1.4142135623730951}}, "df": 9, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.connections.ClouderaConnConf": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1.4142135623730951}, "practicuscore.Process.__init__": {"tf": 1}}, "df": 2}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1.4142135623730951}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.git.clone_repo": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.GitConfig.local_path": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.mq.apply_topology": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.get_client": {"tf": 2.449489742783178}, "practicuscore.Region.console_client": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}}, "df": 4, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.distributed.get_client": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.Process.reset_recorded_steps": {"tf": 1}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.CustomDBConnConf": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 2.23606797749979}, "practicuscore.containers.update_build_config": {"tf": 2}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1.4142135623730951}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 28}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1.4142135623730951}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.regions.change_password": {"tf": 1.4142135623730951}, "practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.7320508075688772}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1.4142135623730951}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 2}, "practicuscore.notebooks.validate_venv": {"tf": 1.4142135623730951}, "practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1.4142135623730951}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.save_ws": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.join": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 72, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Process.alive": {"tf": 1}, "practicuscore.Process.show_recorded_steps": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.current_region": {"tf": 1}}, "df": 25}}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}}, "df": 1, "n": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 2}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 2.23606797749979}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 2}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.7320508075688772}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.update_connection": {"tf": 1.7320508075688772}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1.4142135623730951}, "practicuscore.PrtList": {"tf": 1.4142135623730951}, "practicuscore.create_worker": {"tf": 1}}, "df": 50, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}}, "df": 8, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}}, "df": 3}, "d": {"docs": {"practicuscore.Worker.assign_node": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 6}, "d": {"docs": {"practicuscore.Process.show_issues": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.Worker.run_task": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.ImageConfig": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.7320508075688772}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1.4142135623730951}}, "df": 4, "d": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notify.send": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}}, "df": 2}}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.quality": {"tf": 2}, "practicuscore.quality.check": {"tf": 2}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.PrtList.read_only": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 13, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Process.is_local_practicus_svc_active": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 11}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.auth": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.change_column_type": {"tf": 1}}, "df": 10}, "d": {"docs": {"practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.connections.update": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.quality": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 1, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.MQConfig.exchange": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.revision": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.network_protocol": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.modules_log_level": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.connections.S3ConnConf": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1.4142135623730951}, "practicuscore.PrtList": {"tf": 1.4142135623730951}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}}, "df": 10}}, "w": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 4}}}, "b": {"docs": {"practicuscore.db.init": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.containers": {"tf": 2.8284271247461903}, "practicuscore.containers.build_image": {"tf": 4.47213595499958}, "practicuscore.containers.update_build_config": {"tf": 2.8284271247461903}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 9, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.containers": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}}, "df": 8}}}, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 2.449489742783178}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 2}, "practicuscore.ImageConfig.validate_model": {"tf": 1.7320508075688772}}, "df": 6}}}, "t": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Process.register_model": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 4}}}, "t": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 6}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.create_model_config": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.UploadS3Conf": {"tf": 1.7320508075688772}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}}, "df": 6, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.engines.get_spark_session": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1}}, "g": {"docs": {"practicuscore.quality": {"tf": 1}}, "df": 1}}, "e": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.7320508075688772}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.notify.Notification": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.startup_script": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.model_config": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.ImageConfig.builder_capacity": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.model_config": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.model_config": {"tf": 1}, "practicuscore.GitConfig.model_config": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.MQConfig.model_config": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.APISpec.model_config": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 68, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.DistJobConfig.job_start_timeout_seconds": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 11}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 18, "s": {"docs": {"practicuscore.DistJobType": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows.deploy": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.sleep_between_retries": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {"practicuscore.APISpec.maturity_level": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 4}}}, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows": {"tf": 1.7320508075688772}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1.4142135623730951}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.wsm": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Process.delete_recorded_steps": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.sort_column": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.shared_secrets": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}, "practicuscore.PrtList.to_pandas": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.APIExecutionTarget": {"tf": 1}, "practicuscore.APIScope.TeamWide": {"tf": 1}, "practicuscore.APIScope.PartnerExternal": {"tf": 1}, "practicuscore.APISpec.execution_target": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 81, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.WorkerConfig.model_validate_json": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.WorkerConfig.model_validate_json": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.ConnConf": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}}, "df": 11, "d": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.DistJobType": {"tf": 2.8284271247461903}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 20}}, "h": {"docs": {"practicuscore.mq.export_topology": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2.23606797749979}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 2.23606797749979}, "practicuscore.notify.send": {"tf": 2}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.terminating": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.show_logs": {"tf": 1}, "practicuscore.Process.show_issues": {"tf": 1}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 2.23606797749979}}, "df": 58, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Region.run_task": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"practicuscore.APIExecutionTarget.RPABot": {"tf": 1}}, "df": 1, "h": {"docs": {"practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 8}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.Worker.get_logs": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 2}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 7}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1.4142135623730951}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.GitConfig.branch": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.MQConfig": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 70, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.workflows": {"tf": 1.7320508075688772}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 2}, "practicuscore.db": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 10, "s": {"docs": {"practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}}, "df": 7}, "d": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"practicuscore": {"tf": 2.6457513110645907}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.connections": {"tf": 1.7320508075688772}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2.23606797749979}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_workspace": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.get_model_api_session_token": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.get_logger": {"tf": 1.4142135623730951}, "practicuscore.get_region": {"tf": 1.4142135623730951}}, "df": 67, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.git": {"tf": 2.6457513110645907}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.GitConfig": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 12, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.git": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.WorkerConfig.git_configs": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.git.pull_repo": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}}, "df": 24}, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 3}}}, "d": {"docs": {"practicuscore.engines.delete_spark_session": {"tf": 1}}, "df": 1}}, "t": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1.4142135623730951}}, "df": 10, "s": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 2.8284271247461903}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 2}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Process.group_by_column": {"tf": 1}}, "df": 6}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.predict": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"practicuscore.workflows": {"tf": 2.8284271247461903}, "practicuscore.workflows.generate_files": {"tf": 2.8284271247461903}, "practicuscore.workflows.test_tasks": {"tf": 2.449489742783178}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}}, "df": 5}, "p": {"docs": {}, "df": 0, "u": {"docs": {"practicuscore.distributed": {"tf": 2}, "practicuscore.distributed.get_gpu_count": {"tf": 1.7320508075688772}, "practicuscore.Worker.gpu": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 7, "s": {"docs": {"practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1.7320508075688772}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.quality": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.get_connection": {"tf": 1}}, "df": 1}}}}}}}}}, "b": {"docs": {"practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 2}, "h": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.APIRiskProfile.Low": {"tf": 1}}, "df": 18, "t": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections.get": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_rank": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.mq.analyze": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1.7320508075688772}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1}, "practicuscore.Worker.job_id": {"tf": 1}, "practicuscore.Process.proc_id": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1.4142135623730951}, "practicuscore.get_local_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.get_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 68, "e": {"docs": {"practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}}, "df": 15, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.notebooks": {"tf": 2.8284271247461903}, "practicuscore.notebooks.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebook": {"tf": 3.872983346207417}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.7320508075688772}, "practicuscore.Worker": {"tf": 2.23606797749979}, "practicuscore.Worker.open_notebook": {"tf": 2.449489742783178}}, "df": 7, "s": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.notebooks": {"tf": 3.1622776601683795}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.notebooks.reset_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.view_history": {"tf": 2.23606797749979}, "practicuscore.notebooks.validate_history": {"tf": 2.23606797749979}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 2.449489742783178}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 17}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notify.Notification": {"tf": 1}, "practicuscore.notify.send": {"tf": 3.872983346207417}}, "df": 2, "s": {"docs": {"practicuscore.notify": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 2}}}}}}}}, "y": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notify": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 2}}}}}}}}}}, "n": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.job_dir": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 4, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 2.6457513110645907}, "practicuscore.regions.logout": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.regions.region_factory": {"tf": 1.7320508075688772}, "practicuscore.regions.create_worker": {"tf": 1.7320508075688772}, "practicuscore.regions.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 2.23606797749979}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.load_config": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 2.449489742783178}, "practicuscore.models.zip": {"tf": 1.4142135623730951}, "practicuscore.models.unzip": {"tf": 1.4142135623730951}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 3}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 1.7320508075688772}, "practicuscore.apps.delete_version": {"tf": 1.7320508075688772}, "practicuscore.apps.test_api": {"tf": 1.4142135623730951}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1.4142135623730951}, "practicuscore.apps.secure_page": {"tf": 1.7320508075688772}, "practicuscore.apps.get_user_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_id": {"tf": 1.4142135623730951}, "practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 2.449489742783178}, "practicuscore.workflows.test_tasks": {"tf": 2.449489742783178}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get": {"tf": 1.7320508075688772}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 2}, "practicuscore.distributed.wait_for_running": {"tf": 2}, "practicuscore.distributed.live_view": {"tf": 2}, "practicuscore.distributed.view_log": {"tf": 2.449489742783178}, "practicuscore.distributed.get_client": {"tf": 2.449489742783178}, "practicuscore.distributed.open_dashboard": {"tf": 2}, "practicuscore.distributed.get_job_id": {"tf": 1.7320508075688772}, "practicuscore.distributed.get_job_rank": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 2.6457513110645907}, "practicuscore.auth.logout": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1.7320508075688772}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 2.23606797749979}, "practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 2.8284271247461903}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.7320508075688772}, "practicuscore.quality.check": {"tf": 2.23606797749979}, "practicuscore.quality.format": {"tf": 2.23606797749979}, "practicuscore.containers.build_image": {"tf": 2.449489742783178}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.delete_secret": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.notify.send": {"tf": 3.605551275463989}, "practicuscore.db.init": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 2}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 3}, "practicuscore.Region.delete_app": {"tf": 1.7320508075688772}, "practicuscore.Region.delete_app_version": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 2.449489742783178}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 2}, "practicuscore.Region.get_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_secret": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.Worker.creation_time": {"tf": 1.4142135623730951}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.total_mem_gb": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.ready": {"tf": 1.4142135623730951}, "practicuscore.Worker.job_id": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1.4142135623730951}, "practicuscore.Process.conn_conf": {"tf": 1.4142135623730951}, "practicuscore.Process.build_model": {"tf": 1.4142135623730951}, "practicuscore.Process.find_model": {"tf": 1.7320508075688772}, "practicuscore.Process.predict": {"tf": 2.8284271247461903}, "practicuscore.Process.predict_with_offline_model": {"tf": 2.6457513110645907}, "practicuscore.Process.join": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}, "practicuscore.GitConfig.save_secret": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.sparse_checkout_folders": {"tf": 1.4142135623730951}, "practicuscore.GitConfig.fetch_depth": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.7320508075688772}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1.4142135623730951}, "practicuscore.region_factory": {"tf": 1.7320508075688772}, "practicuscore.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 2.23606797749979}, "practicuscore.api": {"tf": 1}}, "df": 135}}, "w": {"docs": {"practicuscore.models.unzip": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}}, "df": 4}, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.distributed.get_job_rank": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1.4142135623730951}, "practicuscore.Process.__init__": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.processes": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"practicuscore.ImageConfig.validate_model": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.Worker.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.models.deploy": {"tf": 2.23606797749979}, "practicuscore.models.get_mlflow_data_type": {"tf": 1.4142135623730951}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 2.23606797749979}, "practicuscore.models.get_list": {"tf": 1.4142135623730951}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps": {"tf": 1.7320508075688772}, "practicuscore.apps.deploy": {"tf": 2.6457513110645907}, "practicuscore.apps.delete": {"tf": 2.449489742783178}, "practicuscore.apps.delete_version": {"tf": 2.23606797749979}, "practicuscore.apps.get_list": {"tf": 1.7320508075688772}, "practicuscore.apps.prepare_db": {"tf": 2.23606797749979}, "practicuscore.apps.remove_db": {"tf": 2}, "practicuscore.apps.get_app_name": {"tf": 2.449489742783178}, "practicuscore.apps.set_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.get_cookie": {"tf": 1.4142135623730951}, "practicuscore.apps.delete_cookie": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections": {"tf": 1.7320508075688772}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 2.23606797749979}, "practicuscore.connections.create": {"tf": 2}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 3}, "practicuscore.notebooks.get_venv_name": {"tf": 1.7320508075688772}, "practicuscore.notebooks.validate_venv": {"tf": 2}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1.7320508075688772}, "practicuscore.vault.create_or_update_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.delete_secret": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1.4142135623730951}, "practicuscore.Region.app_list": {"tf": 1.7320508075688772}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 2.23606797749979}, "practicuscore.Region.delete_app": {"tf": 2}, "practicuscore.Region.delete_app_version": {"tf": 2}, "practicuscore.Region.prepare_app_db": {"tf": 2.23606797749979}, "practicuscore.Region.remove_app_db": {"tf": 2}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.7320508075688772}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 2}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.7320508075688772}, "practicuscore.Region.connection_list": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.update_connection": {"tf": 2}, "practicuscore.Region.create_or_update_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.get_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.delete_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr": {"tf": 1.4142135623730951}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1.4142135623730951}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Process.worker_name": {"tf": 1.4142135623730951}, "practicuscore.Process.rename_column": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1.4142135623730951}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.Process.join": {"tf": 2}, "practicuscore.WorkerConfig.worker_image": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.GitConfig.secret_name": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 100, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 2}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 10, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, "\u2014": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "/": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"practicuscore.get_logger": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1.4142135623730951}, "practicuscore.regions.get_access_token": {"tf": 1.4142135623730951}, "practicuscore.regions.get_refresh_token": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.create": {"tf": 1.7320508075688772}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.auth.change_password": {"tf": 1.4142135623730951}, "practicuscore.auth.get_access_token": {"tf": 1.4142135623730951}, "practicuscore.auth.get_refresh_token": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.db": {"tf": 1.7320508075688772}, "practicuscore.db.revision": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 2}, "practicuscore.Region.change_password": {"tf": 1.7320508075688772}, "practicuscore.Worker.__init__": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.update_values": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.create_workspace": {"tf": 1}}, "df": 45, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 20}}, "p": {"docs": {}, "df": 0, "@": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"0": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Region.change_password": {"tf": 1}}, "df": 1}}}, "docs": {}, "df": 0}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}}, "df": 4}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections.update": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.connections": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}}, "df": 6}}, "s": {"docs": {"practicuscore.set_logging_level": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}}, "df": 3}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.ImageConfig.pull_policy": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.ImageConfig.validate_model": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}}, "df": 1, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Worker.cpu": {"tf": 1}, "practicuscore.Worker.gpu": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Process.save": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 26, "s": {"docs": {"practicuscore.Process.delete_recorded_steps": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Process.categorical_map": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.threads": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.7320508075688772}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.S3ConnConf": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1.4142135623730951}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker.service_type": {"tf": 1}, "practicuscore.Worker.name": {"tf": 1}, "practicuscore.Worker.size": {"tf": 1}, "practicuscore.Worker.status": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.Process.load": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.WorkerConfig.distributed_config": {"tf": 1}, "practicuscore.WorkerConfig.startup_script": {"tf": 1}, "practicuscore.WorkerConfig.interactive": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.DistJobConfig.job_type": {"tf": 1}, "practicuscore.DistJobConfig.capture_script_output": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.queue_ttl": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.7320508075688772}}, "df": 71, "x": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.experiments": {"tf": 2.449489742783178}, "practicuscore.experiments.configure": {"tf": 3}}, "df": 3, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.experiments": {"tf": 2}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.containers.build_image": {"tf": 1}, "practicuscore.APISpec.maturity_level": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1.4142135623730951}}, "df": 2}}, "s": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig.__init__": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 12}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.auth": {"tf": 1}, "practicuscore.notify": {"tf": 1}}, "df": 2}, "d": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.PrtList": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.filter": {"tf": 1}, "practicuscore.Process.run_formula": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.execute_notebook": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.Process.run_recorded_steps": {"tf": 1}, "practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}}, "df": 8}, "d": {"docs": {"practicuscore.notebooks": {"tf": 1.7320508075688772}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Process.ws": {"tf": 1}, "practicuscore.Process.run_custom_code": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}}, "df": 6}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.apps.api": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.notebooks": {"tf": 2}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.Process.async_op_issue_list": {"tf": 1}, "practicuscore.APIExecutionTarget.AIAgent": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1}, "practicuscore.APIExecutionTarget.RPABot": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.human_gated": {"tf": 1}, "practicuscore.api": {"tf": 1}}, "df": 17}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.processes": {"tf": 1}, "practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.executors": {"tf": 1}}, "df": 6, "s": {"docs": {"practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1.4142135623730951}, "practicuscore.engines.delete_spark_session": {"tf": 1}}, "df": 3}, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.DistJobConfig.threads": {"tf": 1}, "practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.DistJobConfig.memory_gb": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.get_or_create_worker": {"tf": 1.7320508075688772}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Process.run_formula": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.get_or_create_worker": {"tf": 1.7320508075688772}}, "df": 16}}}, "s": {"docs": {"practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.git.sync_repo": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.models.get_mlflow_data_type": {"tf": 1}, "practicuscore.models.get_model_signature": {"tf": 1}, "practicuscore.models.get_model_signature_json": {"tf": 1}, "practicuscore.models.create_model_config": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.unzip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.apps.get_prefix_list": {"tf": 1}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.get_app_id": {"tf": 1}, "practicuscore.apps.get_app_prefix": {"tf": 1}, "practicuscore.apps.get_app_name": {"tf": 1}, "practicuscore.apps.get_app_version": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.distributed.get_client": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 1}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.get_gpu_count": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.distributed.is_coordinator": {"tf": 1}, "practicuscore.distributed.is_agent": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth": {"tf": 1.7320508075688772}, "practicuscore.auth.set_default_region": {"tf": 1.4142135623730951}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.quality.format": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.containers.update_build_config": {"tf": 2.449489742783178}, "practicuscore.vault": {"tf": 1}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1.4142135623730951}, "practicuscore.Region.key": {"tf": 1.4142135623730951}, "practicuscore.Region.is_default": {"tf": 1}, "practicuscore.Region.worker_list": {"tf": 1}, "practicuscore.Region.reload_worker_list": {"tf": 1}, "practicuscore.Region.get_default_worker_size": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.get_or_create_worker": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.app_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_app_prefix_list": {"tf": 1}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1}, "practicuscore.Region.delete_app_version": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.deploy_workflow": {"tf": 1}, "practicuscore.Region.logout": {"tf": 1}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1}, "practicuscore.Region.terminate_all_workers": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Region.get_refresh_and_access_token": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Worker": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.ping": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1}, "practicuscore.Worker.get_logs": {"tf": 1}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.set_logging_level": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.worker_size": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.get_region": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1.4142135623730951}}, "df": 182, "s": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}, "practicuscore.APIExecutionTarget.RemoteService": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.run_snippet": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.APISpec.custom_attributes": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.ImageConfig.custom_builder_url": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1.7320508075688772}, "practicuscore.engines.get_spark_session": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}}, "df": 4, "`": {"docs": {}, "df": 0, "]": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.workflows": {"tf": 1.4142135623730951}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}}, "df": 4, "s": {"docs": {"practicuscore.models.unzip": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.unzip": {"tf": 1.4142135623730951}, "practicuscore.workflows.get_dag_info": {"tf": 1}, "practicuscore.Worker.image_id": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.MQConfig.password": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}}, "df": 7}}}}}}}, "c": {"docs": {"practicuscore.notify.send": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.db.init": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.Worker.ping": {"tf": 1}}, "df": 5, "s": {"docs": {"practicuscore.experiments.configure": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 2.23606797749979}, "practicuscore.notebooks.execute_notebooks": {"tf": 2.23606797749979}, "practicuscore.WorkerConfig.model_dump": {"tf": 3}}, "df": 3}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq": {"tf": 2.449489742783178}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.dead_letter_exchange": {"tf": 1}}, "df": 7, "s": {"docs": {"practicuscore.MQConfig": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}}, "df": 2}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.distributed.live_view": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.delete_app": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1.4142135623730951}, "practicuscore.Process.load": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.engines": {"tf": 2.23606797749979}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {"practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.7320508075688772}}, "df": 7, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.current_region": {"tf": 1}, "practicuscore.regions.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 2}, "practicuscore.apps.test_app": {"tf": 1.7320508075688772}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.engines": {"tf": 1.7320508075688772}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1.4142135623730951}, "practicuscore.notebooks.get_venv_name": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_venv": {"tf": 2}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.get_local_worker": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1.7320508075688772}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1.4142135623730951}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1}, "practicuscore.Worker.download_files": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}, "practicuscore.Process": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.env_variables": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1.4142135623730951}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.current_region": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 49, "\u2014": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions": {"tf": 1}}, "df": 1}}}}}}}}}}, "s": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.Region": {"tf": 1}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notebooks.validate_venv": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "d": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps.api": {"tf": 1.4142135623730951}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.Process.predict": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.APIRiskProfile": {"tf": 1}, "practicuscore.APIScope": {"tf": 1}, "practicuscore.APISpec": {"tf": 1}, "practicuscore.APISpec.read_only": {"tf": 1}, "practicuscore.APISpec.scope": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}, "practicuscore.APISpec.deterministic": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.APISpec.asynchronous": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.api": {"tf": 1.4142135623730951}}, "df": 20, "s": {"docs": {"practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 9}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 2, "d": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}}, "df": 3}, "s": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.ImageConfig.builder": {"tf": 1}, "practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 3}, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.ImageConfig": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"practicuscore.quality.format": {"tf": 1}, "practicuscore.WorkerConfig.model_validate": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 2, "s": {"docs": {"practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_model_deployment_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Region": {"tf": 1}, "practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.Process.get_eng": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.get_logger": {"tf": 1}, "practicuscore.Log": {"tf": 1}}, "df": 2}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.containers.build_image": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process.one_hot": {"tf": 1}, "practicuscore.WorkerConfig.model_validate_json": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobConfig.service_mesh_sidecar": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.DistJobConfig.auto_distributed": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 9, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 2.23606797749979}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 2.8284271247461903}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 2.23606797749979}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.notify.send": {"tf": 2.23606797749979}, "practicuscore.Region.__init__": {"tf": 1.7320508075688772}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.WorkerConfig.email": {"tf": 1}}, "df": 14}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}}, "df": 4}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}, "practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.py_file": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.DistJobConfig.log_in_run_dir": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}}, "df": 13}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.regions.get_region_list": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections.get_all": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.PrtList.to_dict_list": {"tf": 1}, "practicuscore.APISpec.stateful": {"tf": 1}, "practicuscore.get_region_list": {"tf": 1}}, "df": 15}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.experiments": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.notify.send": {"tf": 1.7320508075688772}, "practicuscore.PrtList": {"tf": 1}}, "df": 2}}}, "y": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 3}, "t": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.models.load_config": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}}, "df": 9}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.regions.get_local_worker": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.Worker.ping": {"tf": 1.4142135623730951}, "practicuscore.Process.show_logs": {"tf": 1.4142135623730951}, "practicuscore.Process.show_issues": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1}, "practicuscore.WorkerConfig.log_level": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.get_local_worker": {"tf": 1}}, "df": 14, "s": {"docs": {"practicuscore.notify.send": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.APISpec.deterministic": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Process.run_formula": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.apps.development_mode": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.distributed": {"tf": 1.4142135623730951}, "practicuscore.distributed.get_job_id": {"tf": 1}, "practicuscore.distributed.get_job_rank": {"tf": 1}, "practicuscore.distributed.running_on_a_cluster": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}}, "df": 13}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.connections.ElasticSearchConnConf": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Process.wait_until_done": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.distributed.get_job_rank": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.engines.delete_spark_session": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"practicuscore.Region": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"8": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.Region.console_client": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.local_worker_factory": {"tf": 1}}, "df": 1}}}}}}}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.logout": {"tf": 1.7320508075688772}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.deploy": {"tf": 1.7320508075688772}, "practicuscore.models.get_deployment_list": {"tf": 1}, "practicuscore.apps": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.apps.prepare_db": {"tf": 1.7320508075688772}, "practicuscore.apps.remove_db": {"tf": 1.7320508075688772}, "practicuscore.workflows": {"tf": 2}, "practicuscore.workflows.deploy": {"tf": 2.23606797749979}, "practicuscore.workflows.get_dag_info": {"tf": 2}, "practicuscore.workflows.generate_files": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.7320508075688772}, "practicuscore.connections.UploadS3Conf": {"tf": 1.7320508075688772}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.logout": {"tf": 1.7320508075688772}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1.4142135623730951}, "practicuscore.experiments.configure": {"tf": 2}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.vault": {"tf": 1.7320508075688772}, "practicuscore.vault.create_or_update_secret": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 2.23606797749979}, "practicuscore.addons.get_list": {"tf": 1}, "practicuscore.Region": {"tf": 1.7320508075688772}, "practicuscore.Region.key": {"tf": 1.7320508075688772}, "practicuscore.Region.model_deployment_list": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.remove_app_db": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_workflow": {"tf": 2.449489742783178}, "practicuscore.Region.set_default": {"tf": 1}, "practicuscore.Region.addon_list": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1.7320508075688772}, "practicuscore.Region.open_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon_session_token": {"tf": 2.23606797749979}, "practicuscore.Region.create_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}, "practicuscore.Region.create_or_update_secret": {"tf": 1.4142135623730951}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1.7320508075688772}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.join": {"tf": 2}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1}, "practicuscore.MQConfig.dead_letter_routing_key": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}, "practicuscore.get_region": {"tf": 1.4142135623730951}, "practicuscore.set_default_region": {"tf": 1}}, "df": 62, "s": {"docs": {"practicuscore.apps.test_api": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1.7320508075688772}, "practicuscore.addons.get_session_token": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1}}, "df": 6}, "\u2014": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.connections.upload_to_s3": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.mq.test_consumer": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobConfig.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.notebooks": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.DistJobConfig.terminate_on_completion": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.notebooks": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.7320508075688772}, "practicuscore.Region": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.7320508075688772}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}}, "df": 14}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"practicuscore.connections.get": {"tf": 1}}, "df": 1, "n": {"docs": {"practicuscore.regions.logout": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.models.get_list": {"tf": 1}, "practicuscore.apps.get_list": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.auth.logout": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.model_list": {"tf": 1}, "practicuscore.Region.app_list": {"tf": 1}, "practicuscore.Region.delete_app": {"tf": 1.4142135623730951}}, "df": 13}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.experiments": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Worker.ready": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.apps.test_app": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1}, "practicuscore.Worker.kill_proc": {"tf": 1.4142135623730951}, "practicuscore.Worker.kill_all_procs": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1.4142135623730951}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.Worker.remove_proc_from_cache": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process": {"tf": 1}, "practicuscore.Process.kill": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.Process.run_snippet": {"tf": 1}, "practicuscore.WorkerConfig.model_dump_json": {"tf": 1}}, "df": 4}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore": {"tf": 2}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.addons": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.experiments": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.apps.get_username": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 3}}, "d": {"docs": {"practicuscore.Process.get_df_copy": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models.zip": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Process": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.engines": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"practicuscore.mq": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.WorkerConfig.service_url": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 7, "r": {"docs": {"practicuscore.apps.test_api": {"tf": 2.23606797749979}}, "df": 1}, "s": {"docs": {"practicuscore.Process.handle_missing": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.notebooks.configure": {"tf": 1}, "practicuscore.DistJobConfig.custom_adaptor": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {"practicuscore.connections.HanaConnConf": {"tf": 1}}, "df": 1}}, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.notebooks.reset_history": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.APISpec.idempotent": {"tf": 1}}, "df": 10}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.apps.user_is_admin": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.engines.delete_spark_session": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1}, "practicuscore.notebooks.validate_history": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_prefix_list": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Process.show_head": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 21}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.vault": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.APIRiskProfile.High": {"tf": 1}}, "df": 11}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections.HiveConnConf": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.connections.create": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.connections.create": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}}, "df": 4}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notebooks": {"tf": 2.6457513110645907}, "practicuscore.notebooks.configure": {"tf": 1.7320508075688772}, "practicuscore.notebooks.reset_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_history": {"tf": 1.7320508075688772}, "practicuscore.Process.run_step": {"tf": 1}, "practicuscore.GitConfig.fetch_depth": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.4142135623730951}, "practicuscore.Region": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1.7320508075688772}, "practicuscore.Worker": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.MQConfig.host": {"tf": 1}, "practicuscore.MQConfig.vhost": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.APIScope.PartnerExternal": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"practicuscore.apps.get_deployment_setting_list": {"tf": 1}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.distributed.live_view": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.notebooks.view_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.Region.app_deployment_setting_list": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.4142135623730951}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1.4142135623730951}}, "df": 14, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.notebooks.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.Region": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"practicuscore.Process.one_hot": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.DistJobType": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.apps.get_cookie": {"tf": 1}, "practicuscore.apps.delete_cookie": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}}, "df": 6, "s": {"docs": {"practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}}, "df": 2, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 1.4142135623730951}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.4142135623730951}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}}, "df": 5}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.get_session_token": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.deploy": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"practicuscore.distributed": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Worker.upload_files": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.APIExecutionTarget.HumanWorker": {"tf": 1.4142135623730951}, "practicuscore.APISpec.human_gated": {"tf": 1}}, "df": 3, "s": {"docs": {"practicuscore.APIExecutionTarget.DirectExecution": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}}, "df": 1, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Worker.create_model_response": {"tf": 1}, "practicuscore.Worker.async_op_issue_list": {"tf": 1}, "practicuscore.Worker.async_op_issue_history_list": {"tf": 1}, "practicuscore.Worker.server_name": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1}, "practicuscore.Worker.local_worker_factory": {"tf": 1}, "practicuscore.Worker.remove_proc_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Worker.view_logs": {"tf": 1}, "practicuscore.WorkerConfig.network_protocol": {"tf": 1}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.WorkerConfig.refresh_token": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.pull_policy": {"tf": 1}, "practicuscore.DistJobConfig.worker_count": {"tf": 1}, "practicuscore.DistJobConfig.additional_ports": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}, "practicuscore.MQConfig.exchange": {"tf": 1}, "practicuscore.APISpec.disable_authentication": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 48, "d": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.get_region": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 2}, "practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.workflows.get_airflow_params": {"tf": 1}, "practicuscore.connections.create": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.vault.get_secret": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.Region.refresh_token": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1}, "practicuscore.Region.create_workspace": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.get_worker": {"tf": 1}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.get_secret": {"tf": 1}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Region.recreate_model_deployment": {"tf": 1}, "practicuscore.Worker.server_addr": {"tf": 1}, "practicuscore.Worker.image": {"tf": 1}, "practicuscore.Worker.terminate": {"tf": 1}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.get_csv_header": {"tf": 1}, "practicuscore.Process.conn_conf": {"tf": 1}, "practicuscore.Log": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1.7320508075688772}, "practicuscore.DistJobConfig.coordinator_port": {"tf": 1}, "practicuscore.GitConfig.branch": {"tf": 1}, "practicuscore.MQConfig.headers": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.get_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 47}, "r": {"docs": {"practicuscore.regions.login": {"tf": 1.7320508075688772}, "practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.regions.change_password": {"tf": 1}, "practicuscore.regions.get_workspace_credentials": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 2}, "practicuscore.apps.get_user_id": {"tf": 3}, "practicuscore.apps.get_username": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1.7320508075688772}, "practicuscore.apps.get_user_groups": {"tf": 2}, "practicuscore.apps.user_is_admin": {"tf": 1.7320508075688772}, "practicuscore.apps.set_cookie": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.distributed.validate_job_dir": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.auth.login": {"tf": 1.7320508075688772}, "practicuscore.auth.change_password": {"tf": 1}, "practicuscore.auth.get_workspace_credentials": {"tf": 1}, "practicuscore.mq": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1.7320508075688772}, "practicuscore.notify.send": {"tf": 1}, "practicuscore.db.init": {"tf": 1.4142135623730951}, "practicuscore.Region.__init__": {"tf": 1}, "practicuscore.Region.email": {"tf": 1}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Region.get_groups": {"tf": 1.4142135623730951}, "practicuscore.Region.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Region.change_password": {"tf": 1}, "practicuscore.Region.get_ai_assistants": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.WorkerConfig.email": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}, "practicuscore.MQConfig.user_name": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 38, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.get_username": {"tf": 2.8284271247461903}, "practicuscore.workflows.get_dag_info": {"tf": 2}, "practicuscore.auth.get_workspace_credentials": {"tf": 1.7320508075688772}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1.4142135623730951}, "practicuscore.Region.username": {"tf": 1}, "practicuscore.Region.get_workspace_credentials": {"tf": 1}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_secret_name": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.GitConfig.username": {"tf": 1}}, "df": 14, "@": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.Region.key": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.regions.get_region": {"tf": 1}, "practicuscore.get_region": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions.set_default_region": {"tf": 1}, "practicuscore.auth.set_default_region": {"tf": 1}, "practicuscore.set_default_region": {"tf": 1}}, "df": 3}}}, "/": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.ImageConfig": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}, "@": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.notify.send": {"tf": 1}}, "df": 5}}}}}}}, "m": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.regions": {"tf": 1}, "practicuscore.auth": {"tf": 1}}, "df": 2}}}, "\u2019": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.apps.get_user_email": {"tf": 1}}, "df": 2}}, "s": {"docs": {"practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.7320508075688772}}, "df": 2}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.running_on_a_worker": {"tf": 1}, "practicuscore.regions.region_factory": {"tf": 1}, "practicuscore.regions.get_or_create_worker": {"tf": 1}, "practicuscore.regions.auto_login": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.auth.auto_login": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.DistJobConfig.retries": {"tf": 1}, "practicuscore.get_or_create_worker": {"tf": 1}, "practicuscore.running_on_a_worker": {"tf": 1}, "practicuscore.region_factory": {"tf": 1}}, "df": 14}}}, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.regions.create_workspace": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.test_app": {"tf": 1}, "practicuscore.apps.test_api": {"tf": 1}, "practicuscore.apps.secure_page": {"tf": 1}, "practicuscore.workflows.test_tasks": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.distributed.view_log": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.get_logger": {"tf": 1}, "practicuscore.GitConfig.local_path": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}, "practicuscore.create_workspace": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 21}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.models.ModelConfig": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.workflows": {"tf": 1}, "practicuscore.workflows.run_airflow_task": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.engines": {"tf": 1}, "practicuscore.experiments": {"tf": 1}, "practicuscore.notebooks": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.mq.consumer": {"tf": 1}, "practicuscore.mq.test_consumer": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.WorkerConfig": {"tf": 1}, "practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}, "practicuscore.APISpec.risk_profile": {"tf": 1}}, "df": 22}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.regions.get_default_region": {"tf": 1}, "practicuscore.regions.run_task": {"tf": 1.4142135623730951}, "practicuscore.regions.get_access_token": {"tf": 1}, "practicuscore.regions.get_refresh_token": {"tf": 1}, "practicuscore.models": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1.4142135623730951}, "practicuscore.apps.prepare_db": {"tf": 1}, "practicuscore.apps.remove_db": {"tf": 1}, "practicuscore.connections": {"tf": 1}, "practicuscore.connections.ConnConfFactory": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.distributed.JobType": {"tf": 1}, "practicuscore.distributed.JobConfig": {"tf": 1}, "practicuscore.auth": {"tf": 1.4142135623730951}, "practicuscore.auth.get_access_token": {"tf": 1}, "practicuscore.auth.get_refresh_token": {"tf": 1}, "practicuscore.notebooks.get_venv_name": {"tf": 1}, "practicuscore.notebooks.validate_venv": {"tf": 1}, "practicuscore.notebooks.execute_notebook": {"tf": 1}, "practicuscore.quality": {"tf": 1}, "practicuscore.quality.check": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1}, "practicuscore.git": {"tf": 1}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.mq.connect": {"tf": 1}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.notify.send": {"tf": 1.4142135623730951}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1.4142135623730951}, "practicuscore.db.upsert_static_data": {"tf": 1.4142135623730951}, "practicuscore.Region.prepare_app_db": {"tf": 1}, "practicuscore.Region.remove_app_db": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1}, "practicuscore.Region.get_access_token": {"tf": 1}, "practicuscore.Region.get_refresh_token": {"tf": 1}, "practicuscore.Process.delete_columns": {"tf": 1}, "practicuscore.Process.rename_columns": {"tf": 1}, "practicuscore.Process.split_column": {"tf": 1}, "practicuscore.Process.handle_missing": {"tf": 1}, "practicuscore.Process.time_sample": {"tf": 1}, "practicuscore.Process.build_model": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1}, "practicuscore.Process.predict_with_offline_model": {"tf": 1}, "practicuscore.WorkerConfig.image_config": {"tf": 1}, "practicuscore.ImageConfig.repo_username": {"tf": 1}, "practicuscore.ImageConfig.repo_password": {"tf": 1}, "practicuscore.DistJobConfig.initial_count": {"tf": 1}, "practicuscore.DistJobConfig.max_count": {"tf": 1}, "practicuscore.PrtList.to_json": {"tf": 1}, "practicuscore.get_default_region": {"tf": 1}, "practicuscore.run_task": {"tf": 1.4142135623730951}}, "df": 54}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.PrtList": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections": {"tf": 1}}, "df": 2}}, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.DistJobConfig.measure_utilization": {"tf": 1}, "practicuscore.DistJobConfig.measure_utilization_interval": {"tf": 1}}, "df": 2}}}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore": {"tf": 1.7320508075688772}, "practicuscore.regions": {"tf": 1}, "practicuscore.regions.login": {"tf": 2.23606797749979}, "practicuscore.models.deploy": {"tf": 2.449489742783178}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 2.6457513110645907}, "practicuscore.apps.deploy": {"tf": 2}, "practicuscore.apps.get_session_token": {"tf": 2}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1}, "practicuscore.distributed.open_dashboard": {"tf": 2.8284271247461903}, "practicuscore.auth": {"tf": 1}, "practicuscore.auth.login": {"tf": 2.23606797749979}, "practicuscore.git.clone_repo": {"tf": 1}, "practicuscore.db.init": {"tf": 1}, "practicuscore.Region.__init__": {"tf": 1.4142135623730951}, "practicuscore.Region.url": {"tf": 1}, "practicuscore.Region.host_dns": {"tf": 1}, "practicuscore.Region.get_default_worker_image": {"tf": 1}, "practicuscore.Region.deploy_model": {"tf": 2.449489742783178}, "practicuscore.Region.deploy_app": {"tf": 1.4142135623730951}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.worker_image_list": {"tf": 1}, "practicuscore.Worker": {"tf": 2}, "practicuscore.Worker.open_notebook": {"tf": 2.8284271247461903}, "practicuscore.Worker.open_vscode": {"tf": 2.8284271247461903}, "practicuscore.Worker.open_workspace": {"tf": 2.6457513110645907}, "practicuscore.Process.predict": {"tf": 1.4142135623730951}, "practicuscore.WorkerConfig.service_url": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}, "practicuscore.ImageConfig.custom_builder_url": {"tf": 1}, "practicuscore.ImageConfig.validate_model": {"tf": 1}, "practicuscore.GitConfig.remote_url": {"tf": 1}, "practicuscore.MQConfig.conn_str": {"tf": 1}}, "df": 35, "s": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.Region": {"tf": 1}, "practicuscore.ImageConfig": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"3": {"docs": {"practicuscore.set_logging_level": {"tf": 1.4142135623730951}}, "df": 1, ":": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {"practicuscore.set_logging_level": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "docs": {}, "df": 0}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.notify.send": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "i": {"docs": {"practicuscore.Process.predict_with_offline_model": {"tf": 1.7320508075688772}}, "df": 1}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.regions.login": {"tf": 1}, "practicuscore.regions.create_worker": {"tf": 1}, "practicuscore.auth.login": {"tf": 1}, "practicuscore.WorkerConfig.bypass_ssl_verification": {"tf": 1}, "practicuscore.create_worker": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.quality.format": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.regions.create_worker": {"tf": 1.4142135623730951}, "practicuscore.distributed.wait_for_start": {"tf": 1}, "practicuscore.distributed.wait_for_running": {"tf": 1}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Worker.check_task": {"tf": 1}, "practicuscore.Worker.wait_until_ready": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 1}, "practicuscore.Process.wait_until_done": {"tf": 1.4142135623730951}, "practicuscore.Process.get_df_copy": {"tf": 1}, "practicuscore.create_worker": {"tf": 1.4142135623730951}}, "df": 10}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.models": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.models.ModelConfig": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"practicuscore.models.deploy": {"tf": 1.4142135623730951}, "practicuscore.models.get_prefix_list": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.experiments.configure": {"tf": 1}, "practicuscore.notebooks.find_notebooks": {"tf": 1}, "practicuscore.notebooks.execute_notebooks": {"tf": 1.4142135623730951}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.Region.model_prefix_list": {"tf": 1}, "practicuscore.DistJobConfig.py_venv_name": {"tf": 1}}, "df": 10, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.workflows": {"tf": 1}, "practicuscore.distributed": {"tf": 1}, "practicuscore.auth": {"tf": 1}, "practicuscore.Worker.assign_node": {"tf": 1.4142135623730951}, "practicuscore.Process.__init__": {"tf": 1}, "practicuscore.Process.os_pid": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"practicuscore.models.get_session_token": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.WorkerConfig.model_dump": {"tf": 1}, "practicuscore.DistJobConfig.coordinator_is_worker": {"tf": 1}}, "df": 2}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.models.unzip": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 1}, "practicuscore.apps.delete": {"tf": 1}, "practicuscore.apps.delete_version": {"tf": 1}, "practicuscore.apps.get_user_id": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.workflows.generate_files": {"tf": 1}, "practicuscore.connections.get": {"tf": 1}, "practicuscore.connections.create": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.addons.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.key": {"tf": 1.4142135623730951}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.Region.get_addon": {"tf": 1}, "practicuscore.Region.open_addon": {"tf": 1}, "practicuscore.Region.get_addon_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Worker.instance_id": {"tf": 1}, "practicuscore.Worker.run_task": {"tf": 1}}, "df": 21}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.MQConfig": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.Process.conn_info": {"tf": 1}, "practicuscore.Process.worker_name": {"tf": 1}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.MQConfig.verify_delivery": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "p": {"docs": {"practicuscore.experiments.configure": {"tf": 1}, "practicuscore.containers": {"tf": 1}, "practicuscore.Worker.load": {"tf": 1}, "practicuscore.Process.get_file_path_in_caller_stack": {"tf": 1}, "practicuscore.DistJobType": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 2.23606797749979}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.models.zip": {"tf": 1}, "practicuscore.apps.get_session_token": {"tf": 2}, "practicuscore.workflows.deploy": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 1.7320508075688772}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 2.23606797749979}, "practicuscore.Region.deploy_workflow": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 2.23606797749979}, "practicuscore.Region.get_model_api_session_token": {"tf": 1.7320508075688772}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 2.6457513110645907}, "practicuscore.run_task": {"tf": 2.23606797749979}}, "df": 14, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.upload_files": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 6}}, "s": {"3": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models.deploy": {"tf": 1}, "practicuscore.models.get_session_token": {"tf": 1.4142135623730951}, "practicuscore.apps.deploy": {"tf": 1}, "practicuscore.workflows.deploy": {"tf": 1}, "practicuscore.connections.upload_to_s3": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_model_api_session_token": {"tf": 1}, "practicuscore.Worker.upload_files": {"tf": 1.4142135623730951}, "practicuscore.run_task": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.regions.run_task": {"tf": 1}, "practicuscore.models": {"tf": 1.4142135623730951}, "practicuscore.models.get_session_token": {"tf": 1}, "practicuscore.apps": {"tf": 1}, "practicuscore.connections.UploadS3Conf": {"tf": 1}, "practicuscore.Region.run_task": {"tf": 1}, "practicuscore.Region.get_app_api_session_token": {"tf": 1}, "practicuscore.run_task": {"tf": 1}}, "df": 8}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.connections": {"tf": 2}, "practicuscore.connections.update": {"tf": 1.7320508075688772}, "practicuscore.containers": {"tf": 1.7320508075688772}, "practicuscore.containers.update_build_config": {"tf": 1.7320508075688772}, "practicuscore.vault": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1.4142135623730951}}, "df": 7, "d": {"docs": {"practicuscore.regions.get_refresh_and_access_token": {"tf": 1}, "practicuscore.connections": {"tf": 1.4142135623730951}, "practicuscore.connections.update": {"tf": 2.23606797749979}, "practicuscore.auth.get_refresh_and_access_token": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_model_list": {"tf": 1}, "practicuscore.Region.reload_app_list": {"tf": 1}, "practicuscore.Region.reload_addon_list": {"tf": 1}, "practicuscore.Region.reload_connection_list": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 2.449489742783178}, "practicuscore.Region.create_or_update_secret": {"tf": 1}, "practicuscore.Region.reload_worker_size_list": {"tf": 1}, "practicuscore.Region.reload_worker_image_list": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 14}, "s": {"docs": {"practicuscore.connections": {"tf": 1}, "practicuscore.connections.update": {"tf": 1}, "practicuscore.vault.create_or_update_secret": {"tf": 1}, "practicuscore.db.init": {"tf": 1.7320508075688772}, "practicuscore.db.upsert_static_data": {"tf": 1}, "practicuscore.Region.update_connection": {"tf": 1}, "practicuscore.Region.create_or_update_secret": {"tf": 1}}, "df": 7}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"practicuscore.containers": {"tf": 1}, "practicuscore.containers.update_build_config": {"tf": 1}, "practicuscore.vault": {"tf": 1}}, "df": 3}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"practicuscore.notebooks.execute_notebooks": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.db": {"tf": 2.449489742783178}, "practicuscore.db.revision": {"tf": 1}, "practicuscore.db.upgrade": {"tf": 2.23606797749979}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1, "s": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.db.upsert_static_data": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {"practicuscore.apps": {"tf": 2}, "practicuscore.apps.deploy": {"tf": 1.7320508075688772}, "practicuscore.Region.deploy_app": {"tf": 1}, "practicuscore.Worker.open_notebook": {"tf": 1}, "practicuscore.Worker.open_vscode": {"tf": 1}, "practicuscore.Worker.open_workspace": {"tf": 1}}, "df": 6}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.connections.get": {"tf": 2}, "practicuscore.connections.create": {"tf": 2}, "practicuscore.connections.update": {"tf": 2.23606797749979}, "practicuscore.Region.get_connection": {"tf": 1.7320508075688772}, "practicuscore.Region.connection_list": {"tf": 1}, "practicuscore.Region.create_connection": {"tf": 2}, "practicuscore.Region.update_connection": {"tf": 2}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.check_task": {"tf": 2}}, "df": 9, "s": {"docs": {"practicuscore.Region.get_connection": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore": {"tf": 1.4142135623730951}, "practicuscore.quality": {"tf": 2.23606797749979}, "practicuscore.quality.check": {"tf": 1.7320508075688772}, "practicuscore.quality.format": {"tf": 1}}, "df": 4}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"practicuscore.Worker.server_addr_fqdn": {"tf": 1}, "practicuscore.WorkerConfig.worker_image": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"practicuscore": {"tf": 3.4641016151377544}, "practicuscore.regions": {"tf": 2.8284271247461903}, "practicuscore.regions.login": {"tf": 2.449489742783178}, "practicuscore.regions.get_region": {"tf": 1.4142135623730951}, "practicuscore.models": {"tf": 2.449489742783178}, "practicuscore.models.deploy": {"tf": 2.449489742783178}, "practicuscore.models.get_session_token": {"tf": 2.449489742783178}, "practicuscore.models.load_config": {"tf": 2}, "practicuscore.models.get_mlflow_data_type": {"tf": 2}, "practicuscore.models.get_model_signature": {"tf": 2}, "practicuscore.models.get_model_signature_json": {"tf": 1.4142135623730951}, "practicuscore.models.create_model_config": {"tf": 2.449489742783178}, "practicuscore.models.zip": {"tf": 2.8284271247461903}, "practicuscore.models.unzip": {"tf": 1.4142135623730951}, "practicuscore.apps": {"tf": 4.898979485566356}, "practicuscore.apps.deploy": {"tf": 3.4641016151377544}, "practicuscore.apps.get_session_token": {"tf": 2}, "practicuscore.apps.test_app": {"tf": 1.4142135623730951}, "practicuscore.apps.delete": {"tf": 2}, "practicuscore.apps.delete_version": {"tf": 2.8284271247461903}, "practicuscore.apps.prepare_db": {"tf": 2}, "practicuscore.apps.remove_db": {"tf": 2}, "practicuscore.apps.secure_page": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_id": {"tf": 2}, "practicuscore.apps.get_username": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_email": {"tf": 1.4142135623730951}, "practicuscore.apps.get_user_groups": {"tf": 1.4142135623730951}, "practicuscore.apps.user_is_admin": {"tf": 2}, "practicuscore.apps.get_app_id": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_prefix": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_name": {"tf": 1.4142135623730951}, "practicuscore.apps.get_app_version": {"tf": 1.4142135623730951}, "practicuscore.apps.development_mode": {"tf": 2}, "practicuscore.apps.set_cookie": {"tf": 2}, "practicuscore.apps.get_cookie": {"tf": 2.449489742783178}, "practicuscore.apps.delete_cookie": {"tf": 2}, "practicuscore.workflows": {"tf": 4.242640687119285}, "practicuscore.workflows.deploy": {"tf": 2}, "practicuscore.workflows.generate_files": {"tf": 2.449489742783178}, "practicuscore.workflows.test_tasks": {"tf": 1.4142135623730951}, "practicuscore.connections": {"tf": 4.47213595499958}, "practicuscore.connections.UploadS3Conf": {"tf": 3.4641016151377544}, "practicuscore.connections.get": {"tf": 2.449489742783178}, "practicuscore.connections.create": {"tf": 2}, "practicuscore.connections.update": {"tf": 2.449489742783178}, "practicuscore.distributed": {"tf": 2.8284271247461903}, "practicuscore.distributed.wait_for_start": {"tf": 2}, "practicuscore.distributed.wait_for_running": {"tf": 2}, "practicuscore.distributed.live_view": {"tf": 2}, "practicuscore.distributed.view_log": {"tf": 2}, "practicuscore.distributed.get_client": {"tf": 2}, "practicuscore.distributed.open_dashboard": {"tf": 2.449489742783178}, "practicuscore.distributed.get_job_id": {"tf": 2}, "practicuscore.distributed.get_job_rank": {"tf": 2.449489742783178}, "practicuscore.distributed.get_gpu_count": {"tf": 1.4142135623730951}, "practicuscore.distributed.running_on_a_cluster": {"tf": 2}, "practicuscore.distributed.is_coordinator": {"tf": 1.4142135623730951}, "practicuscore.distributed.is_agent": {"tf": 1.4142135623730951}, "practicuscore.distributed.validate_job_dir": {"tf": 2.449489742783178}, "practicuscore.auth": {"tf": 2.8284271247461903}, "practicuscore.auth.login": {"tf": 2.449489742783178}, "practicuscore.engines": {"tf": 1.4142135623730951}, "practicuscore.engines.get_spark_session": {"tf": 2.449489742783178}, "practicuscore.experiments": {"tf": 3.1622776601683795}, "practicuscore.experiments.configure": {"tf": 3.1622776601683795}, "practicuscore.notebooks": {"tf": 2.8284271247461903}, "practicuscore.notebooks.configure": {"tf": 2}, "practicuscore.notebooks.reset_history": {"tf": 1.4142135623730951}, "practicuscore.notebooks.get_venv_name": {"tf": 1.4142135623730951}, "practicuscore.notebooks.validate_venv": {"tf": 1.4142135623730951}, "practicuscore.notebooks.execute_notebook": {"tf": 2.449489742783178}, "practicuscore.notebooks.execute_notebooks": {"tf": 2.8284271247461903}, "practicuscore.quality": {"tf": 1.4142135623730951}, "practicuscore.quality.check": {"tf": 1.4142135623730951}, "practicuscore.quality.format": {"tf": 1.4142135623730951}, "practicuscore.containers.build_image": {"tf": 3.7416573867739413}, "practicuscore.containers.update_build_config": {"tf": 2.8284271247461903}, "practicuscore.vault": {"tf": 3.7416573867739413}, "practicuscore.vault.get_secret": {"tf": 2.449489742783178}, "practicuscore.mq": {"tf": 3.7416573867739413}, "practicuscore.notify.send": {"tf": 2.449489742783178}, "practicuscore.Region": {"tf": 3.7416573867739413}, "practicuscore.Region.key": {"tf": 1.4142135623730951}, "practicuscore.Region.is_default": {"tf": 1.4142135623730951}, "practicuscore.Region.reload_worker_list": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_size": {"tf": 1.4142135623730951}, "practicuscore.Region.get_default_worker_image": {"tf": 1.4142135623730951}, "practicuscore.Region.create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.create_workspace": {"tf": 1.4142135623730951}, "practicuscore.Region.get_local_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_or_create_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.deploy_model": {"tf": 2.449489742783178}, "practicuscore.Region.delete_app": {"tf": 2}, "practicuscore.Region.delete_app_version": {"tf": 2}, "practicuscore.Region.prepare_app_db": {"tf": 2}, "practicuscore.Region.remove_app_db": {"tf": 2}, "practicuscore.Region.deploy_workflow": {"tf": 2.449489742783178}, "practicuscore.Region.logout": {"tf": 1.4142135623730951}, "practicuscore.Region.set_default": {"tf": 1.4142135623730951}, "practicuscore.Region.run_task": {"tf": 2.449489742783178}, "practicuscore.Region.get_model_api_session_token": {"tf": 2}, "practicuscore.Region.get_app_api_session_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_addon": {"tf": 2.449489742783178}, "practicuscore.Region.open_addon": {"tf": 1.4142135623730951}, "practicuscore.Region.get_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_connection": {"tf": 2}, "practicuscore.Region.remove_worker_from_cache": {"tf": 1.4142135623730951}, "practicuscore.Region.terminate_worker": {"tf": 1.4142135623730951}, "practicuscore.Region.get_groups": {"tf": 1.4142135623730951}, "practicuscore.Region.create_connection": {"tf": 3.1622776601683795}, "practicuscore.Region.update_connection": {"tf": 3.7416573867739413}, "practicuscore.Region.get_secret": {"tf": 2.449489742783178}, "practicuscore.Region.get_access_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_refresh_token": {"tf": 1.4142135623730951}, "practicuscore.Region.get_workspace_credentials": {"tf": 2}, "practicuscore.Region.recreate_model_deployment": {"tf": 1.4142135623730951}, "practicuscore.Region.change_password": {"tf": 2.449489742783178}, "practicuscore.Worker": {"tf": 2.8284271247461903}, "practicuscore.Worker.upload_files": {"tf": 2}, "practicuscore.Worker.download_files": {"tf": 2}, "practicuscore.Worker.run_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.check_task": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_notebook": {"tf": 1.4142135623730951}, "practicuscore.Worker.open_vscode": {"tf": 2}, "practicuscore.Worker.open_workspace": {"tf": 1.4142135623730951}, "practicuscore.Worker.get_workspace_credentials": {"tf": 1.4142135623730951}, "practicuscore.Worker.ping": {"tf": 2}, "practicuscore.Worker.wait_until_ready": {"tf": 2}, "practicuscore.Worker.get_logs": {"tf": 1.4142135623730951}, "practicuscore.Process": {"tf": 2}, "practicuscore.get_logger": {"tf": 1.4142135623730951}, "practicuscore.set_logging_level": {"tf": 2}, "practicuscore.WorkerConfig": {"tf": 2}, "practicuscore.DistJobConfig": {"tf": 2}, "practicuscore.get_region": {"tf": 1.4142135623730951}}, "df": 135}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.apps.get_user_groups": {"tf": 1}, "practicuscore.engines.get_spark_session": {"tf": 1}, "practicuscore.Process": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"practicuscore.Process.run_custom_sql": {"tf": 1}, "practicuscore.Process.find_model": {"tf": 1.4142135623730951}, "practicuscore.Process.predict": {"tf": 1}}, "df": 3}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"practicuscore.mq": {"tf": 2.449489742783178}, "practicuscore.mq.apply_topology": {"tf": 1}, "practicuscore.mq.export_topology": {"tf": 1}, "practicuscore.MQConfig.queue": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.exchange_type": {"tf": 1}, "practicuscore.MQConfig.routing_key": {"tf": 1.4142135623730951}}, "df": 6, "s": {"docs": {"practicuscore.MQConfig": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"practicuscore.auth": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"practicuscore.MQConfig.prefetch_count": {"tf": 1}}, "df": 1}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"practicuscore.models": {"tf": 1}, "practicuscore.models.zip": {"tf": 2}, "practicuscore.models.unzip": {"tf": 1.7320508075688772}}, "df": 3}}}, "x": {"docs": {"practicuscore.apps.deploy": {"tf": 1}, "practicuscore.containers.build_image": {"tf": 1.4142135623730951}, "practicuscore.MQConfig.max_retries": {"tf": 1}, "practicuscore.APISpec.custom_attributes": {"tf": 1.7320508075688772}}, "df": 4, "y": {"docs": {}, "df": 0, "z": {"docs": {"practicuscore.notify.send": {"tf": 1}}, "df": 1}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();